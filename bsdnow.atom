<?xml version="1.0" encoding="utf-8"?>
<feed
        xml:lang="en-us"
        xmlns="http://www.w3.org/2005/Atom"
        xmlns:smi="https://www.betterfeeds.org/series-media-info"
        xmlns:media="http://search.yahoo.com/mrss/"
        xmlns:psc="http://podlove.org/simple-chapters">
    <title>BSD Now</title>
    <subtitle>A weekly show covering the latest developments in the world of the BSD family of operating systems. News,
        Tutorials and Interviews for new users and long time developers alike.
    </subtitle>
    <icon>http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg</icon>
    <media:thumbnail
            url="http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="self"
            type="application/atom+xml"
            title="BSD Now"/>
    <link
            href="http://www.bsdnow.tv/"
            rel="alternate"
            type="text/html"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMp3"
            rel="related"
            type="application/rss+xml"
            title="BSD Now MP3 Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowOgg"
            rel="related"
            type="application/rss+xml"
            title="BSD Now OGG Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMobile"
            rel="related"
            type="application/rss+xml"
            title="BSD Now SD Video"/>
    <link
            href="http://feeds.feedburner.com/BsdNowHd"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video"/>
    <link
            href="http://bitlove.org/jupiterbroadcasting/bsdnowhd/feed"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video (BitTorrent)"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2016-08.atom"
            rel="next"
            type="application/atom+xml"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="first"
            type="application/atom+xml"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2013-09.atom"
            rel="last"
            type="application/atom+xml"/>
    <id>http://www.bsdnow.tv/</id>
    <updated>2016-09-09T08:59:00Z</updated>
    <author>
        <name>Jupiter Broadcasting</name>
        <uri>www.jupiterbroadcasting.com</uri>
    </author>
    <smi:sequential>false</smi:sequential>
    <entry>
        <title>Ham, Radio &amp; Pie, Oh My!</title>
        <smi:episode>158</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_00_07-ham_radio_and_pie_oh_my"/>
        <id>http://www.bsdnow.tv/episodes/2016_09_07-ham_radio_and_pie_oh_my</id>
        <published>2016-09-08T12:11:51-07:00</published>
        <updated>2016-09-09T07:28:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0158.ogg"
                rel="enclosure"
                length="83178443"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0158.ogg"
                    fileSize="83178443"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jbmirror/bsd-0158.mp3"
                    fileSize="52738602"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0158-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:02:09" title="Headlines"/>
            <psc:chapter start="00:02:09" title="PC-BSD is now TrueOS"
                         href="https://www.trueos.org/2016/09/01/pc-bsd-evolves-into-trueos/"/>
            <psc:chapter start="00:14:10" title="The Voicemail Scammers Never Got Past Our OpenBSD Greylisting"
                         href="http://bsdly.blogspot.com/2016/08/the-voicemail-scammers-never-got-past.html"/>
            <psc:chapter start="00:16:55" title="FreeBSD on a tiny system; what's missing"
                         href="http://adrianchadd.blogspot.com/2016/08/freebsd-on-tiny-system-whats-missing.html"/>
            <psc:chapter start="00:26:15" title="So I lost my OpenBSD FDE password"
                         href="https://blog.filippo.io/so-i-lost-my-openbsd-fde-password/"/>
            <psc:chapter start="00:34:44" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:37:35" title="Interview"/>
            <psc:chapter start="01:05:50" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="01:08:35" title="News Roundup"/>
            <psc:chapter start="01:08:35" title="See Michael W. Lucas in 2016"
                         href="http://blather.michaelwlucas.com/archives/2739"/>
            <psc:chapter start="01:10:05" title="It’s hard work printing nothing"
                         href="http://www.tedunangst.com/flak/post/its-hard-work-printing-nothing"/>
            <psc:chapter start="01:17:39" title="Revisiting W^X with OpenBSD 6.0"
                         href="http://blog.acumensecurity.net/revisiting-wx-with-openbsd-6-0/"/>
            <psc:chapter start="01:27:05" title="OpenBSD imports a letsencrypt client into the base system"
                         href="http://undeadly.org/cgi?action=article&amp;sid=20160901060733"/>
            <psc:chapter start="01:28:30" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:30:21" title="Beastie Bits"/>
            <psc:chapter start="01:30:21" title="OpenBSD: Release Songs 6.0: &quot;Goodbye&quot; -- no more CD releases"
                         href="https://www.openbsd.org/lyrics.html#60f"/>
            <psc:chapter start="01:30:52" title="FreeBSD 101 Hacks"
                         href="https://nanxiao.gitbooks.io/freebsd-101-hacks/content/"/>
            <psc:chapter start="01:32:03" title="LibreSSL enabled by default in HardenedBSD"
                         href="https://hardenedbsd.org/article/shawn-webb/2016-08-20/libressl-enabled-default"/>
            <psc:chapter start="01:32:22"
                         title="DragonflyBSD removes last bits of 32-bit Linux emulation and has no plans to implement 64-bit linux emulation"
                         href="http://lists.dragonflybsd.org/pipermail/commits/2016-August/624241.html"/>
            <psc:chapter start="01:33:03" title="OpenBSD has sent 32bit sparc to the great bitbucket in the sky"
                         href="https://twitter.com/phessler/status/771277693090467840"/>
            <psc:chapter start="01:33:15" title="Front Range BSD User Group September Meeting"
                         href="http://slexy.org/view/s2hm4HBkb2"/>
            <psc:chapter start="01:35:07" title="KnoxBug TrueOS Wrap-up"
                         href="http://knoxbug.org/content/going-with-the-flow"/>
            <psc:chapter start="01:36:05" title="Feedback/Questions"/>
            <psc:chapter start="01:36:05" title="Cody - TrueOS Questions" href="http://pastebin.com/mVK8G1Vr"/>
            <psc:chapter start="01:38:26" title="John - FreeNAS Backups" href="http://pastebin.com/xsUNUfCS"/>
            <psc:chapter start="01:39:38" title="Herminio - PowerPC + OpenBSD" href="http://pastebin.com/nHkWuNkm"/>
            <psc:chapter start="01:40:52" title="Dennis - pmake vs bmake" href="http://pastebin.com/NAh7r6Ed"/>
            <psc:chapter start="01:45:03" title="Al - Upgrade conflicts" href="http://pastebin.com/8HaK7yJ6"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Diane Bruce</name>
            <email>db@freebsd.org</email>
            <uri>https://twitter.com/Dianora_1</uri>
        </contributor>
        <summary>This week on BSDNow, we'll be talking to Diane Bruce about using it for Ham Radio Enthusiasts, the
            RPi3. That plus all the latest news from the week &amp; more, stick around for your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 158: Ham, Radio and Pie (oh my)&lt;/h1&gt;

            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.trueos.org/2016/09/01/pc-bsd-evolves-into-trueos/&quot;&gt;PC-BSD is
            now TrueOS&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;If you’ve been watching this show the past few months, I’ve been dropping little hints about the
            upcoming rename of PC-BSD -&amp;gt; TrueOS. We’ve made that more official finally, and are asking folks to
            test out the software before a wider announcement this fall.&lt;/li&gt;
            &lt;li&gt;For those wondering about the name change, it’s been something discussed over the past few years
            at different times. With us beginning to move more aggressively with changes for 11.0 (and eventually
            12-CURRENT), the time seemed right to have a fresh start, using it as a spring-board to introduce all the
            changes in both software, and development / release model.&lt;/li&gt;
            &lt;li&gt;I’ll be discussing more about this shift in a talk at MeetBSD2016 (Another reason for you to go),
            but here’s some of the highlights.&lt;/li&gt;
            &lt;li&gt;No longer tied to specific FreeBSD point-releases, TrueOS will instead follow a rolling-release
            model based upon FreeBSD -CURRENT.&lt;/li&gt;
            &lt;li&gt;Special tooling and features (Such as boot-environments) make this a feasible option that we
            didn’t have as easily in the early days of PC-BSD.&lt;/li&gt;
            &lt;li&gt;In addition, TrueOS builds some things different from vanilla FreeBSD. Specifically Matt Macy’s
            DRM and Linux Compat work, LibreSSL directly in base, built from External Toolchain (No clang in base system
            package) and much more. &lt;/li&gt;
            &lt;li&gt;New tools have have replaced, and are in the process of replacing the legacy PC-BSD control panel
            as well, which allows remote operation, either via Qt GUI, or WebSockets / REST API’s. &lt;/li&gt;
            &lt;li&gt;I’ll be talking about more as things unfold, but for now please feel free to test and let us have
            feedback while we push towards a more stable release.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://bsdly.blogspot.com/2016/08/the-voicemail-scammers-never-got-past.html&quot;&gt;The
            Voicemail Scammers Never Got Past Our OpenBSD Greylisting&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Peter Hansteen (That grumpy BSD guy) gives us an interesting look at how their OpenBSD
            grey-listing prevented spam from ever making it to their inbox.&lt;/li&gt;
            &lt;li&gt;Specifically it looks like it occurred during Aug 23rd and 24th, with a particularly nasty
            ransomware payload destined to play havoc with Windows systems.&lt;/li&gt;
            &lt;li&gt;Peter then walks us through their three-server mail setup, and how spamd is run in greylisting
            mode on each.&lt;/li&gt;
            &lt;li&gt;The results? Nothing short of perfection:
            &amp;gt; “From those sources we can see that there were a total of 386 hosts that attempted delivery, to a
            total of 396 host and target email pairs (annotated here in a .csv file
            with geographic origin according to whois). The interesting part came when I started looking at the mail
            server logs to see how many had reached the content filtering or had even been passed on in the direction of
            users&#39; mailboxes. There were none. The number of messages purportedly from voicemail@ in any of the
            domains we handle that made it even to the content filtering stage was 0. Zero. Not a single one made it
            through even to content filtering.”&lt;/li&gt;
            &lt;li&gt;Not bad at all! Looks like spam-trap addresses + grey-listing is the way to go for stopping this
            kind of foolishness. Checkout Peter’s blog post for more details, but perhaps this will encourage you to
            setup a similar-type system for your business.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://adrianchadd.blogspot.com/2016/08/freebsd-on-tiny-system-whats-missing.html&quot;&gt;FreeBSD
            on a tiny system; what’s missing&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Adrian Chadd talks about some of the bits that are missing to make FreeBSD truly useful on small
            embedded devices&lt;/li&gt;
            &lt;li&gt;Some of this stuff can be done now, but requires more work than it should&lt;/li&gt;
            &lt;li&gt;“The first is a lack of real service management. FreeBSD doesn&#39;t have a service management
            daemon - the framework assumes that daemons implement their own background and monitoring. It would be much
            nicer if init or something similar to init could manage services and start/restart them where appropriate.”&lt;/li&gt;
            &lt;li&gt;Of course, on a system with 32mb of memory, such a service manager would need to be very light
            weight&lt;/li&gt;
            &lt;li&gt;“maybe I want to only start telnetd or dropbear/sshd whenever a connection comes in. But I&#39;d
            also like to be able to add services for monitoring, such as dnsmasq and hostapd.”&lt;/li&gt;
            &lt;li&gt;telnetd and sshd can be run from inetd, but often depend on special support from the daemon&lt;/li&gt;
            &lt;li&gt;“The next is a lack of suitable syslog daemon. Yes, I&#39;d like to be able to log some messages
            locally - even if it&#39;s only a couple hundred kilobytes of messages. I&#39;d also like to be able to push
            messages to a remote service. Unfortunately the FreeBSD syslog daemon doesn&#39;t do log rotation or maximum
            log file sizes itself - it&#39;s done by &quot;newsyslog&quot; which runs out of cron. This isn&#39;t any
            good for real embedded systems with limited storage.”&lt;/li&gt;
            &lt;li&gt;Syslog leaves much to be desired, especially in its configuration syntax, and filtering
            capabilities. Having it be able to detect with log files have grown beyond a reasonable size and fire off
            newsyslog would be very interesting&lt;/li&gt;
            &lt;li&gt;“Then yes, there&#39;s a lack of a cron service. It&#39;d be nice to have that integrated into the
            service management framework so things could be easily added/removed. I may just use cron, but that means
            cron is also always running which adds memory footprint (~1.3 megabytes) for something that is almost never
            actually active. When you have 32MB of RAM, that&#39;s quite a bit of wasted memory.”&lt;/li&gt;
            &lt;li&gt;Systems have come back full circle, to where 32MB and 64MB are amounts of memory people expect to
            work with, while other people still want the system to perform well with 32 or 64 GB of memory&lt;/li&gt;
            &lt;li&gt;It will be interesting to see how this balancing act plays out, trying to make the same codebase
            useful for extremely small and extremely large systems at the same time, while also running it on your
            middle of the road laptop.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://blog.filippo.io/so-i-lost-my-openbsd-fde-password/&quot;&gt;So I lost my
            OpenBSD FDE password &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“The other day I set up a new OpenBSD instance with a nice RAID array, encrypted with Full Disk
            Encryption. And promptly proceeded to forget part of the passphrase.”&lt;/li&gt;
            &lt;li&gt;So they started a little project&lt;/li&gt;
            &lt;li&gt;Goal: “We need to extract enough info from the encrypted disk and rebuild enough of the decryption
            algorithm to be able to rapidly try many passphrases.”&lt;/li&gt;
            &lt;li&gt;The post walks through how they reverse engineered the encryption system from the source code and
            a hexdump of a small encrypted memory disk&lt;/li&gt;
            &lt;li&gt;“Now that we know how to extract the data and how to try passphrases against it, it will be
            trivial to write a bruteforce tool to recover the part of passphrase I forgot.”&lt;/li&gt;
            &lt;li&gt;So, rather than having to try every possible passphrase, they only had to try fuzzing around the
            known keyword that was their passphrase.&lt;/li&gt;
            &lt;li&gt;“UPDATE: I found it! After fixing a bug or two in the brute force tool and almost losing hope, it
            found the right combination of forgotten word and (Italian) misspelling.”&lt;/li&gt;
            &lt;li&gt;This work lead to the author recommending that OpenBSD consider &lt;a href=&quot;http://marc.info/?l=openbsd-tech&amp;amp;m=147316661717410&amp;amp;w=2&quot;&gt;strengthening
            the key derivation algorithm&lt;/a&gt; used in its FDE.&lt;/li&gt;
            &lt;li&gt;Rather than using a fixed number of rounds (8000 currently), do a small benchmark and determine
            how much work can be done in a reasonable amount of time&lt;/li&gt;
            &lt;li&gt;This is what FreeBSD’s GELI FDE does, targeting ‘over 2 million microseconds’ of work. On my
            desktop i5-3570 this results in 974842 rounds. The number will likely not be the same twice because of minor
            variations in how long it will take in microseconds.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Diane Bruce - &lt;a href=&quot;mailto:db@freebsd.org&quot;&gt;db@freebsd.org&lt;/a&gt;
            / &lt;a href=&quot;https://twitter.com/Dianora_1&quot;&gt;@Dianora_1&lt;/a&gt;&lt;/h2&gt;

            &lt;p&gt;Ham Radio, RPi3 and more!&lt;/p&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2739&quot;&gt;See Me &lt;sub&gt;&lt;sup&gt;(Michael
            W. Lucas)&lt;/sup&gt;&lt;/sub&gt; in 2016&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Looking for a chance to interact with author Michael W Lucas in meat-space? (That sounds wrong)&lt;/li&gt;
            &lt;li&gt;If so, he has posted a list of the up-coming conferences he’ll be speaking at, starting with Ohio
            LinuxFest Oct 7-8, where he’ll be giving an introduction to ZFS talk.&lt;/li&gt;
            &lt;li&gt;Nov 8th, he’ll also be at MUG (Michigan User Group) giving a PAM talk.&lt;/li&gt;
            &lt;li&gt;Sadly, no MeetBSD for Michael this year [moment of silence], but if you are able to make it to one
            of the aforementioned gatherings, be sure to bring your books for autographs. We promise he doesn’t bite.
            Much.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/its-hard-work-printing-nothing&quot;&gt;It’s
            hard work printing nothing&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“It all starts with a bug report to LibreSSL that the openssl tool crashes when it tries to print
            NULL. This bug doesn’t manifest on OpenBSD because libc will convert NULL strings to ”(null)” when printing.
            However, this behavior is not required, and as observed, it’s not universal. When snprintf silently accepts
            NULL, that simply leads to propagating the error.”&lt;/li&gt;
            &lt;li&gt;“There’s an argument to be made that silly error messages are better than crashing browsers, but
            stacking layers of sand seems like a poor means of building robust software in the long term.”&lt;/li&gt;
            &lt;li&gt;“As soon as development for the next release of OpenBSD restarted, some developers began testing a
            patch that would remove this crutch from printf.”&lt;/li&gt;
            &lt;li&gt;If you’d like to help with this work, see our call for volunteers from 2 weeks ago: &lt;a href=&quot;https://marc.info/?l=openbsd-misc&amp;amp;m=147059272201219&amp;amp;w=2&quot;&gt;opportunity
            to help: %s audit in mandoc &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Of course, immediately things started to complain. The configure script for talloc does a number
            of checks (check out the additional interesting observations by TedU here)&lt;/li&gt;
            &lt;li&gt;“The test checking that our snprintf function conforms to the C99 standard actually contains, at a
            minimum, 3 deviations from the standard. It should say “Checking for non-conformant vsnprintf”.”&lt;/li&gt;
            &lt;li&gt;“Of course, we’re dealing with NULL pointers, so all bets are off, but I wonder what people who
            expect printf NULL to work expect out of strlen? Does it return 0? Does it crash?”&lt;/li&gt;
            &lt;li&gt;So, talloc decides that the system printf is no good, and it should use its own bundled
            implementation&lt;/li&gt;
            &lt;li&gt;“After all the configure testing, eventually the build will fail, because somebody forgot to
            actually add the replacement object file to the Makefile.”&lt;/li&gt;
            &lt;li&gt;“If the replacement function has never been used, that’s hardly reassuring that it is actually
            better tested than the version we have in libc.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://blog.acumensecurity.net/revisiting-wx-with-openbsd-6-0/&quot;&gt;Revisiting
            W^X with OpenBSD 6.0&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;OpenBSD 6.0 includes enforcement of W^X in user-land&lt;/li&gt;
            &lt;li&gt;This prevents an application from being able to map a page of memory with both Write and Execute
            permissions (protecting mmap(2))&lt;/li&gt;
            &lt;li&gt;Once mapped a page of memory should not be able to have permissions escalated (protecting
            mprotect(2))&lt;/li&gt;
            &lt;li&gt;OpenBSD 6.0 enforces the strict W^X definition, and not the PaX/grsec “once write never execute”
            type of policy&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160901060733&quot;&gt;OpenBSD
            imports a letsencrypt client into the base system&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve mentioned letskencrypt before (A native C version of the letsencrypt client, developed by
            Kristaps).&lt;/li&gt;
            &lt;li&gt;Looks like it’s undergoing a name-change to “acme-client” and has made it’s way into OpenBSD’s
            base system!&lt;/li&gt;
            &lt;li&gt;This should ensure first-class support for management of Let’s Encrypt certificates, here’s hoping
            the portable version continues to thrive as well.&lt;/li&gt;
            &lt;li&gt;Congrats to Kristaps!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.openbsd.org/lyrics.html#60f&quot;&gt;OpenBSD: Release Songs
            6.0: &quot;Goodbye&quot; -- no more CD releases&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://nanxiao.gitbooks.io/freebsd-101-hacks/content/&quot;&gt;FreeBSD
            101 Hacks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://hardenedbsd.org/article/shawn-webb/2016-08-20/libressl-enabled-default&quot;&gt;LibreSSL
            enabled by default in HardenedBSD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/commits/2016-August/624241.html&quot;&gt;DragonflyBSD
            removes last bits of 32-bit Linux emulation and has no plans to implement 64-bit linux emulation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/phessler/status/771277693090467840&quot;&gt;OpenBSD
            has sent 32bit sparc to the great bitbucket in the sky&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://slexy.org/view/s2hm4HBkb2&quot;&gt;Front Range BSD User Group
            September Meeting&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://knoxbug.org/content/going-with-the-flow&quot;&gt;KnoxBug TrueOS
            Wrap-up&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/mVK8G1Vr&quot;&gt; Cody - TrueOS Questions &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/xsUNUfCS&quot;&gt; John - FreeNAS Backups&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/nHkWuNkm&quot;&gt; Herminio - PowerPC + OpenBSD &lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/NAh7r6Ed&quot;&gt; Dennis - pmake vs bmake&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/8HaK7yJ6&quot;&gt; Al - Upgrade conflicts&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>ZFS, The &quot;Universal&quot; Filesystem</title>
        <smi:episode>157</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_08_31-the_universal_filesystem"/>
        <id>http://www.bsdnow.tv/episodes/2016_08_31-the_universal_filesystem</id>
        <published>2016-09-01T03:09:16-07:00</published>
        <updated>2016-09-02T07:15:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.ogg"
                rel="enclosure"
                length="63454599"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.ogg"
                    fileSize="63454599"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.mp3"
                    fileSize="39884268"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0157-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:05" title="Headlines"/>
            <psc:chapter start="00:01:05" title="Registration for MeetBSD 2016 is now Open"
                         href="https://www.meetbsd.com/"/>
            <psc:chapter start="00:06:50" title="Dual Booting FreeBSD and Windows UEFI"
                         href="http://kev009.com/wp/2016/07/freebsd-uefi-root-on-zfs-and-windows-dual-boot/"/>
            <psc:chapter start="00:10:05" title="ZFS High-Availability NAS"
                         href="https://github.com/ewwhite/zfs-ha/wiki"/>
            <psc:chapter start="00:12:50" title="First public release of chyves - version 0.1.0"
                         href="http://chyves.org/"/>
            <psc:chapter start="00:15:20" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:17:24" title="Interview"/>
            <psc:chapter start="00:46:47" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:48:48" title="News Roundup"/>
            <psc:chapter start="00:48:48" title="ZFS Deadlock: 'Directory of Death'"
                         href="http://lists.freebsd.org/pipermail/freebsd-hackers/2016-July/049740.html"/>
            <psc:chapter start="00:53:21" title="New BSD Magazine out (2016-07)"
                         href="https://bsdmag.org/download/implementing-memory-cache-beast-architecture/"/>
            <psc:chapter start="00:56:10" title="DragonflyBSD and UEFI"
                         href="http://lists.dragonflybsd.org/pipermail/users/2016-July/270796.html"/>
            <psc:chapter start="00:57:36" title="Netflix and Fill"
                         href="http://techblog.netflix.com/2016/08/netflix-and-fill.html"/>
            <psc:chapter start="01:06:31" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:08:59" title="Beastie Bits"/>
            <psc:chapter start="01:08:59" title="Cover reveal for &quot;PAM Mastery&quot;"
                         href="http://blather.michaelwlucas.com/archives/2734"/>
            <psc:chapter start="01:09:51" title="LibertyBSD 5.9 is out - looking for mirrors"
                         href="http://libertybsd.net/download.html"/>
            <psc:chapter start="01:10:06" title="Unix for Poets"
                         href="https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf"/>
            <psc:chapter start="01:12:31" title="Feedback/Questions"/>
            <psc:chapter start="01:12:31" title="Chuck / Ingo - Get Involved" href="http://pastebin.com/ksq0rfph"/>
            <psc:chapter start="01:15:18" title="Oskar - Thanks" href="http://pastebin.com/YqzcHEMg"/>
            <psc:chapter start="01:16:28" title="Alex - SMF" href="http://pastebin.com/WvdVZbYc"/>
            <psc:chapter start="01:17:55" title="Raymond - RPI3" href="http://pastebin.com/JPWgzSGv"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Richard Yao</name>
            <email>ryao@gentoo.org</email>
        </contributor>
        <summary>This week on BSDNow, we have an interview with Richard Yao, who will be telling us about the experience
            &amp; challenges of porting ZFS to Linux. That plus the latest news &amp; feedback is coming your way, on
            your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 157: ZFS, The “Universal” File-system&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.meetbsd.com/&quot;&gt;Registration for MeetBSD 2016 is now Open &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“Beastie’s coming home!” This year, MeetBSD will be held at UC Berkeley’s Clark Kerr Campus&lt;/li&gt;
            &lt;li&gt;November 11th and 12th, preceded by a two day FreeBSD Vendor/Dev Summit (Nov 9th and 10th)&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;MeetBSD can be traced back to its humble roots as a local workshop for BSD developers and users,
            hosted annually in Poland since 2004. Since then, MeetBSD’s popularity has spread, and it’s now widely
            recognized as its own conference with participants from all over the world.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;The US version runs every two years in California since 2008, and now trades off with the east
            coast vBSDCon which runs on the odd years.&lt;/li&gt;
            &lt;li&gt;“MeetBSD 2016 uses a mixed unConference format featuring both scheduled talks and community-driven
            events such as birds-of-a-feather meetings, lightning talks, hackable presentations, stump the chumps, and
            speed geeking sessions. Speakers are to be determined – stay tuned for more information!”&lt;/li&gt;
            &lt;li&gt;Register before September 30th, and get $30 off&lt;/li&gt;
            &lt;li&gt;Kris and I will be there, along with lots of other FreeBSD Developers, Vendors, and Users.&lt;/li&gt;
            &lt;li&gt;MeetBSD’s unconference style does a very good job of mingling users with developers and is one of
            my favourite conferences.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://kev009.com/wp/2016/07/freebsd-uefi-root-on-zfs-and-windows-dual-boot/&quot;&gt;Dual
            Booting FreeBSD and Windows UEFI&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Looking to install FreeBSD alongside Windows 10? What happens if that that system is pre-installed
            and UEFI? Well you could run TrueOS, but if that isn’t your bag and you want vanilla FreeBSD we have you
            covered this week!&lt;/li&gt;
            &lt;li&gt;Over on Kevin Bowling’s blog, we have a detailed article showing exactly how to do that.&lt;/li&gt;
            &lt;li&gt;First up, as prep you’ll need to go into the Windows disk manager and shrink your existing NTFS
            partition.&lt;/li&gt;
            &lt;li&gt;You’ll need to next boot FreeBSD 11 or later.&lt;/li&gt;
            &lt;li&gt;From there the walkthrough takes us through disk partitioning using gpart, and setup of ZFS into a
            boot-environment friendly layout.&lt;/li&gt;
            &lt;li&gt;Once you get through the typical FreeBSD setup / extraction, the tutorial gives us a nice bonus,
            showing how to setup “rEFInd” for a graphical boot-menu. &lt;/li&gt;
            &lt;li&gt;A great walkthrough, and hopefully it encourages others to try out dual-booting “EFI-style”.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/ewwhite/zfs-ha/wiki&quot;&gt;ZFS High-Availability NAS&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Interested in a DiY HA ZFS NAS? Edmund White (ewwhite on github) has posted a very detailed look
            at how he has custom-rolled his own Linux + ZFS + HA setup.&lt;/li&gt;
            &lt;li&gt;Most of the concepts are already ones used in various other HA products, but it is interesting and
            informative to see a public detailed look at how ZFS and HA works.&lt;/li&gt;
            &lt;li&gt;In particular this setup require some very specific hardware, such as dual-port SAS drives, so you
            will have to pre-plan according.&lt;/li&gt;
            &lt;li&gt;The only bummer is this is a ZFS on Linux setup. Maybe this can serve as the guide / inspiration
            for somebody in our community to do their own FreeBSD + HA + ZFS setup and blog about it in similar detail.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://chyves.org/&quot;&gt;First public release of chyves - version 0.1.0&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;As bhyve continues to mature we are seeing tooling evolve around it. Enter ‘chyves’ which started
            life as a fork of iohyve.&lt;/li&gt;
            &lt;li&gt;We are looking to do an interview with the author in the near future, but we still want to bring
            you some of the new features / changes in this evolution of bhyve management.&lt;/li&gt;
            &lt;li&gt;First up, nearly every function from iohyve has either been re-written in part or full.&lt;/li&gt;
            &lt;li&gt;Among the new features, a full logging system (master and per-vm logs), multiple pool
            configurations, properties stored outside of ZFS (for speed) and self-upgrading. (Will that work with pkg’d
            version?)&lt;/li&gt;
            &lt;li&gt;In addition to the above features, the website has a large chart showing the original ‘iohyve’
            commands, and how that usage has changed moving to chyves. &lt;/li&gt;
            &lt;li&gt;Give it a spin, let the author know of issues!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Richard Yao - &lt;a href=&quot;mailto:ryao@gentoo.org&quot;&gt;ryao@gentoo.org&lt;/a&gt;&lt;/h2&gt;

            &lt;p&gt;Sr. Kernel Engineer at ClusterHQ - Major Contributor to ZFS on Linux&lt;/p&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.freebsd.org/pipermail/freebsd-hackers/2016-July/049740.html&quot;&gt;ZFS
            Deadlock: &#39;Directory of Death&#39;&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;A user reports that when they try to install npm (the Node.js package manager), their system
            deadlocks&lt;/li&gt;
            &lt;li&gt;It turns out, this was also hitting the FreeBSD package building machines&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=209158&quot;&gt;PR 209158 &lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;The problem was a race condition in the way renames are handled in the FreeBSD VFS vs how ZFS does
            them internally&lt;/li&gt;
            &lt;li&gt;This bug has existed since the original import of ZFS, but some other change caused it to happen
            much more frequently&lt;/li&gt;
            &lt;li&gt;“ZFS POSIX Layer is originally written for Solaris VFS which is very different from FreeBSD VFS.
            Most importantly many things that FreeBSD VFS manages on behalf of all filesystems are implemented in ZPL in
            a different Way. Thus, ZPL contains code that is redundant on FreeBSD or duplicates VFS functionality or, in
            the worst cases, badly interacts / interferes with VFS.”&lt;/li&gt;
            &lt;li&gt;“The most prominent problem is a deadlock caused by the lock order reversal of vnode locks that
            may happen with concurrent zfs&lt;em&gt;rename() and lookup(). The deadlock is a result of zfs&lt;/em&gt;rename()
            not observing the vnode locking contract expected by VFS.”&lt;/li&gt;
            &lt;li&gt;The fixes have been merged to the 10.x and 11.x branches&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://bsdmag.org/download/implementing-memory-cache-beast-architecture/&quot;&gt;New
            BSD Magazine out (2016-07)&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Articles include: Implementing in-memory cache in the BeaST architecture, Docker Cleanup, FreeNAS
            Getting Started Guide, and starting at the very beginning with open source&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://bsdmag.org/download/minix-3-free-open-source-operating-system-highly-reliable-flexible-secure/&quot;&gt;The
            August issue is also out &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;This issue features two articles about MINIX 3, continues the FreeNAS getting started guide,
            Optimizes the in-memory cache for the BeaST architecture, and talks about fixing failed ports for Hardened
            and LibreBSD&lt;/li&gt;
            &lt;li&gt;We hope to have an interview with the creator of the BeaST architecture in the coming weeks&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/users/2016-July/270796.html&quot;&gt;DragonflyBSD
            and UEFI&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve featured a few stories and walkthroughs about using UEFI to dual-boot BSD, and now its
            Dragonfly BSD’s turn.&lt;/li&gt;
            &lt;li&gt;Dave McFarlane writes into the DF mailing lists, telling us about the specific steps taken to get
            UEFI installed and boot-strapped on his system.&lt;/li&gt;
            &lt;li&gt;If you’ve done a FreeBSD manual UEFI install, the process looks very similar, but you will end up
            manually running ‘gpt’ to create partitions, installing dist files, and eventually installing boot1.efi into
            the FAT EFI partition.&lt;/li&gt;
            &lt;li&gt;Dave also ran into an issue with resulted in no /etc/fstab being present, and helpfully includes
            what his system needed to fully boot hammer properly.&lt;/li&gt;
            &lt;li&gt;Somebody should document this fully for DFLY, since I would expect to become more commonplace as
            commodity hardware is shipped with UEFI on by default.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://techblog.netflix.com/2016/08/netflix-and-fill.html&quot;&gt;Netflix and
            Fill &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The Netflix team has produced a technical blog post describing how their OpenConnect appliances
            work&lt;/li&gt;
            &lt;li&gt;First the content is received from the content provider, and the Netflix content team makes it
            ready for deployment, by transcoding the various bitrates, packaging the subtitles, etc.&lt;/li&gt;
            &lt;li&gt;The finished files are then pushed to Amazon S3 storage&lt;/li&gt;
            &lt;li&gt;“We deploy the majority of our updates proactively during configured fill windows. An important
            difference between our OpenConnect CDN and other commercial CDNs is the concept of proactive caching.
            Because we can predict with high accuracy what our members will watch and what time of day they will watch
            it, we can make use of non-peak bandwidth to download most of the content updates to the OCAs in our network
            during these configurable time windows. By reducing disk reads (content serving) while we are performing
            disk writes (adding new content to the OCAs), we are able to optimize our disk efficiency by avoiding
            read/write contention. The predictability of off-peak traffic patterns helps with this optimization, but we
            still only have a finite amount of time every day to get our content pre-positioned to where it needs to be
            before our traffic starts to ramp up and we want to make all of the OCA capacity available for content
            serving.”&lt;/li&gt;
            &lt;li&gt;The OCA may actually contain more than one copy of the same video, because each disk in the OCA is
            independent, storing the same video on two different disks will provide twice the available read bandwidth&lt;/li&gt;
            &lt;li&gt;Normally the filesystem cache would obviate the need for this, but the Netflix OCA has so much
            storage, and not a lot of memory, and the requests from users are offset enough that the cache is useless&lt;/li&gt;
            &lt;li&gt;“OCAs communicate at regular intervals with the control plane services, requesting (among other
            things) a manifest file that contains the list of titles they should be storing and serving to members. If
            there is a delta between the list of titles in the manifest and what they are currently storing, each OCA
            will send a request, during its configured fill window, that includes a list of the new or updated titles
            that it needs. The response from the control plane in AWS is a ranked list of potential download locations,
            aka fill sources, for each title.”&lt;/li&gt;
            &lt;li&gt;“It would be inefficient, in terms of both time and cost, to distribute a title directly from S3
            to all of our OCAs, so we use a tiered approach. The goal is to ensure that the title is passed from one
            part of our network to another using the most efficient route possible.”&lt;/li&gt;
            &lt;li&gt;The article then goes on to explain how they calculate the least cost filling source&lt;/li&gt;
            &lt;li&gt;“Now that Netflix operates in 190 countries and we have thousands of appliances embedded within
            many ISP networks around the world, we are even more obsessed with making sure that our OCAs get the latest
            content as quickly as possible while continuing to minimize bandwidth cost to our ISP partners.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits:&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2734&quot;&gt;Cover reveal for “PAM
            Mastery”&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://libertybsd.net/download.html&quot;&gt;LibertyBSD 5.9 is out - looking for
            mirrors&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf&quot;&gt;Unix for
            Poets&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/ksq0rfph&quot;&gt; Chuck / Ingo - Get Involved&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/YqzcHEMg&quot;&gt; Oskar - Thanks&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/WvdVZbYc&quot;&gt; Alex - SMF&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/JPWgzSGv&quot;&gt; Raymond - RPI3&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
</feed>
