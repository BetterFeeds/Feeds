<?xml version="1.0" encoding="utf-8"?>
<feed
        xml:lang="en-us"
        xmlns="http://www.w3.org/2005/Atom"
        xmlns:smi="https://www.betterfeeds.org/series-media-info"
        xmlns:media="http://search.yahoo.com/mrss/"
        xmlns:psc="http://podlove.org/simple-chapters">
    <title>BSD Now</title>
    <subtitle>A weekly show covering the latest developments in the world of the BSD family of operating systems. News, Tutorials and Interviews for new users and long time developers alike.</subtitle>
    <icon>http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg</icon>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="self" type="application/atom+xml; charset=utf-8" title="BSD Now"/>
    <link
            href="http://www.bsdnow.tv/"
            rel="alternate" type="text/html"/>
    <link
            href="https://itunes.apple.com/us/podcast/bsd-now-mp3/id701045710"
            rel="archives" type="text/html" title="iTunes - Audio"/>
    <link
            href="https://itunes.apple.com/cn/podcast/bsd-now-hd/id850665429"
            rel="archives" type="text/html" title="iTunes - Video"/>
    <link
            href="https://www.youtube.com/user/jupiterbroadcasting/videos"
            rel="archives" type="text/html" title="YouTube"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMp3"
            rel="archives" type="application/rss+xml" title="BSD Now MP3 Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowOgg"
            rel="archives" type="application/rss+xml" title="BSD Now OGG Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMobile"
            rel="archives" type="application/rss+xml" title="BSD Now SD Video"/>
    <link
            href="http://feeds.feedburner.com/BsdNowHd"
            rel="archives" type="application/rss+xml" title="BSD Now HD Video"/>
    <link
            href="http://bitlove.org/jupiterbroadcasting/bsdnowhd/feed"
            rel="archives" type="application/rss+xml" title="BSD Now HD Video (BitTorrent)"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2016-09.atom"
            rel="next" type="application/atom+xml; charset=utf-8"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="first" type="application/atom+xml; charset=utf-8"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2013-09.atom"
            rel="last" type="application/atom+xml; charset=utf-8"/>
    <id>http://www.bsdnow.tv/</id>
    <updated>2016-10-21T07:24:00Z</updated>
    <smi:sequential>false</smi:sequential>
    <author>
        <name>Allan Jude</name>
        <email>allan@jupiterbroadcasting.com</email>
        <uri>https://twitter.com/allanjude</uri>
    </author>
    <author>
        <name>Kris Moore</name>
        <email>kris@pcbsd.org</email>
        <uri>https://twitter.com/pcbsdkris</uri>
    </author>
    <entry>
        <title>Virtualized COW / PI?</title>
        <smi:episode>164</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_10_19-virtualized_cow_pi"/>
        <id>http://www.bsdnow.tv/episodes/2016_10_19-virtualized_cow_pi</id>
        <published>2016-10-20T06:06:07-07:00</published>
        <updated>2016-10-20T16:03:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0164.ogg"
                rel="enclosure"
                length="74780670"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0164.ogg"
                    fileSize="74780670"
                    type="audio/ogg"
                    medium="audio"
                    duration="6037"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jbmirror/bsd-0164.mp3"
                    fileSize="48485450"
                    type="audio/mpeg"
                    medium="audio"
                    duration="6037"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0164-432p.mp4"
                    fileSize="352277658"
                    type="video/mp4"
                    medium="video"
                    duration="6037"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0164.mp4"
                    fileSize="679780033"
                    type="video/mp4"
                    medium="video"
                    duration="6037"
                    isDefault="false"/>
            <media:content
                    url="http://bitlove.org/jupiterbroadcasting/bsdnowhd/bsd-0164.mp4.torrent"
                    type="application/x-bittorrent; enclosed=&quot;video/mp4&quot;"
                    medium="video"
                    fileSize="679780033"
                    duration="6037"
                    isDefault="false"/>
            <media:content
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/10/bsd-0164-v.jpg"
                    type="image/jpg"
                    medium="image"
                    fileSize="84371"
                    width="854"
                    height="506"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:25" title="Headlines"/>
            <psc:chapter start="00:01:25" title="OpenBSD hypervisor"
                         href="http://undeadly.org/cgi?action=article&amp;sid=20161012092516&amp;mode=flat&amp;count=15"/>
            <psc:chapter start="00:03:00" title="vkernels go COW"
                         href="http://lists.dragonflybsd.org/pipermail/commits/2016-October/624675.html"/>
            <psc:chapter start="00:05:25" title="FreeBSD-CURRENT now boot on RPI3"
                         href="https://wiki.freebsd.org/arm64/rpi3"/>
            <psc:chapter start="00:09:15" title="OpenBSD switches softraid crypto"
                         href="https://github.com/openbsd/src/commit/2ba69c71e92471fe05f305bfa35aeac543ebec1f"/>
            <psc:chapter start="00:16:25" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:17:10" title="Interview"/>
            <psc:chapter start="00:47:10" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:48:40" title="News Roundup"/>
            <psc:chapter start="00:48:40" title="EC2's most dangerous feature"
                         href="http://www.daemonology.net/blog/2016-10-09-EC2s-most-dangerous-feature.html"/>
            <psc:chapter start="00:56:35" title="Trying to break TrueNAS"
                         href="http://www.theregister.co.uk/2016/10/18/truenas_review/"/>
            <psc:chapter start="01:03:35" title="OpenBSD now officially on GitHub" href="https://github.com/openbsd"/>
            <psc:chapter start="01:05:25" title="LibertyBSD or OpenBSD on a libreboot system"
                         href="https://libreboot.org/docs/bsd/openbsd.html"/>
            <psc:chapter start="01:07:20" title="FreeNAS 9.10 – LAGG &amp; VLAN Overview"
                         href="https://www.youtube.com/watch?v=wqSH_uQSArQ"/>
            <psc:chapter start="01:11:05" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:12:55" title="Beastie Bits"/>
            <psc:chapter start="01:12:55" title="Remote BSD Developer Position is up for grabs"
                         href="https://www.cybercoders.com/bsd-developer-remote-job-305206"/>
            <psc:chapter start="01:14:00" title="Isilon is hiring for a FreeBSD Security position"
                         href="https://twitter.com/jeamland/status/785965716717441024"/>
            <psc:chapter start="01:14:35" title="Google has ported the Networked real-time multi-player BSD game"
                         href="https://github.com/google/web-bsd-hunt"/>
            <psc:chapter start="01:15:15" title="A bunch of OpenBSD Tips" href="http://www.vincentdelft.be/"/>
            <psc:chapter start="01:15:20" title="The last OpenBSD 6.0 Limited Edition CD has sold"
                         href="http://www.ebay.com/itm/-/332000602939"/>
            <psc:chapter start="01:15:45" title="Dan spots George Neville-Neil on TV at the Airport"
                         href="https://twitter.com/DLangille/status/788477000876892162"/>
            <psc:chapter start="01:15:45" title="gnn on CNN" href="https://www.youtube.com/watch?v=h7zlxgtBA6o"/>
            <psc:chapter start="01:17:45" title="SoloBSD releases v 6.0 built upon OpenBSD"
                         href="http://solobsd.blogspot.com/2016/10/release-solobsd-60-openbsd-edition.html"/>
            <psc:chapter start="01:18:10" title="Upcoming KnoxBug looks at PacBSD – Oct 25th"
                         href="http://knoxbug.org/content/2016-10-25"/>
            <psc:chapter start="01:18:50" title="Feedback/Questions"/>
            <psc:chapter start="01:18:50" title="Morgan – Ports and Packages" href="http://pastebin.com/Kr9ykKTu"/>
            <psc:chapter start="01:26:45" title="Mat – ZFS Memory" href="http://pastebin.com/EwpTpp6D"/>
            <psc:chapter start="01:29:30" title="Thomas – FreeBSD Path Length" href="http://pastebin.com/HYMPtfjz"/>
            <psc:chapter start="01:32:30" title="Cy – OpenBSD and NetHogs" href="http://pastebin.com/vGxZHMWE"/>
            <psc:chapter start="01:35:05" title="Lars – Editors" href="http://pastebin.com/5FMz116T"/>
        </psc:chapters>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Josh Paetzel</name>
            <uri>https://twitter.com/bsdunix4ever</uri>
        </contributor>
        <summary>This week on the show, we've got all sorts of goodies to discuss. Starting with, vmm, vkernels,
            raspberry pi &amp; much more! Some iX folks are visiting from out of town, maybe somebody will wander in
            here? Stick around, it's time for your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 164: Virtualized COW / PI?&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20161012092516&amp;amp;mode=flat&amp;amp;count=15&quot;&gt;vmm
            enabled &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;VMM, the OpenBSD hypervisor, has been imported into current&lt;/li&gt;
            &lt;li&gt;It has similar hardware requirements to bhyve, a Intel Nehalem or newer CPU with the hardware
            virtualization features enabled in the BIOS&lt;/li&gt;
            &lt;li&gt;AMD support has not been started yet&lt;/li&gt;
            &lt;li&gt;OpenBSD is the only supported guest&lt;/li&gt;
            &lt;li&gt;It would be interesting to hear from viewers that have tried it, and hear how it does, and what
            still needs more work&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/commits/2016-October/624675.html&quot;&gt;vkernels
            go COW&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The DragonflyBSD feature, vkernels, has gained a new Copy-On-Write functionality&lt;/li&gt;
            &lt;li&gt;Disk images can now be mounted RO or RW, but changes will not be written back to the image file&lt;/li&gt;
            &lt;li&gt;This allows multiple vkernels to share the same disk image&lt;/li&gt;
            &lt;li&gt;“Note that when the vkernel operates on an image in this mode, modifications will eat up system
            memory and swap, so the user should be cognizant of the use-case. Still, the flexibility of being able to
            mount the image R+W should not be underestimated.”&lt;/li&gt;
            &lt;li&gt;This is another feature we’d love to hear from viewers that have tried it out.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://wiki.freebsd.org/arm64/rpi3&quot;&gt;Basic support for the RPI3 has
            landed in FreeBSD-CURRENT&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The long awaited bits to allow FreeBSD to boot on the Raspberry Pi 3 have landed&lt;/li&gt;
            &lt;li&gt;There is still a bit of work to be done, some of the as mentioned in Oleksandr’s blog post:&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://kernelnomicon.org/?p=690&quot;&gt;Raspberry Pi support in HEAD&lt;/a&gt;
            &lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“Raspberry Pi 3 limited support was committed to HEAD. Most of drivers should work with upstream
            dtb, RNG requires attention because callout mode seems to be broken and there is no IRQ in upstream device
            tree file. SMP is work in progress. There are some compatibility issue with VCHIQ driver due to some
            assumptions that are true only for ARM platform. “&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;This is exciting work. No HDMI support (yet), so if you plan on trying this out make sure you have
            your USB-&amp;gt;Serial adapter cables ready to go.&lt;/li&gt;
            &lt;li&gt;Full Instructions to get started with your RPI 3 can be found on the &lt;a href=&quot;https://wiki.freebsd.org/arm64/rpi3&quot;&gt;FreeBSD
            Wiki&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Relatively soon, I imagine there will be a RaspBSD build for the RPI3 to make it easier to get
            started&lt;/li&gt;
            &lt;li&gt;Eventually there will be official FreeBSD images as well&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/openbsd/src/commit/2ba69c71e92471fe05f305bfa35aeac543ebec1f&quot;&gt;OpenBSD
            switches softraid crypto from PKCS5 PBKDF2 to bcrypt PBKDF.&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;After the discussion a few weeks ago when a user wrote a tool to brute force their forgotten
            OpenBSD Full Disk Encryption password (from a password list of possible variations of their password), it
            was discovered that OpenBSD defaulted to using just 8192 iterations of PKCSv5 for the key derivation
            function with a SHA1-HMAC&lt;/li&gt;
            &lt;li&gt;The number of iterations can be manually controlled by the user when creating the softraid volume&lt;/li&gt;
            &lt;li&gt;By comparison, FreeBSDs GELI full disk encryption used a benchmark to pick a number of iterations
            that would take more than 2 seconds to complete, generally resulting in a number of iterations over 1
            million on most modern hardware. The algorithm is based on a SHA512-HMAC&lt;/li&gt;
            &lt;li&gt;However, inefficiency in the implementation of PKCSv5 in GELI resulted in the implementation being
            50% slower than some other implementations, meaning the effective security was only about 1 second per
            attempt, rather than the intended 2 seconds. The improved PKCSv5 implementation is out for review currently.&lt;/li&gt;
            &lt;li&gt;This commit to OpenBSD changes the default key derivation function to be based on bcrypt and a
            SHA512-HMAC instead.&lt;/li&gt;
            &lt;li&gt;OpenBSD also now uses a benchmark to pick a number of of iterations that will take approximately 1
            second per attempt&lt;/li&gt;
            &lt;li&gt;“One weakness of PBKDF2 is that while its number of iterations can be adjusted to make it take an
            arbitrarily large amount of computing time, it can be implemented with a small circuit and very little RAM,
            which makes brute-force attacks using application-specific integrated circuits or graphics processing units
            relatively cheap. The bcrypt key derivation function requires a larger amount of RAM (but still not tunable
            separately, i. e. fixed for a given amount of CPU time) and is slightly stronger against such attacks, while
            the more modern scrypt key derivation function can use arbitrarily large amounts of memory and is therefore
            more resistant to ASIC and GPU attacks.”&lt;/li&gt;
            &lt;li&gt;The upgrade to the bcrypt, which has proven to be quite resistant to cracking by GPUs is a
            significant enhancement to OpenBSDs encrypted softraid feature&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Josh Paetzel - &lt;a href=&quot;mailto:email@email&quot;&gt;email@email&lt;/a&gt; /
            &lt;a href=&quot;https://twitter.com/bsdunix4ever&quot;&gt;@bsdunix4ever&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;MeetBSD&lt;/li&gt;
            &lt;li&gt;ZFS Panel&lt;/li&gt;
            &lt;li&gt;FreeNAS - graceful network reload&lt;/li&gt;
            &lt;li&gt;Pxeboot&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.daemonology.net/blog/2016-10-09-EC2s-most-dangerous-feature.html&quot;&gt;EC2&#39;s
            most dangerous feature&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Colin Percival, FreeBSD’s unofficial EC2 maintainer, has published a blog post about “EC2&#39;s
            most dangerous feature”&lt;/li&gt;
            &lt;li&gt;“As a FreeBSD developer — and someone who writes in C — I believe strongly in the idea of &quot;tools,
            not policy&quot;. If you want to shoot yourself in the foot, I&#39;ll help you deliver the bullet to your
            foot as efficiently and reliably as possible. UNIX has always been built around the idea that systems
            administrators are better equipped to figure out what they want than the developers of the OS, and it&#39;s
            almost impossible to prevent foot-shooting without also limiting useful functionality. The most powerful
            tools are inevitably dangerous, and often the best solution is to simply ensure that they come with
            sufficient warning labels attached; but occasionally I see tools which not only lack important warning
            labels, but are also designed in a way which makes them far more dangerous than necessary. Such a case is
            IAM Roles for Amazon EC2.”&lt;/li&gt;
            &lt;li&gt;“A review for readers unfamiliar with this feature: Amazon IAM (Identity and Access Management) is
            a service which allows for the creation of access credentials which are limited in scope; for example, you
            can have keys which can read objects from Amazon S3 but cannot write any objects. IAM Roles for EC2 are a
            mechanism for automatically creating such credentials and distributing them to EC2 instances; you specify a
            policy and launch an EC2 instance with that Role attached, and magic happens making time-limited credentials
            available via the EC2 instance metadata. This simplifies the task of creating and distributing credentials
            and is very convenient; I use it in my FreeBSD AMI Builder AMI, for example. Despite being convenient, there
            are two rather scary problems with this feature which severely limit the situations where I&#39;d recommend
            using it.”&lt;/li&gt;
            &lt;li&gt;“The first problem is one of configuration: The language used to specify IAM Policies is not
            sufficient to allow for EC2 instances to be properly limited in their powers. For example, suppose you want
            to allow EC2 instances to create, attach, detach, and delete Elastic Block Store volumes automatically —
            useful if you want to have filesystems automatically scaling up and down depending on the amount of data
            which they contain. The obvious way to do this is would be to &quot;tag&quot; the volumes belonging to an
            EC2 instance and provide a Role which can only act on volumes tagged to the instance where the Role was
            provided; while the second part of this (limiting actions to tagged volumes) seems to be possible, there is
            no way to require specific API call parameters on all permitted CreateVolume calls, as would be necessary to
            require that a tag is applied to any new volumes being created by the instance.”&lt;/li&gt;
            &lt;li&gt;“As problematic as the configuration is, a far larger problem with IAM Roles for Amazon EC2 is
            access control — or, to be more precise, the lack thereof. As I mentioned earlier, IAM Role credentials are
            exposed to EC2 instances via the EC2 instance metadata system: In other words, they&#39;re available from
            http://169.254.169.254/. (I presume that the &quot;EC2ws&quot; HTTP server which responds is running in
            another Xen domain on the same physical hardware, but that implementation detail is unimportant.) This makes
            the credentials easy for programs to obtain... unfortunately, too easy for programs to obtain. UNIX is
            designed as a multi-user operating system, with multiple users and groups and permission flags and often
            even more sophisticated ACLs — but there are very few systems which control the ability to make outgoing
            HTTP requests. We write software which relies on privilege separation to reduce the likelihood that a bug
            will result in a full system compromise; but if a process which is running as user nobody and chrooted into
            /var/empty is still able to fetch AWS keys which can read every one of the objects you have stored in S3, do
            you really have any meaningful privilege separation? To borrow a phrase from Ted Unangst, the way that IAM
            Roles expose credentials to EC2 instances makes them a very effective exploit mitigation mitigation
            technique.”&lt;/li&gt;
            &lt;li&gt;“To make it worse, exposing credentials — and other metadata, for that matter — via HTTP is
            completely unnecessary. EC2 runs on Xen, which already has a perfectly good key-value data store for
            conveying metadata between the host and guest instances. It would be absolutely trivial for Amazon to place
            EC2 metadata, including IAM credentials, into XenStore; and almost as trivial for EC2 instances to expose
            XenStore as a filesystem to which standard UNIX permissions could be applied, providing IAM Role credentials
            with the full range of access control functionality which UNIX affords to files stored on disk. Of course,
            there is a lot of code out there which relies on fetching EC2 instance metadata over HTTP, and trivial or
            not it would still take time to write code for pushing EC2 metadata into XenStore and exposing it via a
            filesystem inside instances; so even if someone at AWS reads this blog post and immediately says &quot;hey,
            we should fix this&quot;, I&#39;m sure we&#39;ll be stuck with the problems in IAM Roles for years to come.”&lt;/li&gt;
            &lt;li&gt;“So consider this a warning label: IAM Roles for EC2 may seem like a gun which you can use to
            efficiently and reliably shoot yourself in the foot; but in fact it&#39;s more like a gun which is difficult
            to aim and might be fired by someone on the other side of the room snapping his fingers. Handle with care!”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.theregister.co.uk/2016/10/18/truenas_review/&quot;&gt;Open-source
            storage that doesn&#39;t suck? Our man tries to break TrueNAS&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The storage reviewer over at TheRegister got their hands on a TrueNAS and gave it a try&lt;/li&gt;
            &lt;li&gt;“Data storage is difficult, and ZFS-based storage doubly so. There&#39;s a lot of money to be made
            if you can do storage right, so it&#39;s uncommon to see a storage company with an open-source model deliver
            storage that doesn&#39;t suck.”&lt;/li&gt;
            &lt;li&gt;“To become TrueNAS, FreeNAS&#39;s code is feature-frozen and tested rigorously. Bleeding-edge
            development continues with FreeNAS, and FreeNAS comes with far fewer guarantees than does TrueNAS.”&lt;/li&gt;
            &lt;li&gt;“iXsystems provided a Z20 hybrid storage array. The Z20 is a dual-controller, SAS-based,
            high-availability, hybrid storage array. The testing unit came with a 2x 10GbE NIC per controller and
            retails around US$24k. The unit shipped with 10x 300GB 10k RPM magnetic hard drives, an 8GB ZIL SSD and a
            200GB L2ARC SSD. 50GiB of RAM was dedicated to the ARC by the system&#39;s autotune feature.”&lt;/li&gt;
            &lt;li&gt;The review tests the performance of the TrueNAS, which they found acceptable for spinning rust,
            but they also tested the HA features&lt;/li&gt;
            &lt;li&gt;While the look of the UI didn’t impress them, the functionality and built in help did&lt;/li&gt;
            &lt;li&gt;“The UI contains truly excellent mouseover tooltips that provide detailed information and
            rationale for almost every setting. An experienced sysadmin will be able to navigate the TrueNAS UI with
            ease. An experienced storage admin who knows what all the terms mean won&#39;t have to refer to a wiki or
            the more traditional help manual, but the same can&#39;t be said for the uninitiated.”&lt;/li&gt;
            &lt;li&gt;“After a lot of testing, I&#39;d trust my data to the TrueNAS. I am convinced that it will ensure
            the availability of my data to within any reasonable test, and do so as a high availability solution. That&#39;s
            more than I can say for a lot of storage out there.”&lt;/li&gt;
            &lt;li&gt;“iXsystems produce a storage array that is decent enough to entice away some existing users of the
            likes of EMC, NetApp, Dell or HP. Honestly, that&#39;s not something I thought possible going into this
            review. It&#39;s a nice surprise.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/openbsd&quot;&gt;OpenBSD now officially on GitHub&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Got a couple of new OpenBSD items to bring to your attention today.&lt;/li&gt;
            &lt;li&gt;First up, for those who didn’t know, OpenBSD development has (always?) taken place in CVS, similar
            to NetBSD and previously FreeBSD. &lt;/li&gt;
            &lt;li&gt;However today, Git fans can rejoice, since there is now an “official” read-only github mirror of
            their sources for public consumption.&lt;/li&gt;
            &lt;li&gt;Since this is read-only, I will assume (unless told otherwise) that pull-requests and whatnot
            aren’t taken. But this will come in handy for the “git-enabled” among us who need an easier way to checkout
            OpenBSD sources.&lt;/li&gt;
            &lt;li&gt;There is also not yet a guarantee about the stability of the exporter. If you base a fork on the
            github branch, and something goes wrong with the exporter, the data may be reexported with different hashes,
            making it difficult to rebase your fork.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;h3&gt;&lt;a href=&quot;https://libreboot.org/docs/bsd/openbsd.html&quot;&gt;How to install LibertyBSD or
            OpenBSD on a libreboot system&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;For the second part of our OpenBSD stories, we have a pretty detailed document posted over at
            LibreBoot.org with details on how to boot-strap OpenBSD (Or LibertyBSD) using their open-source bios
            replacement.&lt;/li&gt;
            &lt;li&gt;We’ve covered blog posts and other tidbits about this process in the past, but this seems to be
            the definitive version (so far) to reference.&lt;/li&gt;
            &lt;li&gt;Some of the niceties include instructions on getting the USB image formatted not just on OpenBSD,
            but also FreeBSD, Linux and NetBSD.&lt;/li&gt;
            &lt;li&gt;Instructions on how to boot without full-disk-encryption are provided, with a mention that so far
            Libreboot + Grub does not support FDE (yet). I would imagine somebody will need to port over the openBSD FDE
            crypto support to GRUB, as was done with GELI at some point.&lt;/li&gt;
            &lt;li&gt;Lastly some instructions on how to configure grub, and troubleshoot if something goes wrong will
            help round-out this story. Give it a whirl, let us know if you run into issues.&lt;/li&gt;
            &lt;li&gt;Editorial Aside - Personally I find the libreboot stuff fascinating. It really is one of the last
            areas that we don’t have full control of our systems with open-source. With the growth of EFI, it seems we
            rely on a closed-source binary / mini-OS of sorts just to boot our Open Source solutions, which needs to be
            addressed. Hats off to the LibreBoot folks for taking on this important challenge.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=wqSH_uQSArQ&quot;&gt;FreeNAS 9.10 – LAGG &amp;amp;
            VLAN Overview&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;A video tutorial on FreeNAS’s official YouTube Channel&lt;/li&gt;
            &lt;li&gt;Covers the advanced networking features, Link Aggregation and VLANs&lt;/li&gt;
            &lt;li&gt;Covers what the features do, and in the case of LAGG, how each of the modes work and when you
            might want to use it&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.cybercoders.com/bsd-developer-remote-job-305206&quot;&gt;Remote
            BSD Developer Position is up for grabs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/jeamland/status/785965716717441024&quot;&gt;Isilon
            is hiring for a FreeBSD Security position &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/google/web-bsd-hunt&quot;&gt;Google has ported the
            Networked real-time multi-player BSD game&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vincentdelft.be&quot;&gt;A bunch of OpenBSD Tips&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.ebay.com/itm/-/332000602939&quot;&gt;The last OpenBSD 6.0
            Limited Edition CD has sold&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/DLangille/status/788477000876892162&quot;&gt;Dan
            spots George Neville-Neil on TV at the Airport &lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=h7zlxgtBA6o&quot;&gt;gnn on CNN&lt;/a&gt;
            &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://solobsd.blogspot.com/2016/10/release-solobsd-60-openbsd-edition.html&quot;&gt;SoloBSD
            releases v 6.0 built upon OpenBSD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://knoxbug.org/content/2016-10-25&quot;&gt;Upcoming KnoxBug looks at
            PacBSD - Oct 25th&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/Kr9ykKTu&quot;&gt; Morgan - Ports and Packages&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/EwpTpp6D&quot;&gt; Mat - ZFS Memory&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/HYMPtfjz&quot;&gt; Thomas - FreeBSD Path Length&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/vGxZHMWE&quot;&gt; Cy - OpenBSD and NetHogs&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/5FMz116T&quot;&gt; Lars - Editors&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>Return of the Cantrill</title>
        <smi:episode>163</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_10_12-return_of_the_cantrill"/>
        <id>http://www.bsdnow.tv/episodes/2016_10_12-return_of_the_cantrill</id>
        <published>2016-10-13T11:50:02-07:00</published>
        <updated>2016-10-19T08:31:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0163.ogg"
                rel="enclosure"
                length="102181872"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0163.ogg"
                    fileSize="102181872"
                    type="audio/ogg"
                    medium="audio"
                    duration="7890"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/bsd-0163.mp3"
                    fileSize="63311507"
                    type="audio/mpeg"
                    medium="audio"
                    duration="7890"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0163-432p.mp4"
                    fileSize="460191672"
                    type="video/mp4"
                    medium="video"
                    duration="7890"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0163.mp4"
                    fileSize="888322856"
                    type="video/mp4"
                    medium="video"
                    duration="7890"
                    isDefault="false"/>
            <media:content
                    url="http://bitlove.org/jupiterbroadcasting/bsdnowhd/bsd-0163.mp4.torrent"
                    type="application/x-bittorrent; enclosed=&quot;video/mp4&quot;"
                    medium="video"
                    fileSize="888322856"
                    duration="7890"
                    isDefault="false"/>
            <media:content
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/10/bsd-0163-v.jpg"
                    type="image/jpg"
                    medium="image"
                    fileSize="83207"
                    width="854"
                    height="506"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:10" title="Headlines"/>
            <psc:chapter start="00:01:10" title="FreeBSD 11.0-RELEASE Now Available"
                         href="https://lists.freebsd.org/pipermail/freebsd-announce/2016-October/001760.html"/>
            <psc:chapter start="00:09:00" title="ps consistency"
                         href="http://www.tedunangst.com/flak/post/process-listing-consistency"/>
            <psc:chapter start="00:12:05" title="DragonFlyBSD - Add basic power management support"
                         href="http://lists.dragonflybsd.org/pipermail/commits/2016-October/624673.html"/>
            <psc:chapter start="00:13:50" title="Dual boot OpenBSD with UEFI"
                         href="https://functionallyparanoid.com/2016/10/03/helping-out-an-internet-friend/"/>
            <psc:chapter start="00:17:40" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:20:00" title="Interview"/>
            <psc:chapter start="01:39:15" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="01:41:30" title="News Roundup"/>
            <psc:chapter start="01:41:30" title="After 22 Years, 386BSD Gets An Update"
                         href="https://bsd.slashdot.org/story/16/10/09/0230203/after-22-years-386bsd-gets-an-update"/>
            <psc:chapter start="01:43:55" title="Progress of the OpenBSD Limited Edition Signed CD set"
                         href="http://undeadly.org/cgi?action=article&amp;sid=20160929230557&amp;mode=expanded"/>
            <psc:chapter start="01:45:00"
                         title="PROTOTYPE FreeBSD Jail/ZFS based implementation of the Application Container Specification"
                         href="https://github.com/3ofcoins/jetpack"/>
            <psc:chapter start="01:47:40" title="Microsoft’s Forgotten Unix-based Operating System"
                         href="https://fossbytes.com/xenix-history-microsoft-unix-operating-system/"/>
            <psc:chapter start="01:50:50" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:52:20" title="Beastie Bits"/>
            <psc:chapter start="01:52:20" title="Ohio LinuxFest 2016 wrap-up"
                         href="http://blather.michaelwlucas.com/archives/2791"/>
            <psc:chapter start="01:53:05" title="Learn X in Y minutes Where X=zfs"
                         href="https://learnxinyminutes.com/docs/zfs/"/>
            <psc:chapter start="01:53:30" title="Add touchscreen support for the official 7&quot; RPi touch display"
                         href="https://svnweb.freebsd.org/base?view=revision&amp;revision=306430"/>
            <psc:chapter start="01:54:15" title="64-bit U-Boot on Raspberry Pi 3"
                         href="https://kernelnomicon.org/?p=682"/>
            <psc:chapter start="01:54:45" title="SNIA SDC 2016 Recap: Michael Dexter"
                         href="https://www.ixsystems.com/blog/snia-sdc-2016-recap-michael-dexter/"/>
            <psc:chapter start="01:54:55" title="OpenZFS: Stronger than ever"
                         href="https://www.ixsystems.com/blog/openzfs-devsummit-2016/"/>
            <psc:chapter start="01:55:20"
                         title="Accurate, Traceable, and Verifiable Time Synchronization for World Financial Markets"
                         href="http://nvlpubs.nist.gov/nistpubs/jres/121/jres.121.023.pdf"/>
            <psc:chapter start="01:55:45" title="ON HOLY WARS AND A PLEA FOR PEACE"
                         href="https://www.ietf.org/rfc/ien/ien137.txt"/>
            <psc:chapter start="01:56:25" title="Feedback/Questions"/>
            <psc:chapter start="01:56:25" title="Morgan - Zero-Filling an VM" href="http://pastebin.com/CYcqmW7P"/>
            <psc:chapter start="01:59:00" title="Charlie - ZFS Bit-Rot" href="http://pastebin.com/12mNW57h"/>
            <psc:chapter start="02:01:50" title="Matias - TrueOS / Launchd" href="http://pastebin.com/NfYWt2cu"/>
            <psc:chapter start="02:03:55" title="Dale - DO Feedback" href="http://pastebin.com/UvKh2WcF"/>
            <psc:chapter start="02:06:35" title="James - DO / FreeBSD Locks?" href="http://pastebin.com/0cdMc88U"/>
        </psc:chapters>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Bryan Cantrill</name>
            <email>bryan@joyent.com</email>
            <uri>https://twitter.com/bcantrill</uri>
        </contributor>
        <summary>The wait is over, FreeBSD 11.0 has officially launched! We'll cover that, plus a couple
            looks back at UNIX history &amp; a crowd-favorite guest today. Stick around for your place
            to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 163: Return of the Cantrill&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://lists.freebsd.org/pipermail/freebsd-announce/2016-October/001760.html&quot;&gt;FreeBSD
            11.0-RELEASE Now Available&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;FreeBSD 11.0-RELEASE is now officially out.&lt;/li&gt;
            &lt;li&gt;A last minute reroll to pickup OpenSSL updates and a number of other security fixes meant the
            release was a little behind schedule, and shipped as 11.0-RELEASE-p1, but the release is better for it&lt;/li&gt;
            &lt;li&gt;Improved support for 802.11n and various wifi drivers&lt;/li&gt;
            &lt;li&gt;Support for the AArch64 (arm64) architecture has been added.&lt;/li&gt;
            &lt;li&gt;Native graphics support has been added to the bhyve(8) hypervisor.&lt;/li&gt;
            &lt;li&gt;A new flag, “onifconsole” has been added to /etc/ttys. This allows the system to provide a login
            prompt via serial console if the device is an active kernel console, otherwise it is equivalent to off.&lt;/li&gt;
            &lt;li&gt;The xz(1) utility has been updated to support multi-threaded compression.&lt;/li&gt;
            &lt;li&gt;A number of kernel panics related to VNET have been fixed&lt;/li&gt;
            &lt;li&gt;The IMAGACT_BINMISC kernel configuration option has been enabled by default, which enables
            application execution through emulators, such as QEMU via binmiscctl(8).&lt;/li&gt;
            &lt;li&gt;The GENERIC kernel configuration has been updated to include the IPSEC option by default.&lt;/li&gt;
            &lt;li&gt;The kern.osrelease and kern.osreldate are now configurable jail(8) parameters&lt;/li&gt;
            &lt;li&gt;A new sysctl(8), kern.racct.enable, has been added, which when set to a non-zero value allows
            using rctl(8) with the GENERIC kernel. A new kernel configuration option, RACCT_DISABLED has also been
            added.&lt;/li&gt;
            &lt;li&gt;The minimum (arc&lt;em&gt;min) and maximum (arc&lt;/em&gt;max) values for the ZFS adaptive
            replacement cache can be modified at runtime.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;Changes to watch out for&lt;/strong&gt;:

            &lt;ul&gt;
            &lt;li&gt;OpenSSH DSA key generation has been disabled by default. It is important to update OpenSSH keys
            prior to upgrading. Additionally, Protocol 1 support has been removed.&lt;/li&gt;
            &lt;li&gt;By default, the ifconfig(8) utility will set the default regulatory domain to FCC on wireless
            interfaces. As a result, newly created wireless interfaces with default settings will have less chance to
            violate country-specific regulations.&lt;/li&gt;
            &lt;li&gt;An issue was discovered with Amazon&#174; EC2™ images which would cause the virtual machine to
            hang during boot when upgrading from previous FreeBSD versions. New EC2™ installations are not affected, but
            existing installations running earlier releases are advised to wait until the issue is resolved in an Errata
            Notice before upgrading. An Errata Notice to address this is planned following the release.&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/process-listing-consistency&quot;&gt;process
            listing consistency&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Ted Unangst asks: how consistent is the output of ps(1)?&lt;/li&gt;
            &lt;li&gt;If processes are starting and exiting constantly, and you run ps(1), is the output guaranteed to
            reflect that exact moment in time, or might it include some processes that have gone away before ps(1)
            exited, and include some processes that did not exist when ps(1) was started?&lt;/li&gt;
            &lt;li&gt;Ted provides a little example chicken/egg program to try to create such an inconsistency, so you
            can test out your OS&lt;/li&gt;
            &lt;li&gt;On OpenBSD ps(1) was switched away from the reading kernel memory directly, and instead uses the
            KERN&lt;em&gt;PROC&lt;/em&gt;ALL sysctl&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Thus sysctl can iterate over the entire process list, copying out information to ps(1), without
            blocking. If we prevent processes from forking or exiting during this time, we get a consistent snapshot.
            The snapshot may be stale, but it will never show us a viewpoint that never happened.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;So, OpenBSD will always be consistent, or will it?&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Is there a way to trick ps on OpenBSD? Not everything is consistent. There’s a separate sysctl,
            KERN&lt;em&gt;PROC&lt;/em&gt;ARGV, that reads the command line arguments for a process, but it only works on
            one process at a time. Processes can modify their own argv at any time.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;A second test program changes the process title of both the chicken and the egg, and if
            you run ps(1), you can get back a result that never actually happened.&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;The argv of the first program is read by ps(1), and in the meantime, it changes to a
            different value. The second program also changes its value, so now when ps(1) reads it, it sees the new
            value, not the original value from when ps(1) was started.&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;So the output is not that consistent, but is it worth the effort to try to make it so?&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/commits/2016-October/624673.html&quot;&gt;DragonFlyBSD
            - if_iwm - Add basic powermanagement support via ifconfig wlan0 powersave&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;WiFi can often be one of the biggest drains on your laptop battery, so anything we can do to
            improve the situation should be embraced. &lt;/li&gt;
            &lt;li&gt;Imre Vad&#195;&#161;sz over at the DragonFly project has done that, porting over a new set of
            power management support from Linux to the if_iwm driver. &lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;if_iwm - Add basic powermanagement support via ifconfig wlan0 powersave.&lt;/p&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;The DEVICE&lt;em&gt;POWER&lt;/em&gt;FLAGS&lt;em&gt;CAM&lt;/em&gt;MSK flag was removed in
            the upstream iwlwifi in Linux commit ceef91c89480dd18bb3ac51e91280a233d0ca41f.&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;Add sc&lt;em&gt;ps&lt;/em&gt;disabled flag to struct iwm&lt;em&gt;softc, which
            corresponds to mvm-&amp;gt;ps&lt;/em&gt;disabled in struct iwl_mvm in Linux iwlwifi.&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;Adds a hw.iwm.power&lt;em&gt;scheme tunable which corresponds to the power&lt;/em&gt;scheme
            module parameter in Linux iwlwifi. Set this to 1 for completely disabling power management, 2 (default) for
            balanced powermanagement, and 3 for lowerpower mode (which does dtim period skipping).&lt;/p&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;Imports the constants.h file from iwlwifi as if&lt;em&gt;iwm&lt;/em&gt;constants.h.&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;This doesn&#39;t allow changing the powermanagement setting while connected,
            also one can only choose between enabled and disabled powersaving with
            ifconfig (so switching between balanced and low-power mode requires
            rebooting to change the tunable).&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;After any changes to powermanagement (i.e. &quot;ifconfig wlan0 powersave&quot; to
            enable powermanagement, or &quot;ifconfig wlan0 -powersave&quot; for disabling
            powermanagement), one has to disconnect and reconnect to the accespoint
            for the change to take effect.“&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;Good stuff! These positive changes need to happen more often and sooner, so we can all eek out
            every drop of power from our respective laptops.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://functionallyparanoid.com/2016/10/03/helping-out-an-internet-friend/&quot;&gt;Helping
            out an Internet Friend…Dual boot OpenBSD &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Dual-booting OpenBSD and Linux, via UEFI. A year ago we wouldn’t be discussing this, but today we
            have an article where somebody has done exactly that.&lt;/li&gt;
            &lt;li&gt;This Journey was undertaken by Brian Everly (Indiana Bug), partly due to a friend who wanted to
            dual-boot his laptop which already has an existing UEFI install on it.&lt;/li&gt;
            &lt;li&gt;As a proof of concept, he began by replicating the setup in VMware with UEFI&lt;/li&gt;
            &lt;li&gt;He started by throwing Ubuntu into the VM, with some special attention paid to partitioning to
            ensure enough room left-over for OpenBSD later.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I created a 64MB EFI partition at the front of the disk. Next, I created a 20GB primary partition
            at the beginning of the space, mounted as the root (/) filesystem.&lt;/p&gt;

            &lt;p&gt;I then added a 4096MB swap partition for Ubuntu. Finally, I used the rest of the free space to
            create a Reserved BIOS Boot Area FAT32 partition that was not associated with a mount point – this is where
            I will be installing OpenBSD.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;With that done, he wrapped up the Ubuntu installation and then turned over to to the OpenBSD side.
            Some manual partitioning was required to install to the “Reserved FAT32” partition.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I mashed through the defaults in the OpenBSD installer until I got to the disk partitioning. Since
            I told VMWare to make my hard drive an IDE one, I knew I was playing around with wd0 and not sd0 (my USB
            key). I dumped into fdisk by selecting to (E)dit the partition scheme and saw my setup from Linux. First was
            the EFI partition (I am guessing I’ll have to copy my bootx64.efi file to that at some point), second was
            the Linux etx4 partition, third was my Linux swap partition and fourth was a weird looking one that is the
            “Reserved BIOS Boot” partition. That’s the one I’ll fiddle with.&lt;/p&gt;

            &lt;p&gt;Issuing the command “edit 3” allowed me to fiddle with that partition #3 (remember, we start
            counting at zero). I set it’s type to “A6” (OpenBSD) and then took the defaults with the exception of naming
            it “OpenBSD”. A quick “write” followed by a “quit” allowed me to update my new partition and get back to the
            installer.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;Once the installation was wrapped up (OpenBSD helpfully already created the /boot/EFI partition
            with the correct EFI loader installed) he was able to reboot and select between the two systems at the UEFI
            bios screen.&lt;/li&gt;
            &lt;li&gt;For kicks, he lastly went into Ubuntu and grabbed refind. Installing refind provided a fancy
            graphical selector between the two systems without too much trouble.&lt;/li&gt;
            &lt;li&gt;Next step will be to replicate this process on his friend’s laptop. Wishing you luck with that
            journey!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Bryan Cantrill - &lt;a href=&quot;mailto:email@email&quot;&gt;email@email&lt;/a&gt; /
            &lt;a href=&quot;https://twitter.com/user&quot;&gt;@twitter&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;CTO of Joyent&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://bsd.slashdot.org/story/16/10/09/0230203/after-22-years-386bsd-gets-an-update&quot;&gt;After
            22 Years, 386BSD Gets An Update&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Slashdot brings us an interesting mention this week, specifically that after 22 years, we now have
            an update to 386BSD.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;386BSD was last released back in 1994 with a series of articles in Dr. Dobb&#39;s Journal -- but
            then developers for this BSD-based operating system started migrating to both FreeBSD and NetBSD. An
            anonymous Slashdot reader writes: The last known public release was version 0.1. Until Wednesday, when Lynne
            Jolitz, one of the co-authors of 386BSD, released the source code to version 1.0 as well as 2.0 on Github.&lt;/p&gt;

            &lt;p&gt;386BSD takes us back to the days when you could count every file in your Unix distribution and more
            importantly, read and understand all of your OS source code. 386BSD is also the missing link between BSD and
            Linux. One can find fragments of Linus Torvalds&#39;s math emulation code in the source code of 386BSD. To
            quote Linus: &quot;If 386BSD had been available when I started on Linux, Linux would probably never had
            happened.”&lt;/p&gt;

            &lt;p&gt;Though it was designed for Intel 80386 microprocessors, there&#39;s already instructions for
            launching it on the hosted hardware virtualization service Qemu.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;There you have it! Go grab the new hotness that is 386BSD and run it in 2016! Or perhaps you want
            FreeBSD 11, but to each their own.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160929230557&amp;amp;mode=expanded&quot;&gt;Progress
            of the OpenBSD Limited Edition Signed CD set&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;An update from a story last week! We mentioned the “very” limited edition OpenBSD 6.0 signed CD
            sets that had gone up for Auction on Ebay. (With proceeds to support for Foundation)&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;As of today, here’s where we stand:&lt;/p&gt;

            &lt;ul&gt;
            &lt;li&gt;CD set #1 (Sep 29th + 5 days) &lt;a href=&quot;http://www.ebay.com/itm/-/331985953783&quot;&gt;sold
            for $4200&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;CD set #2 (Oct 4th + 3 days) &lt;a href=&quot;http://www.ebay.com/itm/-/331990536246&quot;&gt;sold
            for $3000&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;CD set #3 (Oct 8th + 3 days) &lt;a href=&quot;http://www.ebay.com/itm/-/331994217419&quot;&gt;sold
            for $817&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;CD set #4 (Oct 11th + 3 days) is &lt;a href=&quot;http://www.ebay.com/itm/-/331997031152&quot;&gt;currently
            up for bidding&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;There you have it! The 4th set is almost wrapped up bidding, and the 5th and last set is
            not far behind. Be sure to grab your piece of BSD history before its gone!&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/3ofcoins/jetpack&quot;&gt;&lt;strong&gt;PROTOTYPE&lt;/strong&gt;
            FreeBSD Jail/ZFS based implementation of the Application Container Specification&lt;/a&gt;&lt;/h3&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“Jetpack is an experimental and incomplete implementation of the App Container Specification for
            FreeBSD. It uses jails as isolation mechanism, and ZFS for layered storage.”
            “This document uses some language used in Rocket, the reference implementation of the App Container
            Specification. While the documentation will be expanded in the future, currently you need to be familiar at
            least with Rocket&#39;s README to understand everything.”
            + A standard with multiple implementations, that allow substitution of components, such as FreeBSD Jails
            instead of docker/lxc etc, and ZFS instead of overlayfs etc, is very exciting&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://fossbytes.com/xenix-history-microsoft-unix-operating-system/&quot;&gt;Microsoft’s
            Forgotten Unix-based Operating System&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Do you remember the good old days. You know, when Microsoft was the driving force behind UNIX?
            Wait, what did you say you may be thinking? It’s true, and lets sit back and let FossBytes tell us a tale of
            what once was reality.&lt;/li&gt;
            &lt;li&gt;The story begins sometime in the late 70’s:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Turning back the pages to the late 1970’s, Microsoft entered into an agreement with AT&amp;amp;T
            Corporation to license Unix from AT&amp;amp;T. While the company didn’t sell the OS to public, it licensed
            it to other OEM vendors like Intel, SCO, and Tandy.&lt;/p&gt;

            &lt;p&gt;As Microsoft had to face legal trouble due to “Unix” name, the company renamed it and came up with
            its own Unix distribution. So, AT&amp;amp;T licensed Unix to Redmond that was passed on to other OEMs as
            Xenix.&lt;/p&gt;

            &lt;p&gt;It’s interesting to recall a time when Microsoft enabled people to run Unix — an operating system
            originally designed for large and multiuser systems — on a microcomputer. Even though it came first, Unix
            was probably more powerful than MS-DOS.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;So whatever happened to this microsoft-flavored UNIX you may ask? Sadly it was ditched for DOS due
            to $REASONS:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;In early 1980’s, IBM was looking for an OS to power its PC. As IBM didn’t want to maintain any ties
            with the recently split AT&amp;amp;T, Xenix was automatically rejected. To fulfill, the tech giant’s demand,
            Microsoft bought 86-DOS from Seattle Computer Products and managed to convince IBM to use it in their
            systems.&lt;/p&gt;

            &lt;p&gt;Slowly, Microsoft started losing interest in Xenix and traded the full rights of Xenix with SCO, a
            Xenix partner company. The company filed bankruptcy in 2007 before taking the Xenix legacy to the 21st
            century in the form of Open Server, previously known as SCO Unix and SCO Open Desktop.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;An interesting chapter in UNIX history to be sure, and funny enough may come full-circle someday
            with Microsoft beginning to show interest in UNIX and BSD once again.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2791&quot;&gt;Ohio LinuxFest
            2016 wrap-up&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://learnxinyminutes.com/docs/zfs/&quot;&gt;Learn X in Y minutes
            Where X=zfs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://svnweb.freebsd.org/base?view=revision&amp;amp;revision=306430&quot;&gt;Add
            touchscreen support for the official 7&quot; RPi touch display &lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://kernelnomicon.org/?p=682&quot;&gt;64-bit U-Boot on Raspberry Pi
            3 &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.ixsystems.com/blog/snia-sdc-2016-recap-michael-dexter/&quot;&gt;SNIA
            SDC 2016 Recap: Michael Dexter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.ixsystems.com/blog/openzfs-devsummit-2016/&quot;&gt;OpenZFS:
            Stronger than ever&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/jres/121/jres.121.023.pdf&quot;&gt;Accurate,
            Traceable, and Verifiable Time Synchronization for World Financial Markets&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.ietf.org/rfc/ien/ien137.txt&quot;&gt;ON HOLY WARS AND A PLEA
            FOR PEACE&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/CYcqmW7P&quot;&gt; Morgan - Zero-Filling an VM&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/12mNW57h&quot;&gt; Charlie - ZFS Bit-Rot&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/NfYWt2cu&quot;&gt; Matias - TrueOS / Launchd&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/UvKh2WcF&quot;&gt; Dale - DO Feedback&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/0cdMc88U&quot;&gt; James - DO / FreeBSD Locks?&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>The Foundation of NetBSD</title>
        <smi:episode>162</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_10_05-the_foundation_of_netbsd_"/>
        <id>http://www.bsdnow.tv/episodes/2016_10_06-the_foundation_of_netbsd</id>
        <published>2016-10-06T12:05:22-07:00</published>
        <updated>2016-10-07T07:44:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0162.ogg"
                rel="enclosure"
                length="85391158"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0162.ogg"
                    fileSize="85391158"
                    type="audio/ogg"
                    medium="audio"
                    duration="6371"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/bsd-0162.mp3"
                    fileSize="51162269"
                    type="audio/mpeg"
                    medium="audio"
                    duration="6371"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0162-432p.mp4"
                    fileSize="371792027"
                    type="video/mp4"
                    medium="video"
                    duration="6371"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0162.mp4"
                    fileSize="717447865"
                    type="video/mp4"
                    medium="video"
                    duration="6371"
                    isDefault="false"/>
            <media:content
                    url="http://bitlove.org/jupiterbroadcasting/bsdnowhd/bsd-0162.mp4.torrent"
                    type="application/x-bittorrent; enclosed=&quot;video/mp4&quot;"
                    medium="video"
                    fileSize="717447865"
                    duration="6371"
                    isDefault="false"/>
            <media:content
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/10/bsd-0162-v.jpg"
                    type="image/jpg"
                    medium="image"
                    fileSize="87694"
                    width="854"
                    height="506"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:15" title="Headlines"/>
            <psc:chapter start="00:01:15" title="What is new on EC2 for FreeBSD 11.0-RELEASE"
                         href="http://www.daemonology.net/blog/2016-10-03-FreeBSD-EC2-11-0-RELEASE.html"/>
            <psc:chapter start="00:09:10"
                         title="Upgrading Amazon EC2 instance from 10.3 to 11.0-PRERELEASE results in hang at boot"
                         href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=213196"/>
            <psc:chapter start="00:19:35" title="OpenBSD 6.0 Limited Edition CD set (signed by developers)"
                         href="http://undeadly.org/cgi?action=article&amp;sid=20160929230557&amp;mode=expanded"/>
            <psc:chapter start="00:21:25" title="What typing ^D really does on Unix"
                         href="https://utcc.utoronto.ca/~cks/space/blog/unix/TypingEOFEffects"/>
            <psc:chapter start="00:24:05" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:26:50" title="Interview"/>
            <psc:chapter start="00:54:20" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:56:30" title="News Roundup"/>
            <psc:chapter start="00:56:30" title="Running FreeBSD in Travis-CI Thanks to KQEmu"
                         href="http://erouault.blogspot.com/2016/09/running-freebsd-in-travis-ci.html"/>
            <psc:chapter start="01:03:20" title="OpenBSD EuroBSDcon 2016 Papers are online"
                         href="https://www.openbsd.org/events.html"/>
            <psc:chapter start="01:06:35" title="VirtualBox Shared Folders on FreeBSD: progress report"
                         href="https://kernelnomicon.org/?p=650"/>
            <psc:chapter start="01:08:27" title="FreeBSD News Issue #1"
                         href="http://support.rossw.net/FreeBSD-Issue1.pdf"/>
            <psc:chapter start="01:15:10" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:16:50" title="Beastie Bits"/>
            <psc:chapter start="01:16:50" title="Call for testing: newly MPSAFE nvme(4)"
                         href="http://mail-index.netbsd.org/current-users/2016/09/21/msg030183.html"/>
            <psc:chapter start="01:18:05" title="Thinking about starting a BUG in Indianapolis, IN USA"
                         href="http://lists.dragonflybsd.org/pipermail/users/2016-September/313061.html"/>
            <psc:chapter start="01:18:55" title="The cost of forsaking C: Why students still need to learn C"
                         href="https://medium.com/bradfield-cs/the-cost-of-forsaking-c-113986438784#.o2m5gv8y7"/>
            <psc:chapter start="01:21:40" title="OpenBSD (U)EFI bootloader howto"
                         href="https://blog.jasper.la/openbsd-uefi-bootloader-howto/"/>
            <psc:chapter start="01:22:20" title="Michael Lucas sets his eyes on OpenBSD’s web stack for his next book"
                         href="http://blather.michaelwlucas.com/archives/2780"/>
            <psc:chapter start="01:22:40" title="LibreSSL 2.5.0 released"
                         href="http://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-2.5.0-relnotes.txt"/>
            <psc:chapter start="01:24:55" title="OPNsense 16.7.5 released"
                         href="https://opnsense.org/opnsense-16-7-5-released/"/>
            <psc:chapter start="01:25:40" title="Feedback/Questions"/>
            <psc:chapter start="01:25:40" title="Jonas – ZFS on DO" href="http://pastebin.com/XeJhK0AJ"/>
            <psc:chapter start="01:28:00" title="Ricardo – OpenBSD Encrypted Disk" href="http://pastebin.com/Z9JRjcvb"/>
            <psc:chapter start="01:31:05" title="WiskerTickle – Storage Benchmark" href="http://pastebin.com/XAD0UevP"/>
            <psc:chapter start="01:33:30" title="Phil – Thanks" href="http://pastebin.com/N52JhYru"/>
            <psc:chapter start="01:36:05" title="Luis – Misc Questions" href="http://pastebin.com/57qS0wrx"/>
        </psc:chapters>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Petra Zeidler</name>
            <email>spz@netbsd.org</email>
        </contributor>
        <summary>This week on the show, we’ll be talking to Petra about the NetBSD foundation &amp; how they operate and
            assist NetBSD behind the scenes. That plus lots of news about the pending 11.0-RELEASE of FreeBSD &amp;
            more! Stay tuned for your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 162: The Foundation of NetBSD&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.daemonology.net/blog/2016-10-03-FreeBSD-EC2-11-0-RELEASE.html&quot;&gt;What
            is new on EC2 for FreeBSD 11.0-RELEASE&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“FreeBSD 11.0-RELEASE is just around the corner, and it will be bringing a long list of new
            features and improvements — far too many for me to list here. I think there are
            some improvements in FreeBSD 11.0 which are particularly noteworthy for EC2 users.”&lt;/li&gt;
            &lt;li&gt;“First, the EC2 Console Screenshot functionality now works with FreeBSD. This provides a &quot;VGA&quot;
            output as opposed to the traditional &quot;serial port&quot; which EC2 has exposed as
            &quot;console output&quot; for the past decade, and is useful largely because the &quot;VGA&quot; output
            becomes available immediately whereas the &quot;serial port&quot; output can lag by several minutes. This
            improvement is a simple configuration change — older releases didn&#39;t waste time writing to a non-serial
            console because it didn&#39;t go anywhere until Amazon added support on their
            side — and can be enabled on older FreeBSD releases by changing the line console=&quot;comconsole&quot; to
            boot_multicons=&quot;YES&quot; in /boot/loader.conf.”&lt;/li&gt;
            &lt;li&gt;“The second notable change is support for EC2 &quot;Enhanced Networking&quot; using Intel 82599
            hardware; on the C3, C4, R3, I2, D2, and M4 (excluding m4.16xlarge) families, this
            provides increased network throughput and reduced latency and jitter, since it allows FreeBSD to talk
            directly to the networking hardware rather than via a Xen paravirtual interface.
            Getting this working took much longer than I had hoped, but the final problem turned out not to be in
            FreeBSD at all — we were tickling an interrupt-routing bug in a version of
            Xen used in EC2. Unfortunately FreeBSD does not yet have support for the new &quot;Elastic Network Adapter&quot;
            enhanced networking used in P2 and X1 instance families and the m4.16xlarge
            instance type; I&#39;m hoping that we&#39;ll have a driver for that before FreeBSD 11.1 arrives.”&lt;/li&gt;
            &lt;li&gt;“The third notable change is an improvement in EC2 disk throughput. This comes thanks to enabling
            indirect segment I/Os in FreeBSD&#39;s blkfront driver; while the support was
            present in 10.3, I had it turned off by default due to performance anomalies on some EC2 instances. (Those
            EC2 performance problems have been resolved, and disk I/O performance in
            EC2 on FreeBSD 10.3 can now be safely improved by removing the line hw.xbd.xbd&lt;em&gt;enable&lt;/em&gt;indirect=&quot;0&quot;
            from /boot/loader.conf.)”&lt;/li&gt;
            &lt;li&gt;“Finally, FreeBSD now supports all 128 CPUs in the x1.32xlarge instance type. This improvement
            comes thanks to two changes: The FreeBSD default kernel was modified in 2014 to
            support up to 256 CPUs (up from 64), but that resulted in a (fixed-size) section of preallocated memory
            being exhausted early in the boot process on systems with 92 or more CPUs; a
            few months ago I changed that value to tune automatically so that FreeBSD can now boot and not immediately
            panic with an out-of-the-box setup on such large systems.”&lt;/li&gt;
            &lt;li&gt;“I think FreeBSD/EC2 users will be very happy with FreeBSD 11.0-RELEASE; but I&#39;d like to end
            with an important reminder: No matter what you might see on FTP servers, in EC2, or
            available via freebsd-update, the new release has not been released until you see a GPG-signed email from
            the release engineer. This is not just a theoretical point: In my time as a
            FreeBSD developer I&#39;ve seen multiple instances of last-minute release re-rolls happening due to problems
            being discovered very late, so the fact that you can see bits doesn&#39;t
            necessarily mean that they are ready to be downloaded. I hope you&#39;re looking forward to 11.0-RELEASE,
            but please be patient.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=213196&quot;&gt;Upgrading
            Amazon EC2 instance from 10.3 to 11.0-PRERELEASE results in hang at boot &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;As if to underscore that last point, a last minute bug was found on sunday night&lt;/li&gt;
            &lt;li&gt;A user reported that they used freebsd-update to upgrade an EC2 instance from 10.3 to 11.0 and it
            started hanging during boot&lt;/li&gt;
            &lt;li&gt;After some quick investigation by Colin, the problem was reproduced&lt;/li&gt;
            &lt;li&gt;Since I had done a lot of work in the loader recently, I helped Colin build a version of the
            loader with a lot of the debugging enabled, and some more added to try to isolate where
            in the loader the freeze was happening&lt;/li&gt;
            &lt;li&gt;Colin and I worked late into the night, but eventually found the read from disk that was causing
            the hang&lt;/li&gt;
            &lt;li&gt;Unlike most of the other reads, that were going into the heap, this read was into a very low
            memory address, right near the 640kb border. This initially distracted us from the real
            cause of the problem&lt;/li&gt;
            &lt;li&gt;With more debugging added, it was determined that the problem was in the GELIBoot code, when
            reading the last sector of each partition to determine if it is encrypted. In cases
            where the partition is not 4k aligned, and butts up against the end of the disk, the formula used could
            result in a read past the end of the disk&lt;/li&gt;
            &lt;li&gt;The formula rounds the last sector byte address down to the nearest factor of 4096, then reads
            4096 bytes. Then that buffer is examined to determine if the partition is encrypted.
            If it is a 512b sector drive, the metadata will be in the last 512 bytes of that 4096 byte buffer.&lt;/li&gt;
            &lt;li&gt;However, if the partition is not 4k aligned, the rounding will produce a value that is less than
            4096 bytes from the end of the disk, and attempting to read 4096 bytes, will read
            past the end of the disk&lt;/li&gt;
            &lt;li&gt;Normally this isn’t that big of a problem, the BIOS will just return an error. The loader will
            retry up to three times, then give up and move on, continuing to boot normally.&lt;/li&gt;
            &lt;li&gt;Some BIOSes are buggy, and will initiate their own retries, and the combination might result in a
            stall of up to 30 seconds for each attempt to read past the end of the disk&lt;/li&gt;
            &lt;li&gt;But it seems that Amazon EC2 instances, (and possibly other virtual instances), will just hang in
            this case.&lt;/li&gt;
            &lt;li&gt;This bug has existed for 6 months, but was not caught because almost all installations are 4k
            aligned thanks to changes made to the installer over the last few years, and most
            hardware continues to boot with no sign of a problem&lt;/li&gt;
            &lt;li&gt;Even the EC2 snapshot images of 11.0 do not have the problem, as they use a newer disk layout that
            is 4k aligned by default now. The problem only seems to happen when older disk
            images are upgraded&lt;/li&gt;
            &lt;li&gt;The fix has been committed and will be merged the the branches over the next few days&lt;/li&gt;
            &lt;li&gt;An Errata notice will be issues, and the fix will be available via freebsd-update&lt;/li&gt;
            &lt;li&gt;It is recommended that EC2 users, and anyone who wants to be especially cautious, wait until this
            errata notice goes out before attempting to upgrade from FreeBSD 10.3 to 11.0&lt;/li&gt;
            &lt;li&gt;You can determine if your partitions are 4k aligned by running ‘gpart show’. If there is free
            space after your last partition, you won’t have any issues.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160929230557&amp;amp;mode=expanded&quot;&gt;OpenBSD
            6.0 Limited Edition CD set (signed by developers)&lt;/a&gt;&lt;/h3&gt;

            &lt;p&gt;&lt;a href=&quot;http://www.ebay.com/itm/-/331985953783&quot;&gt;The first one went for .$4,200.00&lt;/a&gt;
            + Looking for your piece of OpenBSD history? At the recent g2k16 hackathon in Cambridge UK, 40 OpenBSD
            developers put pen to paper and signed 5 copies of the new 6.0 release.
            + Each of these will be auctioned off on ebay, with the proceeds to benefit the OpenBSD foundation.
            + The first auction has already ended, and CD set went for a whopping $4200!
            + The next set only has 2 days left, and currently stands at $3000! (http://www.ebay.com/itm/-/331990536246)
            + Get your bids in soon, these are VERY unique, the odds of getting the same 40 developers in a room
            together and signing a new .0 release may make this a once-in-a-lifetime
            opportunity.
            + Additionally, if you are just starting your OpenBSD collection, here’s a nice image to make you envious:
            &lt;a href=&quot;http://i.imgur.com/OrE0Gsa.png&quot;&gt;A nice collection of OpenBSD CD Sets&lt;/a&gt; &lt;/p&gt;

            &lt;hr&gt;

            &lt;h3&gt;[What typing ^D really does on Unix&lt;/h3&gt;

            &lt;p&gt;](https://utcc.utoronto.ca/~cks/space/blog/unix/TypingEOFEffects)
            + How often have you used a ^D to generate an EOF? Do you really know what that does?
            + Chris Siebenmann has posted a look at this on his blog, which might not be what you think&lt;/p&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“Typing ^D causes the tty driver to immediately finish a read().”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;He continues on:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Normally doing a read() from a terminal is line-buffered inside the tty driver; your program only
            wakes up when the tty driver sees the newline, at which point you get back the full
            line. (Note that this buffering is distinct from anything that your language&#39;s IO system may be doing.)&lt;/p&gt;

            &lt;p&gt;Typing ^D causes the tty driver to stop waiting for a newline and immediately return from the
            read() with however much of the line has been accumulated to date. If you haven&#39;t
            typed anything on the line yet, there is nothing accumulated and the read() will return 0 bytes, which is
            conveniently the signal for end of file. If you have typed something the
            program will get it; because it doesn&#39;t have a trailing newline, the program&#39;s own line-buffering
            may take over and keep read()ing to get the rest of the line.&lt;/p&gt;

            &lt;p&gt;(Other programs will immediately process the partial line with no buffering; cat is one example of
            this.)&lt;/p&gt;

            &lt;p&gt;Once you&#39;ve typed ^D on a partial line, that portion of the line is immutable because it&#39;s
            already been given to the program. Most Unixes won&#39;t let you backspace over such partial
            lines; effectively they become output, not input.&lt;/p&gt;

            &lt;p&gt;(Note that modern shells are not good examples of this, because they don&#39;t do line-buffered
            input; to support command line editing, they switch terminal input into an uninterpreted
            mode. So they get the raw ^D and can do whatever they want with it, and they can let you edit as much of the
            pending line as they want.)&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;Fascinating stuff, and interesting to see behind the curtain at exactly what’s going on with your
            programs buffering and tty driver interaction.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Petra Zeidler - &lt;a href=&quot;mailto:spz@netbsd.org&quot;&gt;spz@netbsd.org&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;NetBSD Foundation&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://erouault.blogspot.com/2016/09/running-freebsd-in-travis-ci.html&quot;&gt;Running
            FreeBSD in Travis-CI Thanks to KQEmu&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Travis-CI is the most popular testing framework on Github, but it doesn’t support any of the BSDs&lt;/li&gt;
            &lt;li&gt;This didn’t discourage Even Rouault, who managed to run FreeBSD in KQEMU on the Linux instances
            provided by Travis-CI&lt;/li&gt;
            &lt;li&gt;“Travis-CI has a free offer for software having public repository at GitHub. Travis-CI provides
            cloud instances running Linux or Mac OS X. To increase portability tests of
            GDAL, I wondered if it was somehow possible to run another operating system with Travis-CI, for example
            FreeBSD. A search lead me to this
            &lt;a href=&quot;https://github.com/travis-ci/travis-ci/issues/1818&quot;&gt;question&lt;/a&gt; in their bug
            tracker but the outcome seems to be that it is not possible, nor in their medium or long term plans.”&lt;/li&gt;
            &lt;li&gt;“One idea that came quickly to mind was to use the QEMU machine emulator that can simulate full
            machines, of several hardware architectures.”&lt;/li&gt;
            &lt;li&gt;They found an existing image of FreeBSD 9.2 and configured the Travis job to download it and fire
            it up in QEMU.&lt;/li&gt;
            &lt;li&gt;“Here we go: ./configure &amp;amp;&amp;amp; make ! That works, but 50 minutes later (the maximum
            length of a Travis-CI job), our job is killed with perhaps only 10% of the GDAL code base being
            compiled. The reason is that we used the pure software emulation mode of QEMU that involves on-the-fly
            disassembling of the code to be run and re-assembling.”&lt;/li&gt;
            &lt;li&gt;Travis-CI runs in Google Compute Engine, which does not allow nested virtualization, so hardware
            virtualization is not an option to speed up QEMU&lt;/li&gt;
            &lt;li&gt;“Here comes the time for good old memories and a bit of software archeology. QEMU was started by
            Fabrice Bellard. If you didn&#39;t know his name yet, F. Bellard created FFMPEG and
            QEMU, holds a world record for the number of decimals of Pi computed on a COTS PC, has ported QEMU in
            JavaScript to run the Linux kernel in your browser, devised BPG, a new
            compression based on HEVC, etc....”&lt;/li&gt;
            &lt;li&gt;“At the time where his interest was focused on QEMU, he created KQemu, a kernel module (for Linux,
            Windows, FreeBSD hosts), that could significantly enhance QEMU performance
            when the guest and hosts are x86/x86_64 and does not require (nor use) hardware virtualization
            instructions.”&lt;/li&gt;
            &lt;li&gt;“Running it on Travis-CI was successful too, with the compilation being done in 20 minutes, so
            probably half of the speed of bare metal, which is good enough.”&lt;/li&gt;
            &lt;li&gt;“I could also have potentially tried VirtualBox because, as mentioned above, it supports software
            virtualization with acceleration. But that is only for 32 bit guests (and I
            didn&#39;t find a ready-made FreeBSD 32bit image that you can directly ssh into). For 64 bit guests,
            VirtualBox require hardware virtualization to be available in the host. To the best
            of my knowledge, KQemu is (was) the only solution to enable acceleration of 64 bit guests without hardware
            requirements.”&lt;/li&gt;
            &lt;li&gt;It will be interesting to see if enough people do this hack, maybe Travis-CI will consider
            properly supporting FreeBSD&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.openbsd.org/events.html&quot;&gt;OpenBSD EuroBSDcon 2016 Papers are
            online&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Slides from the OpenBSD talks at EuroBSDCon are online now

            &lt;ul&gt;
            &lt;li&gt;Landry Breuil, &lt;a href=&quot;https://rhaalovely.net/~landry/eurobsdcon2016/&quot;&gt;Building
            packages on exotic architectures&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Peter Hessler, &lt;a href=&quot;https://www.openbsd.org/papers/eurobsdcon2016-bfd.pdf&quot;&gt;Bidirectional
            Forwarding Detection (BFD) implementation and support in OpenBSD&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Ingo Schwarze, &lt;a href=&quot;https://www.openbsd.org/papers/eurobsdcon2016-utf8.pdf&quot;&gt;Why
            and how you ought to keep multibyte character support simple&lt;/a&gt; (roff/mm/gpresent &lt;a href=&quot;https://www.openbsd.org/papers/eurobsdcon2016-utf8.roff&quot;&gt;source
            code&lt;/a&gt;)&lt;/li&gt;
            &lt;li&gt;Stefan Sperling, &lt;a href=&quot;https://www.openbsd.org/papers/eurobsdcon2016-openbsd-11n.pdf&quot;&gt;OpenBSD
            meets 802.11n&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Antoine Jacoutot, &lt;a href=&quot;https://www.bsdfrog.org/pub/events/openbsd-rcd-EuroBSDcon2016.pdf&quot;&gt;OpenBSD
            rc.d(8)&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Marc Espie, &lt;a href=&quot;https://www.openbsd.org/papers/eurobsdcon2016-privsep.pdf&quot;&gt;Retrofitting
            privsep into dpb and pkg_add&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Martin Pieuchot, &lt;a href=&quot;https://www.openbsd.org/papers/eurobsdcon2016-embracingbsdrt.pdf&quot;&gt;Embracing
            the BSD routing table&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;I am working to build a similar website for the FreeBSD project, but there is still a lot of work
            to do&lt;/li&gt;
            &lt;li&gt;I also managed to find the slides from the keynotes:&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://papers.freebsd.org/2016/EuroBSDCon/LookingBackwards.pdf&quot;&gt;Opening
            Keynote: George Neville-Neil: Looking Backwards: The coming decades of BSD &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://www.monobsd.com/files/16_ddos_and_consequences.pptx&quot;&gt;Closing
            Keynote: Gert D&#246;ring: Internet Attacks, Self-Governance, and the Consequences &lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://kernelnomicon.org/?p=650&quot;&gt;VirtualBox Shared Folders on FreeBSD:
            progress report&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;In the past month or so, VirtualBox in the FreeBSD ports tree got bumped to version 5, which while
            bringing new features, did cause a regression in Shared Folders.&lt;/li&gt;
            &lt;li&gt;FreeBSD developer gonzo@ (Oleksandr Tymoshenko) has been tackling this issue in recent days and
            provides us with a look behind the curtain at the challenges involved.&lt;/li&gt;
            &lt;li&gt;Specifically he started by implementing the various needed VOPs: “lookup, access, readdir, read,
            getattr, readlink, remove, rmdir, symlink, close, create, open, write.”&lt;/li&gt;
            &lt;li&gt;He then continues with details about how complete this is:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;p&gt;““Kind of implemented” means that I was able to mount directory, traverse it, read file, calculate
            md5 sums and compare with host’s md5sum, create/remove directories,
            unzip zip file, etc but I doubt it would survive stress-test. Locking is all wrong at the moment and
            read/write VOPs allocate buffers for every operation.”&lt;/p&gt;

            &lt;ul&gt;
            &lt;li&gt;The bigger issue faced is with the rename VOP though:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I hit a roadblock with rename VOP: it involves some non-trivial locking logic and also there is a
            problem with cached paths. VBox hypervisor operates on full paths so we cache them
            in vboxfs nodes, but if one of parent directories is renamed, all cached names should be modified
            accordingly. I am going to tackle these two problems once I have long enough stretch
            of time time sit and concentrate on task.
            + We wish him luck in getting those issues solved. I know quite a few of our users rely on shared folders as
            well.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://support.rossw.net/FreeBSD-Issue1.pdf&quot;&gt;FreeBSD News Issue #1&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Issue #1 of FreeBSD News, from summer of 1997&lt;/li&gt;
            &lt;li&gt;Contains an article by Yahoo! co-founder David Filo about their early use of FreeBSD, on 100mhz
            Pentium machines with 64MB of ram&lt;/li&gt;
            &lt;li&gt;Java Development Kit 1.0.2 ported to FreeBSD&lt;/li&gt;
            &lt;li&gt;What is FreeBSD?&lt;/li&gt;
            &lt;li&gt;Running the world’s busiest FTP site (cdrom.com) on FreeBSD&lt;/li&gt;
            &lt;li&gt;Xi Graphics announces the release of CDE Business Desktop, the first and only integrated desktop
            for FreeBSD, on AcceleratedX, a fully supported commercial grade X display server&lt;/li&gt;
            &lt;li&gt;Get FreeBSD 2.2.2 Today!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://mail-index.netbsd.org/current-users/2016/09/21/msg030183.html&quot;&gt;Call
            for testing: newly MPSAFE nvme(4)&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/users/2016-September/313061.html&quot;&gt;Thinking
            about starting a BUG in Indianapolis, IN USA&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/bradfield-cs/the-cost-of-forsaking-c-113986438784#.o2m5gv8y7&quot;&gt;The
            cost of forsaking C: Why students still need to learn C &lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.jasper.la/openbsd-uefi-bootloader-howto/&quot;&gt;OpenBSD
            (U)EFI bootloader howto&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2780&quot;&gt;Michael Lucas
            sets his eyes on OpenBSD&#39;s web stack for his next book&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-2.5.0-relnotes.txt&quot;&gt;LibreSSL
            2.5.0 released&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://opnsense.org/opnsense-16-7-5-released/&quot;&gt;OPNsense 16.7.5
            released&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/XeJhK0AJ&quot;&gt; Jonas - ZFS on DO &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/Z9JRjcvb&quot;&gt; Ricardo - OpenBSD Encrypted Disk&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/XAD0UevP&quot;&gt; WiskerTickle - Storage Benchmark &lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/N52JhYru&quot;&gt; Phil - Thanks&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/57qS0wrx&quot;&gt; Luis - Misc Questions&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
</feed>
