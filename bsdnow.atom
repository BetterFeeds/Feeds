<?xml version="1.0" encoding="utf-8"?>
<feed
        xml:lang="en-us"
        xmlns="http://www.w3.org/2005/Atom"
        xmlns:smi="https://www.betterfeeds.org/series-media-info"
        xmlns:media="http://search.yahoo.com/mrss/"
        xmlns:psc="http://podlove.org/simple-chapters">
    <title>BSD Now</title>
    <subtitle>A weekly show covering the latest developments in the world of the BSD family of operating systems. News,
        Tutorials and Interviews for new users and long time developers alike.
    </subtitle>
    <icon>http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg</icon>
    <media:thumbnail
            url="http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="self"
            type="application/atom+xml; charset=utf-8"
            title="BSD Now"/>
    <link
            href="http://www.bsdnow.tv/"
            rel="alternate"
            type="text/html"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMp3"
            rel="related"
            type="application/rss+xml"
            title="BSD Now MP3 Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowOgg"
            rel="related"
            type="application/rss+xml"
            title="BSD Now OGG Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMobile"
            rel="related"
            type="application/rss+xml"
            title="BSD Now SD Video"/>
    <link
            href="http://feeds.feedburner.com/BsdNowHd"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video"/>
    <link
            href="http://bitlove.org/jupiterbroadcasting/bsdnowhd/feed"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video (BitTorrent)"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2016-08.atom"
            rel="next"
            type="application/atom+xml; charset=utf-8"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="first"
            type="application/atom+xml; charset=utf-8"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2013-09.atom"
            rel="last"
            type="application/atom+xml; charset=utf-8"/>
    <id>http://www.bsdnow.tv/</id>
    <updated>2016-09-16T08:57:00Z</updated>
    <author>
        <name>Jupiter Broadcasting</name>
        <uri>www.jupiterbroadcasting.com</uri>
    </author>
    <smi:sequential>false</smi:sequential>
    <entry>
        <title>The BSD Bromance</title>
        <smi:episode>161</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_09_28-the_bsd_bromance"/>
        <id>http://www.bsdnow.tv/episodes/2016_09_28-the_bsd_bromance</id>
        <published>2016-09-29T09:42:04-07:00</published>
        <updated>2016-09-10T07:02:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0161.ogg"
                rel="enclosure"
                length="75336449"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0161.ogg"
                    fileSize="75336449"
                    type="audio/ogg"
                    medium="audio"
                    duration="6068"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/bsd-0160.mp3"
                    fileSize="23891687"
                    type="audio/mpeg"
                    medium="audio"
                    duration="6068"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0161-432p.mp4"
                    fileSize="354181125"
                    type="video/mp4"
                    medium="video"
                    duration="6068"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0161.mp4"
                    fileSize="683456431"
                    type="video/mp4"
                    medium="video"
                    duration="6068"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0161-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:00:57" title="EuroBSDCon 2016 Wrapup"/>
            <psc:chapter start="00:11:46" title="Headlines"/>
            <psc:chapter start="00:11:46" title="NetBSD for newbies - Develop your own Power PC"
                         href="http://discusscomputerx.blogspot.com/2016/09/netbsd-for-noobies-your-power-laptop.html"/>
            <psc:chapter start="00:14:05" title="More about OpenSMTPD 6.0.0"
                         href="https://www.poolp.org/tech/posts/2016/09/12/opensmtpd-6-0-0-released/"/>
            <psc:chapter start="00:18:15"
                         title="Upgrade a FreeBSD 10.3 Installation with ZFS on Root and Full Disk Encryption to 11.0"
                         href="http://ftfl.ca/blog/2016-09-17-zfs-fde-one-pool-conversion.html"/>
            <psc:chapter start="00:26:05" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:28:35" title="Interview"/>
            <psc:chapter start="01:00:40" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="01:04:30" title="News Roundup"/>
            <psc:chapter start="01:04:30" title="FreeBSD based distro for virtual hosting platform and appliance"
                         href="https://clonos.tekroutine.com/"/>
            <psc:chapter start="01:06:26" title="The Raspberry PI Platform and The Challenges of Developing FreeBSD"
                         href="https://bsdmag.org/oleksandr_rybalko/"/>
            <psc:chapter start="01:09:12" title="Trying out the FreeBSD powered TrueOS"
                         href="http://www.phoronix.com/scan.php?page=news_item&amp;px=TrueOS-First-Spin"/>
            <psc:chapter start="01:13:18" title="Trying out 8 BSDs on a modern PC"
                         href="http://www.phoronix.com/scan.php?page=article&amp;item=trying-8-bsds&amp;num=1"/>
            <psc:chapter start="01:15:50" title="IllumOS imports a modified FreeBSD boot loader to replace grub 0.97"
                         href="https://www.listbox.com/member/archive/182181/2016/09/sort/time_rev/page/1/entry/0:1/20160923124232:B7978ED4-81AC-11E6-A6DA-02E3F010038B/"/>
            <psc:chapter start="01:22:10" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:24:20" title="Beastie Bits"/>
            <psc:chapter start="01:24:20"
                         title="A demo of booting CentOS and Windows 10 in FreeBSD Bhyve through VNC headless"
                         href="https://www.youtube.com/watch?v=8YQQfXqtyaA"/>
            <psc:chapter start="01:24:35" title="This year's anemic output"
                         href="http://blather.michaelwlucas.com/archives/2762"/>
            <psc:chapter start="01:25:25" title="&quot;PAM Mastery&quot; ebook now out"
                         href="http://blather.michaelwlucas.com/archives/2771"/>
            <psc:chapter start="01:25:40" title="How-to Install OpenBSD 6.0 plus XFCE desktop and basic applications"
                         href="https://www.youtube.com/watch?v=oC5D9fenQBs"/>
            <psc:chapter start="01:27:11" title="Feedback/Questions"/>
            <psc:chapter start="01:27:11" title="Piotr - LibreBoot" href="http://pastebin.com/yniniNpV"/>
            <psc:chapter start="01:28:24" title="Alan - FreeBSD and PC-BSD" href="http://pastebin.com/dCNX0yF7"/>
            <psc:chapter start="01:30:30" title="Eduardo - Newcomers" href="http://pastebin.com/LndNeAYb"/>
            <psc:chapter start="01:31:31" title="Greg - ZFS ACL's" href="http://pastebin.com/F0y6L6NK"/>
            <psc:chapter start="01:33:58" title="Brian - Laptop Recs" href="http://pastebin.com/sqMPJGMM"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Michael Shirk</name>
            <email>mshirk@daemon-security.com</email>
            <uri>https://twitter.com/shirkdog</uri>
        </contributor>
        <summary>This week on BSDNow, we're going to be hearing about Allan's trip to EuroBSDCon, plus an Interview
            about &quot;Bro on BSD&quot;! Stay tuned for your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 161: The BSD Bromance&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;EuroBSDCon 2016 Wrapup&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://assets.keltia.net/photos/EuroBSDCon-2016/&quot;&gt;Ollivier Robert’s
            Photos from EuroBSDCon &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://www.jupiterbroadcasting.com/stickers/&quot;&gt;Get your BSDNow die-cut
            stickers&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;h3&gt;&lt;a href=&quot;http://discusscomputerx.blogspot.com/2016/09/netbsd-for-noobies-your-power-laptop.html&quot;&gt;NetBSD
            for newbies - Develop your own Power PC&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We don’t get to feature too many stories on NetBSD being deployed as a Power PC (Not PowerPC, you
            know, a Powerful “PC”), so we jumped at this one.&lt;/li&gt;
            &lt;li&gt;Specifically it starts off with some of the pre-req’s that you’ll need to get started, such as
            NetBSD 7.0.1 / amd64, along with some information about which wireless nics you may be using. (NetBSD like
            other BSD’s will give a driver based device name for network interfaces)&lt;/li&gt;
            &lt;li&gt;From there, instructions on how to write your WPA_supplicant config are provided, in order for us
            to fetch the NetBSD sources and convert to their -STABLE branch.&lt;/li&gt;
            &lt;li&gt;After doing a CVS checkout of the sources, he then provides a walkthrough of doing a kernel
            compile / install, however it mentions changing the config, but doesn’t provide an example of what options
            were changed. Perhaps to remove drivers we don’t need?&lt;/li&gt;
            &lt;li&gt;At this point the rest of the “desktop” setup is pretty straight forward. Some packages are added
            such as openbox, lxappearance, firefox, etc.&lt;/li&gt;
            &lt;li&gt;To get working sound, firefox requires pulseaudio, which in turn needs dbus, so instructions on
            getting that service up and running are provided as well.&lt;/li&gt;
            &lt;li&gt;When it’s all said and done, you’ll end up with your shiny new NetBSD -STABLE desktop (or laptop),
            bragging rights achieved!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.poolp.org/tech/posts/2016/09/12/opensmtpd-6-0-0-released/&quot;&gt;More
            about OpenSMTPD 6.0.0&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;OpenSMTPd 6.0.0 has just been released “and it&#39;s quite different from former releases.”&lt;/li&gt;
            &lt;li&gt;“Unlike most of our releases, it comes out with almost no new feature.”, “Turns out most of the
            changes are not visible.”&lt;/li&gt;
            &lt;li&gt;Changelog:

            &lt;ul&gt;
            &lt;li&gt;new fork+reexec model so each process has its own randomized memory space&lt;/li&gt;
            &lt;li&gt;logging format has been reworked&lt;/li&gt;
            &lt;li&gt;a &quot;multi-line response&quot; bug in the LMTP delivery backend has been fixed&lt;/li&gt;
            &lt;li&gt;connections concurrency limits have been bumped&lt;/li&gt;
            &lt;li&gt;artificial delaying in remote sessions have been reduced&lt;/li&gt;
            &lt;li&gt;dhparams option has been removed&lt;/li&gt;
            &lt;li&gt;dhe option has been added, supporting auto and legacy modes&lt;/li&gt;
            &lt;li&gt;smtp engine has been simplified&lt;/li&gt;
            &lt;li&gt;various cosmetic changes, code cleanup and documentation improvement&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;“The OpenSMTPD bootstrap process was quite simple: Upon executation, the parent process would read
            configuration, build a memory representation of it and would then create a bunch of socketpair() before
            fork()-ing all of its child processes.”&lt;/li&gt;
            &lt;li&gt;The problem is that this does not take advantage of the new address randomization feature. Each
            child will have the same memory layout, copied from the parent process&lt;/li&gt;
            &lt;li&gt;“So deraadt@ suggested that if OpenSMTPD would not just fork() children but instead fork() them
            and reexecute the smtpd binary, then each of the children would have its own randomized memory space.”&lt;/li&gt;
            &lt;li&gt;“The idea itself is neat, however not so trivial to implement because when we reexec the whole
            &quot;inherit configuration and descriptors&quot; part goes away. It&#39;s not just fork and exec, it&#39;s
            fork and exec and figure a way for the parent to pass back all the information and descriptors back to the
            new post-fork instance so it is the new instance that allocates memory and decides where the information
            goes.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://ftfl.ca/blog/2016-09-17-zfs-fde-one-pool-conversion.html&quot;&gt;Upgrade
            a FreeBSD 10.3 Installation with ZFS on Root and Full Disk Encryption to 11.0&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;While FreeBSD 11.0 is not out yet, Joseph Mingrone has helped me work out and test the
            instructions for upgrading a FreeBSD 10.3 ZFS on full disk encryption setup (bootpool + zpool) to the new
            GELIBoot feature, which does not require any unencrypted partitions, just the 128kb bootcode&lt;/li&gt;
            &lt;li&gt;Note: Do not upgrade to FreeBSD 11.0 yet. While some images have landed on the FTP server, they do
            not contain the final openssl fix and are going to be recreated.&lt;/li&gt;
            &lt;li&gt;Currently, GELIBoot does not support key files, so the first step is to reencrypt the master key
            with only a passphrase.&lt;/li&gt;
            &lt;li&gt;Next, to avoid GELIBoot picking up encrypted partitions that it does not support, or partitions
            you do not want decrypted at boot, only partitions with the GELIBoot flag are decrypted, so set the flag on
            your root partition&lt;/li&gt;
            &lt;li&gt;Then, move the loader, kernel, and other files into /boot on the root filesystem, instead of them
            living on the bootpool. This allows the kernel to be versioned with boot environments, and is the main
            purpose of this work&lt;/li&gt;
            &lt;li&gt;Then, install the newer gptzfsboot, as this is required to support GELIBoot&lt;/li&gt;
            &lt;li&gt;The old 2gb bootpool partition is then purposely mislabeled as freebsd-vinum, so it is not picked
            up by the boot blocks. Later, if the upgrade is successful, this partition can be deleted, and used as
            addition swap or something&lt;/li&gt;
            &lt;li&gt;In order to boot correctly, you want all boot environments to have the ‘canmount’ ZFS property set
            to ‘noauto’&lt;/li&gt;
            &lt;li&gt;Thank you to Joseph for taking the time to prod me for the information required to write this up,
            and for testing it and finding all of the issues &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Michael Shirk - &lt;a href=&quot;mailto:mshirk@daemon-security.com&quot;&gt;mshirk@daemon-security.com&lt;/a&gt;
            / &lt;a href=&quot;https://twitter.com/shirkdog&quot;&gt;@shirkdog&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;Running Bro on BSD&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://clonos.tekroutine.com/&quot;&gt;FreeBSD based distro for virtual hosting
            platform and appliance&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;An interesting new FreeBSD-based project as shown up online, called “ClonOS”, which bills itself
            as a “free open-source FreeBSD-based platform for virtual environments creation and management”&lt;/li&gt;
            &lt;li&gt;It looks to be leveraging an impressive list of technologies, including Bhyve, Xen, Jails and CBSD
            / Puppet for management tasks.&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;Among its list of features:&lt;/p&gt;

            &lt;ul&gt;
            &lt;li&gt;ZFS features support;&lt;/li&gt;
            &lt;li&gt;VM cloning, export, import&lt;/li&gt;
            &lt;li&gt;Ethernet SoftSwitch for separated networking&lt;/li&gt;
            &lt;li&gt;jails for lightweight container&lt;/li&gt;
            &lt;li&gt;VNC terminal for VM/containers&lt;/li&gt;
            &lt;li&gt;Templates for VM/containers&lt;/li&gt;
            &lt;li&gt;Configuration management/helpers&lt;/li&gt;
            &lt;li&gt;Multi-node operation&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;Multi-Node? Color me intrigued! &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;Right now it appears to be under heavy development, but we’ll reach out to the developer to see if
            we can get an interview lined up at some point!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://bsdmag.org/oleksandr_rybalko/&quot;&gt;The Raspberry PI Platform and The
            Challenges of Developing FreeBSD&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;BSDMag recently did an interview with FreeBSD developer Olesandr Rybalko!&lt;/li&gt;
            &lt;li&gt;Oleksandr lives in the Ukraine, and while you may not have heard of him, he has worked on some
            cool projects for FreeBSD including the new “vt” console driver (Which a lot of people are using now), and
            ARM/MIPS support.&lt;/li&gt;
            &lt;li&gt;The interview covers some of the work he’s done to get the PI support working with FreeBSD:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I think, my main help here was a USB OTG driver, which I wrote before for another device (Ralink
            RT3052), then port it to R-Pi. But it was rewritten by Hans Peter Selasky. I do not know so much about USB
            as Hans knows.&lt;/p&gt;

            &lt;p&gt;Another useful part of my help is Xorg support. I did a simple Xorg video driver which uses
            framebuffer exported by virtual terminal subsystem. That is help to many guys to start use RPi as a simple
            desktop system.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;He was also asked the question “Why would FreeBSD be good fit for ARM?”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;FreeBSD is very powerful as a network server. All modern network features in one box, with very
            fast processing.&lt;/p&gt;

            &lt;p&gt;Another good side of FreeBSD is modularity. It is not required to write code to use some driver
            that was already written for another system, you can just define it in configuration files (kernel config,
            kernel hints, FDT). So if you want build a nice, R-Pi based, home server – use FreeBSD. If you want to play
            with devices attached to R-Pi’s GPIO – use FreeBSD.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;He also discusses his work on the ZRouter project, which is a very light-weight platform for tiny
            routers / embedded devices. But lastly the RPI comes up again, specifically asking him how interested
            individuals can get involved. Specifically the wiki.freebsd.org is a great reference point for those
            intested in getting started with FreeBSD on embedded. The warm community is also a plus!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.phoronix.com/scan.php?page=news_item&amp;amp;px=TrueOS-First-Spin&quot;&gt;Trying
            out the FreeBSD powered TrueOS&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The folks over at Phoronix have done an early look at the new TrueOS desktop images and given some
            of their thoughts. &lt;/li&gt;
            &lt;li&gt;First up he gives props to the installer, noting that:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;The TrueOS desktop installer is basically the same as from the PC-BSD days, just re-branded. Still
            one of the easiest BSD graphical installers I&#39;ve dealt with and makes it a breeze for setting up a
            FreeBSD-on-ZFS system by default. &lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;After that they took it for a minimal spin, and thing mostly seem to be working. He mentions some
            of the default apps (Such as qupzilla and trojita) aren’t their favorite, but Lumina has come quite a ways
            for 1.0, despite a few rough edges still. (We are in the process of changing those default e-mail / browser
            apps)&lt;/li&gt;
            &lt;li&gt;Lastly the article mentions that it’s time to do a more full BSD round-up to see the state of
            installation of them, which we happen to have next!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.phoronix.com/scan.php?page=article&amp;amp;item=trying-8-bsds&amp;amp;num=1&quot;&gt;Trying
            out 8 BSDs on a modern PC&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;First up was TrueOS again, which no major changes there, easy install and done.&lt;/li&gt;
            &lt;li&gt;From there he tries out DragonFlyBSD, which he mentions that while the installer isn’t as easy, it
            is still one of his favorite BSD’s, working with all the hardware they’ve thrown at it.&lt;/li&gt;
            &lt;li&gt;Next up was GhostBSD, which also has an Easy-To-Use graphical installer similar to TrueOS that
            made it quick to get loaded and up to the Mate desktop.&lt;/li&gt;
            &lt;li&gt;Also tested was FreeBSD 11.0-RC2, which he mentions was easy to installed, and once done then
            ‘pkg’ could be used to easily get the setup he wanted setup.&lt;/li&gt;
            &lt;li&gt;Turning over to page two we get to the naughty list of BSD’s he had troubles with.&lt;/li&gt;
            &lt;li&gt;First up was OpenBSD which he tried 6.0. After installation and first boot, the display kept
            ‘disappearing’ which meant he couldn’t get IP information to try SSH’ing into the box. Perhaps a display
            driver error?&lt;/li&gt;
            &lt;li&gt;NetBSD 7 was up next, where the installer couldn’t get past a root device prompt. Most likely
            trouble finding the install media, which was the same story with MightnightBSD as well.&lt;/li&gt;
            &lt;li&gt;Also tested was “PacBSD” (Formerly ArchBSD) which he did manage to get installed, but not after
            major fighting with the process. After the process he ran into some issues getting packages up and running,
            but mentions it may have been bad timing due to them moving to a new server at the time.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.listbox.com/member/archive/182181/2016/09/sort/time_rev/page/1/entry/0:1/20160923124232:B7978ED4-81AC-11E6-A6DA-02E3F010038B/&quot;&gt;IllumOS
            imports a modified FreeBSD boot loader to replace grub 0.97&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Toomas Soome’s work to port the FreeBSD boot loader to IllumOS has been merged into illumos-gate,
            the upstream repository for all IllumOS distributions&lt;/li&gt;
            &lt;li&gt;Toomas’ work has also resulted in a number of commits to FreeBSD, and code sharing in both
            directions&lt;/li&gt;
            &lt;li&gt;Toomas helped me a lot with the building of the ZFS boot environment listing menu, even though on
            IllumOS they use a configuration file to list the BEs, rather than interrogating the live zpool like we do
            in FreeBSD&lt;/li&gt;
            &lt;li&gt;Toomas’ work to improve msdosfs and the block cache to speed up booting IllumOS also greatly
            helped FreeBSD&lt;/li&gt;
            &lt;li&gt;This work means IllumOS can now boot from a RAID-Z (the old grub they used could not), and if the
            work Toomas has done on FreeBSD is any indication, support for almost all other zpool features is also on
            the way&lt;/li&gt;
            &lt;li&gt;This work also sets IllumOS on a path to eventually having UEFI boot as well&lt;/li&gt;
            &lt;li&gt;It is good to see this work happening, FreeBSD technology being reused elsewhere, but also the
            improvements being made for IllumOS are coming back to FreeBSD, often landing upstream first, to make
            merging them into IllumOS easier.&lt;/li&gt;
            &lt;li&gt;The mailing list post describes how to convert existing systems away from grub, as well as how to
            opt to remain on grub for a while longer.&lt;/li&gt;
            &lt;li&gt;Grub 0.97 is expected to be removed from IllumOS within a year.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=8YQQfXqtyaA&quot;&gt;A demo of booting CentOS and
            Windows 10 in FreeBSD Bhyve through VNC headless&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2762&quot;&gt;This year’s anemic output&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2771&quot;&gt;“PAM Mastery” ebook now
            out&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=oC5D9fenQBs&quot;&gt;How-to Install OpenBSD 6.0
            plus XFCE desktop and basic applications&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/yniniNpV&quot;&gt; Piotr - LibreBoot &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/dCNX0yF7&quot;&gt; Alan - FreeBSD and PC-BSD&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/LndNeAYb&quot;&gt; Eduardo - Newcomers&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/F0y6L6NK&quot;&gt; Greg - ZFS ACL’s&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/sqMPJGMM&quot;&gt; Brian - Laptop Recs&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>EuroBSD Dreamin'</title>
        <smi:episode>160</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_09_21-eurobsd_dreamin"/>
        <id>http://www.bsdnow.tv/episodes/2016_09_21-eurobsd_dreamin</id>
        <published>2016-09-22T08:26:22-07:00</published>
        <updated>2016-09-23T08:14:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0160.ogg"
                rel="enclosure"
                length="38611128"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0160.ogg"
                    fileSize="38611128"
                    type="audio/ogg"
                    medium="audio"
                    duration="2963"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/bsd-0160.mp3"
                    fileSize="23891687"
                    type="audio/mpeg"
                    medium="audio"
                    duration="2963"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0160-432p.mp4"
                    fileSize="172869958"
                    type="video/mp4"
                    medium="video"
                    duration="2963"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0160.mp4"
                    fileSize="333634457"
                    type="video/mp4"
                    medium="video"
                    duration="2963"
                    isDefault="false"/>
            <media:content
                    url="http://bitlove.org/jupiterbroadcasting/bsdnowhd/bsd-0160.mp4.torrent"
                    type="application/x-bittorrent; enclosed=&quot;video/mp4&quot;"
                    medium="video"
                    fileSize="333634457"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0160-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:46" title="Headlines"/>
            <psc:chapter start="00:01:46" title="Performance Improvements for FreeBSD Kernel Debugging"
                         href="http://backtrace.io/blog/blog/2016/08/25/improving-freebsd-kernel-debugging/"/>
            <psc:chapter start="00:07:57" title="OpenBSD gunzip pipeline tightening"
                         href="https://www.mail-archive.com/tech@openbsd.org/msg34035.html"/>
            <psc:chapter start="00:10:24" title="OpenVPN On FreeBSD 10.3"
                         href="http://ramsdenj.com/2016/07/25/openvpn-on-freebsd-10_3.html"/>
            <psc:chapter start="00:13:42" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:16:20" title="lsop" href="https://github.com/606u/lsop"/>
            <psc:chapter start="00:18:35" title="News Roundup"/>
            <psc:chapter start="00:18:35" title="OpenBSD 2016 Fundraising Campaign"
                         href="https://bsdmag.org/openbsd_dontaions/"/>
            <psc:chapter start="00:19:55" title="Update firewall Bad Countries"
                         href="https://github.com/KaiLoi/update-fw-BC"/>
            <psc:chapter start="00:21:50" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:23:58" title="More utilities via moreutils"
                         href="https://distrowatch.com/weekly.php?issue=20160822#tips"/>
            <psc:chapter start="00:31:45" title="OpenBSD: SNI support added to libtls, httpd in –current"
                         href="http://undeadly.org/cgi?action=article&amp;sid=20160823100144"/>
            <psc:chapter start="00:34:55" title="Beastie Bits"/>
            <psc:chapter start="00:34:55" title="Shawn Webb of HardenedBSD joins the OPNSense Core Team"
                         href="https://opnsense.org/new-core-team-member/"/>
            <psc:chapter start="00:35:08" title="How to install 2.11 BSD on a (simulated) PDP11"
                         href="http://vak.ru/doku.php/proj/pdp11/211bsd"/>
            <psc:chapter start="00:34:29" title="OpenBSD Puffy needlepoint pixelart"
                         href="https://nemessica.tintagel.pl/blog/OpenBSD-Puffy/"/>
            <psc:chapter start="00:36:05" title="PulseAudio has been removed from dports (DragonFly BSD)"
                         href="http://lists.dragonflybsd.org/pipermail/users/2016-August/313010.html"/>
            <psc:chapter start="00:36:38" title="pfSense 2.4 pre-alpha available for testing, based on FreeBSD 11.0"
                         href="https://blog.pfsense.org/?p=2118"/>
            <psc:chapter start="00:37:50" title="Call for Testing – Bhyve HDA Sound Emulation"
                         href="https://lists.freebsd.org/pipermail/freebsd-virtualization/2016-September/004700.html"/>
            <psc:chapter start="00:38:32" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="00:40:40" title="Feedback/Questions"/>
            <psc:chapter start="00:40:40" title="Matthew – ZFS Hole Birth" href="http://pastebin.com/CrZiDAF0"/>
            <psc:chapter start="00:43:30" title="Hunter – systemd-mount" href="http://pastebin.com/GztjY4wz"/>
            <psc:chapter start="00:43:47" title="Anonymous – Cool'n'quiet" href="http://pastebin.com/gG4j4RCi"/>
            <psc:chapter start="00:45:45" title="Nathan – Datacenter" href="http://pastebin.com/9XgPzMM9"/>
            <psc:chapter start="00:47:09" title="Chuck – OpenBSD w/DO" href="http://pastebin.com/FM2xYcxh"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <summary>This week on BSDNow, Allan is currently at EuroBSDCon! However due to the magic of video (or time
            travel), you still get a new episode. (You’re Welcome!) Stay tuned for the latest BSD news on your place to
            B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 160: EuroBSD-Dreamin&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://backtrace.io/blog/blog/2016/08/25/improving-freebsd-kernel-debugging/&quot;&gt;Performance
            Improvements for FreeBSD Kernel Debugging&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“We previously &lt;a href=&quot;http://backtrace.io/blog/blog/2015/10/03/whats-a-coredump&quot;&gt;explored
            FreeBSD userspace coredumps&lt;/a&gt;. Backtrace’s debugging platform supports FreeBSD kernel coredumps too,
            and their traces share many features. They are constructed somewhat differently, and in the process of
            adding support for them, we found a way to improve performance for automated programs accessing them.”&lt;/li&gt;
            &lt;li&gt;“A kernel core is typically only generated in exceptional circumstances. Unlike userspace
            processes, kernel routines cannot fault without sacrificing the machine’s availability. This means things
            like page faults and illegal instructions inside the kernel stop the machine, instead of just one process.
            At that point, in most cases, it is only usable enough to inspect its state in a debugger, or to generate a
            core file.”&lt;/li&gt;
            &lt;li&gt;No one likes it when this happens. This is why backtrace.io is focused on being able to figure out
            why it is happening&lt;/li&gt;
            &lt;li&gt;“A FreeBSD kernel core file can be formatted in several different ways. This depends on which type
            of dump was performed. Full core dumps are ELF files, similar in structure to userspace core files. However,
            as RAM size grew, this became more difficult to manage. In 2006, FreeBSD introduced minidumps, which are
            much smaller without making the core file useless. This has been the default dump type since FreeBSD 6.0.”&lt;/li&gt;
            &lt;li&gt;The article goes into detail on the minidump format, and some basic debugging techniques&lt;/li&gt;
            &lt;li&gt;“Libkvm will first determine whether the virtual address lies within the kernel or direct maps. If
            it lies in the kernel map, libkvm will consult the page table pages to discover the corresponding physical
            address. If it lies in the direct map, it can simply mask off the direct map base address. If neither of
            these applies, the address is illegal. This process is encapsulated by va&lt;em&gt;to&lt;/em&gt;pa, or
            “virtual address to physical address”. Once the physical address is determined, libkvm consults the core
            file’s bitmap to figure out where in the core file it is located.”&lt;/li&gt;
            &lt;li&gt;“minidumps include a sparse bitmap indicating the pages that are included. These pages are dumped
            sequentially in the last section. Because they are sparse in a not entirely predictable way, figuring the
            offset into the dump for a particular physical address cannot be reduced to a trivial formula.”&lt;/li&gt;
            &lt;li&gt;The article goes into detail about how lookups against this map are slow, and how they were
            improved&lt;/li&gt;
            &lt;li&gt;“For typical manual debugger use, the impact of this change isn’t noticeable, which is probably
            why the hash table implementation has been in use for 10 years. However, for any automated debugging
            process, the extra latency adds up quickly.”&lt;/li&gt;
            &lt;li&gt;“On a sample 8GB kernel core file (generated on a 128GB server), crashinfo improves from 44
            seconds to 9 seconds, and uses 30% less memory”&lt;/li&gt;
            &lt;li&gt;“Backtrace began shipping a version of this performance improvement in ptrace in February 2016.
            This enables us to also offer significantly faster tracing of FreeBSD kernel cores to customers running
            current and older releases of FreeBSD. On July 17, 2016, our work improving libkvm scaling was committed to
            FreeBSD/head. It will ship with FreeBSD 12.0.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.mail-archive.com/tech@openbsd.org/msg34035.html&quot;&gt;OpenBSD
            gunzip pipeline tightening&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;OpenBSD has rethought the way they handle package signing&lt;/li&gt;
            &lt;li&gt;Changing from: 1/ fetch data -&amp;gt; 2/ uncompress it -&amp;gt; 3/ check signature -&amp;gt; 4/
            process data&lt;/li&gt;
            &lt;li&gt;To: 1/ fetch data -&amp;gt; 2/ check signature -&amp;gt; 3/ uncompress -&amp;gt; 4/ process data&lt;/li&gt;
            &lt;li&gt;“The solution is to move the signature outside of the gzip header”&lt;/li&gt;
            &lt;li&gt;“Now, Since step 1/ is privsep, as long as step 2 is airtight, 3/ and 4/are no longer vulnerable”&lt;/li&gt;
            &lt;li&gt;Guidelines:

            &lt;ul&gt;
            &lt;li&gt;small, self-contained code to parse simple gzip headers&lt;/li&gt;
            &lt;li&gt;signify-style signature in the gzip comment. Contains checksums of 64K blocks of the compressed
            archive&lt;/li&gt;
            &lt;li&gt;don&#39;t even think about passing the original gzip header through&lt;/li&gt;
            &lt;li&gt;use as a pipeline step: does not need to download full archive to use it, and never ever pass any
            data to the gunzip part before it&#39;s been verified.&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;“Note that afaik we haven&#39;t had any hole in our gunzipping process. Well… waiting for an
            accident to happen is not how we do things. Hopefully, this should prevent future mishaps.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://ramsdenj.com/2016/07/25/openvpn-on-freebsd-10_3.html&quot;&gt;OpenVPN On
            FreeBSD 10.3&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“While trying to setup OpenVPN, I noticed there was no up-to-date information with correct
            instructions. OpenVPN uses EasyRSA to setup keys, it has recently been changed in version 3. As a result of
            this, the old steps to configure OpenVPN are no longer correct. I went through the process of setting up a
            VPN using OpenVPN on FreeBSD 10.3.”&lt;/li&gt;
            &lt;li&gt;I know FreeBSD developer Adrian Chadd complained about this exact problem when he was trying to
            setup a VPN before attending DEFCON&lt;/li&gt;
            &lt;li&gt;The tutorial walks through the basic steps:

            &lt;ul&gt;
            &lt;li&gt;Install the needed software&lt;/li&gt;
            &lt;li&gt;Configure EasyRSA&lt;/li&gt;
            &lt;li&gt;Create a CA&lt;/li&gt;
            &lt;li&gt;Generate keys and DH params&lt;/li&gt;
            &lt;li&gt;OpenVPN Server Config&lt;/li&gt;
            &lt;li&gt;OpenVPN Client Config&lt;/li&gt;
            &lt;li&gt;Starting the daemon&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;It even finishes off with bonus instructions on Port Forwarding, Firewalls, and Dynamic DNS&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/606u/lsop&quot;&gt;lsop&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;LSOP is the tool a bunch of users have been asking for&lt;/li&gt;
            &lt;li&gt;“a FreeBSD utility to list all processes running with outdated binaries or shared libraries”&lt;/li&gt;
            &lt;li&gt;How does it work? “lsop iterates over all running processes and looks through memory-mapped files
            with read + execute access; then it checks if those files are still available or have been
            modified/deleted.”&lt;/li&gt;
            &lt;li&gt;How would you use it? After installing an system update (that doesn’t require a reboot to update
            the kernel), or upgrade your packages, you still need to know which daemons need to be restarted to use the
            patched libraries and binaries&lt;/li&gt;
            &lt;li&gt;This tool gives you that list&lt;/li&gt;
            &lt;li&gt;Thanks to Bogdan Boyadzhiev for writing this much needed tool&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.openbsdfoundation.org/campaign2016.html&quot;&gt;OpenBSD 2016
            Fundraising Campaign&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The OpenBSD fund-raising campaign has given us a status update on the state of 2016.&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;They start by giving us a re-cap of previous years:
            “2015 was a good year for the foundation financially, with one platinum, one gold, four silver and 3 bronze
            donors providing half of our total donations. 680 individuals making smaller contributions provided the
            other half. While the total was down significantly after 2014’s blockbuster year, we again exceeded our
            goal.”&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;As of Sept 5th, they were at approx $115k out of a total goal of 250k. &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;If you are an OpenBSD user, remember to contribute before the end of the year. Small amounts help,
            and the money of course goes to great causes such as hackathons and running the OpenBSD infrastructure.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/KaiLoi/update-fw-BC&quot;&gt;Update firewall Bad Countries&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Network and Systems admins know, sometimes when all else fails you need to break out the HUGE
            ban-hammer. In this case sometimes entire countries get put on the excrement list until the attacks stop.&lt;/li&gt;
            &lt;li&gt;We have a handy GitHub project today, which will assist you in doing exactly that, enter
            update-fw-BC. (Update firewall by country)&lt;/li&gt;
            &lt;li&gt;This perl script may be your savior when dealing with instances that require major brute force. It
            specifically works with IPFW, PF and IPTABLES, which will allow it to run across a variety of BSD’s or even
            Linux.&lt;/li&gt;
            &lt;li&gt;It will ingest a list of IP’s that you feed it (perhaps from another tool such as sshguard) and
            determine what block the IP belongs to, and match according to country. &lt;/li&gt;
            &lt;li&gt;Detailed setup instructions for the various firewalls are included, and some instructions for
            FreeBSD, although using it on OpenBSD or other $BSD should also be easy to adapt.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://distrowatch.com/weekly.php?issue=20160822#tips&quot;&gt;More utilities
            via moreutils&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;In most BSDs, the “core” set of utilities and commands are just part of the base system, but on
            Linux, they are usually provided by the “coreutils” package.&lt;/li&gt;
            &lt;li&gt;However, on Linux and now FreeBSD, there is a “moreutils” package, that provides a number of
            interesting additional basic utilities, including:

            &lt;ul&gt;
            &lt;li&gt;chronic: Run a task via crontab, and only generate output if the task fails&lt;/li&gt;
            &lt;li&gt;combine: binary AND two text files together, only displaying lines that are in both files&lt;/li&gt;
            &lt;li&gt;errno: look up the text description of a specific error number&lt;/li&gt;
            &lt;li&gt;ifdata: parse out specific information from ifconfig&lt;/li&gt;
            &lt;li&gt;ifne: if-not-empty, only run a command if the output of the pipe is not blank&lt;/li&gt;
            &lt;li&gt;isutf8: determine if a file or stdin contains utf8&lt;/li&gt;
            &lt;li&gt;lckdo: execute a command with a lock held, to prevent a second copy from spawning&lt;/li&gt;
            &lt;li&gt;mispipe: return the exit code of the first command in a pipe chain, rather than the last&lt;/li&gt;
            &lt;li&gt;parallel: run multiple jobs at once&lt;/li&gt;
            &lt;li&gt;pee: tee standard input to multiple pipes&lt;/li&gt;
            &lt;li&gt;sponge: write standard input to a file, allows you to overwrite a file in place: sort file |
            sponge file&lt;/li&gt;
            &lt;li&gt;ts: add a timestamp to each line of standard input&lt;/li&gt;
            &lt;li&gt;vidir: edit a directory in vi, great for bulk renames&lt;/li&gt;
            &lt;li&gt;vipe: insert vi into a pipe, edit the content before it is passed to the next command&lt;/li&gt;
            &lt;li&gt;zrun: uncompress the arguments before passing them. Like gzless and friends, but for any command&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;Just goes to show the power of the original UNIX philosophy, chaining together a bunch of small
            useful tools to do really powerful things&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160823100144&quot;&gt;OpenBSD:
            SNI support added to libtls, httpd in –current&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;libtls, LibreSSL’s improved API to replace the OpenSSL standard, now has a set of functions to
            implement SNI (Server Name Indication) &lt;/li&gt;
            &lt;li&gt;Until a few years ago, each different SSL/TLS enabled website required a unique IP address,
            because typical HTTP Virtual Hosting (differentiating which content to serve based on the Host header in the
            HTTP request), didn’t work because the request was encrypted.&lt;/li&gt;
            &lt;li&gt;Finally the TLS standard was updated to include the hostname of the site the user is requesting in
            the TLS handshake, so the server can return the corresponding certificate, and multiple TLS enabled websites
            can be hosted on a single IP address&lt;/li&gt;
            &lt;li&gt;The new API includes the ability to provide additional keypairs (via tls&lt;em&gt;config&lt;/em&gt;add&lt;em&gt;keypair&lt;/em&gt;{file,mem}())&lt;/li&gt;
            &lt;li&gt;And allow the server to determine what servername the client requested viatls&lt;em&gt;conn&lt;/em&gt;servername()&lt;/li&gt;
            &lt;li&gt;This is much easier to use, and therefore safer and less error prone, than the OpenSSL API&lt;/li&gt;
            &lt;li&gt;The libtls API is used in a number of OpenBSD tools, including the httpd&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://opnsense.org/new-core-team-member/&quot;&gt;Shawn Webb of HardenedBSD
            joins the OPNSense Core Team&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://vak.ru/doku.php/proj/pdp11/211bsd&quot;&gt;How to install 2.11 BSD on a
            (simulated) PDP11&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://nemessica.tintagel.pl/blog/OpenBSD-Puffy/&quot;&gt;OpenBSD Puffy
            needlepoint pixelart&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/users/2016-August/313010.html&quot;&gt;PulseAudio
            has been removed from dports (DragonFly BSD)&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://blog.pfsense.org/?p=2118&quot;&gt;pfSense 2.4 pre-alpha available for
            testing, based on FreeBSD 11.0 &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://lists.freebsd.org/pipermail/freebsd-virtualization/2016-September/004700.html&quot;&gt;Call
            for Testing - Bhyve HDA Sound Emulation &lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/CrZiDAF0&quot;&gt; Matthew - ZFS Hole Birth&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/GztjY4wz&quot;&gt; Hunter - systemd-mount &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/gG4j4RCi&quot;&gt; Anonymous - Cool’n’quiet&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/9XgPzMM9&quot;&gt; Nathan - Datacenter &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/FM2xYcxh&quot;&gt; Chuck - OpenBSD w/DO&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>Net Scaling Privacy (Flix Style)</title>
        <smi:episode>159</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_09_14-net_scaling_privacy"/>
        <id>http://www.bsdnow.tv/episodes/2016_09_14-net_scaling_privacy</id>
        <published>2016-09-15T13:48:12-07:00</published>
        <updated>2016-09-16T06:48:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0159.ogg"
                rel="enclosure"
                length="56380677"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0159.ogg"
                    fileSize="56380677"
                    type="audio/ogg"
                    medium="audio"
                    duration="4317"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jbmirror/bsd-0159.mp3"
                    fileSize="34725607"
                    type="audio/mpeg"
                    medium="audio"
                    duration="4317"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0159-432p.mp4"
                    fileSize="383364977"
                    type="video/mp4"
                    medium="video"
                    duration="4317"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0159.mp4"
                    fileSize="739793879"
                    type="video/mp4"
                    medium="video"
                    duration="4317"
                    isDefault="false"/>
            <media:content
                    url="http://bitlove.org/jupiterbroadcasting/bsdnowhd/bsd-0159.mp4.torrent"
                    type="application/x-bittorrent; enclosed=&quot;video/mp4&quot;"
                    medium="video"
                    fileSize="739793879"
                    duration="4317"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0159-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:57" title="Headlines"/>
            <psc:chapter start="00:01:57" title="Protecting Netflix Viewing Privacy at Scale, with FreeBSD"
                         href="http://techblog.netflix.com/search/label/FreeBSD"/>
            <psc:chapter start="00:12:57" title="OpenBSD on HP Stream 7"
                         href="http://www.tedunangst.com/flak/post/OpenBSD-on-HP-Stream-7"/>
            <psc:chapter start="00:18:30" title="DragonflyBSD steps towards base LibreSSL"
                         href="http://lists.dragonflybsd.org/pipermail/commits/2016-September/624493.html"/>
            <psc:chapter start="00:20:00" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:22:22" title="OpenBSD g2k16 Hackathon"/>
            <psc:chapter start="00:27:30" title="News Roundup"/>
            <psc:chapter start="00:27:30" title="OpenBSD (with encrypted softraid) on the Chromebook Pixel"
                         href="https://jcs.org/notaweblog/2016/08/26/openbsd_chromebook/"/>
            <psc:chapter start="00:31:25" title="doas mastery" href="http://www.tedunangst.com/flak/post/doas-mastery"/>
            <psc:chapter start="00:36:15" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:39:30" title="FreeBSD Foundation Welcomes New Board Members"
                         href="https://www.freebsdfoundation.org/blog/freebsd-foundation-welcomes-new-board-members/"/>
            <psc:chapter start="00:43:31" title="more, less, and a story of typical Unix fossilization"
                         href="https://utcc.utoronto.ca/~cks/space/blog/unix/MoreAndUnixFossilization"/>
            <psc:chapter start="00:49:00" title="Beastie Bits"/>
            <psc:chapter start="00:49:00" title="PC-BSD listed in the top 8 'best' alternatives to Windows 10"
                         href="http://www.computerworlduk.com/galleries/operating-systems/-free-alternatives-windows-10-3639433/"/>
            <psc:chapter start="00:49:40" title="Creating a quick DNS server with a Rapsberry Pi2 and FreeBSD 11.0-RC1"
                         href="http://bsdimp.blogspot.co.uk/2016/08/creating-quick-dns-server-with.html"/>
            <psc:chapter start="00:50:10" title="Dual Boot OpenBSD and Linux + UEFI"
                         href="https://bsdlaptops.wordpress.com/2016/03/07/vaio-pro-11-part-2/"/>
            <psc:chapter start="00:50:30" title="DesktopBSD 2.0 various versions available (Gnome, Lumina, KDE, LXDE)"
                         href="http://desktopbsd.boards.net/board/10/announcements"/>
            <psc:chapter start="00:50:50"
                         title="FreeBSD gets new ZFS features including: Compressed ARC and ZFS Allocation Throttle"
                         href="https://svnweb.freebsd.org/base?view=revision&amp;revision=305323"/>
            <psc:chapter start="00:55:25" title="One Floppy NetBSD Distribution"
                         href="https://github.com/user340/fdgw2"/>
            <psc:chapter start="00:56:05" title="A Compendium of BUGs" href="https://github.com/q5sys/BUGtracker"/>
            <psc:chapter start="00:58:08" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:00:05" title="Feedback/Questions"/>
            <psc:chapter start="01:00:05" title="Galahad – OpenBSD X setup" href="http://pastebin.com/b7W6NHqs"/>
            <psc:chapter start="01:01:15" title="Tang – Subtitles" href="http://pastebin.com/P4MUs3Pa"/>
            <psc:chapter start="01:03:09" title="Ivan – Zpool Options" href="http://pastebin.com/LQ8yTp0G"/>
            <psc:chapter start="01:06:51" title="Brad – Replication Issue" href="http://pastebin.com/XTK5gXMU"/>
            <psc:chapter start="01:08:43" title="MJ – HBA" href="http://pastebin.com/TdYTMSj9"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <summary>This week on BSDNow, we’ve got Netflix + FreeBSD news to discuss, which is always a crowd pleaser. That
            plus EuroBSDCon is just around the corner &amp; more! Stick around for your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 159: Net Scaling Privacy (Flix Style)&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://techblog.netflix.com/search/label/FreeBSD&quot;&gt;Protecting Netflix
            Viewing Privacy at Scale, with FreeBSD&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;This blog post from Netflix tells the story of how Netflix developed in-kernel TLS to speed up
            delivery of video via HTTPS&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Since the beginning of the Open Connect program we have significantly increased the efficiency of
            our OCAs - from delivering 8 Gbps of throughput from a single server in 2012 to over 90 Gbps from a single
            server in 2016. We contribute to this effort on the software side by optimizing every aspect of the software
            for our unique use case - in particular, focusing on the open source FreeBSD operating system and the NGINX
            web server that run on the OCAs.&lt;/p&gt;

            &lt;p&gt;In the modern internet world, we have to focus not only on efficiency, but also security. There are
            many state-of-the-art security mechanisms in place at Netflix, including Transport Level Security (TLS)
            encryption of customer information, search queries, and other confidential data. We have always relied on
            pre-encoded Digital Rights Management (DRM) to secure our video streams. Over the past year, we’ve begun to
            use Secure HTTP (HTTP over TLS or HTTPS) to encrypt the transport of the video content as well. This helps
            protect member privacy, particularly when the network is insecure - ensuring that our members are safe from
            eavesdropping by anyone who might want to record their viewing habits.&lt;/p&gt;

            &lt;p&gt;The goal is to ensure that your government, ISP, and wifi sniffing neighbour cannot tell which
            Netflix videos you are watching&lt;/p&gt;

            &lt;p&gt;Netflix Open Connect serves over 125 million hours of content per day, all around the world. Given
            our scale, adding the overhead of TLS encryption calculations to our video stream transport had the
            potential to greatly reduce the efficiency of our global infrastructure.&lt;/p&gt;

            &lt;p&gt;We evaluated available and applicable ciphers and decided to primarily use the Advanced Encryption
            Standard (AES) cipher in Galois/Counter Mode (GCM), available starting in TLS 1.2. We chose AES-GCM over the
            Cipher Block Chaining (CBC) method, which comes at a higher computational cost. The AES-GCM cipher algorithm
            encrypts and authenticates the message simultaneously - as opposed to AES-CBC, which requires an additional
            pass over the data to generate keyed-hash message authentication code (HMAC). CBC can still be used as a
            fallback for clients that cannot support the preferred method.&lt;/p&gt;

            &lt;p&gt;All revisions of Open Connect Appliances also have Intel CPUs that support AES-NI, the extension to
            the x86 instruction set designed to improve encryption and decryption performance. We needed to determine
            the best implementation of AES-GCM with the AES-NI instruction set, so we investigated alternatives to
            OpenSSL, including BoringSSL and the Intel Intelligent Storage Acceleration Library (ISA-L).&lt;/p&gt;

            &lt;p&gt;Netflix and NGINX had previously worked together to improve our HTTP client request and response
            time via the use of sendfile calls to perform a zero-copy data flow from storage (HDD or SSD) to network
            socket, keeping the data in the kernel memory address space and relieving some of the CPU burden. The
            Netflix team specifically added the ability to make the sendfile calls asynchronous - further reducing the
            data path and enabling more simultaneous connections. However, TLS functionality, which requires the data to
            be passed to the application layer, was incompatible with the sendfile approach.&lt;/p&gt;

            &lt;p&gt;To retain the benefits of the sendfile model while adding TLS functionality, we designed a hybrid
            TLS scheme whereby session management stays in the application space, but the bulk encryption is inserted
            into the sendfile data pipeline in the kernel. This extends sendfile to support encrypting data for TLS/SSL
            connections.&lt;/p&gt;

            &lt;p&gt;We tested the BoringSSL and ISA-L AES-GCM implementations with our sendfile improvements against a
            baseline of OpenSSL (with no sendfile changes), under typical Netflix traffic conditions on three different
            OCA hardware types. Our changes in both the BoringSSL and ISA-L test situations significantly increased both
            CPU utilization and bandwidth over baseline - increasing performance by up to 30%, depending on the OCA
            hardware version. We chose the ISA-L cipher implementation, which had slightly better results. With these
            improvements in place, we can continue the process of adding TLS to our video streams for clients that
            support it, without suffering prohibitive performance hits.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;If you would like more detail, check out the papers from &lt;a href=&quot;https://people.freebsd.org/~rrs/asiabsd_2015_tls.pdf&quot;&gt;AsiaBSDCon
            2015&lt;/a&gt; and the &lt;a href=&quot;https://people.freebsd.org/~rrs/asiabsd_tls_improved.pdf&quot;&gt;updated
            one from 2016&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/OpenBSD-on-HP-Stream-7&quot;&gt;OpenBSD on HP
            Stream 7&lt;/a&gt;&lt;/h3&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Recent events have rocked the mobile computing world to its core. OpenBSD retired the zaurus port,
            leaving users in desperate need of a new device. And not long before that, Microsoft released the
            Anniversary Update to Windows 10, but with free space requirements such that it’s nigh impossible to install
            on cheap 32GB eMMC equipped devices such as the HP Stream series, leaving users searching for a new
            lightweight operating system. With necessity as both mother and father, the scene is set for a truly epic
            pairing. OpenBSD on the HP Stream 7.&lt;/p&gt;

            &lt;p&gt;The HP Stream line is a series of budget computers in a couple form factors. The Stream 11 is a
            fairly typical netbook. However, the Stream 7 and 8 are tablets. They look like cheap Android devices, but
            inside the case, they’re real boys, er PCs, with Intel Atom CPUs.&lt;/p&gt;

            &lt;p&gt;To install OpenBSD on such a device, we need a few parts. Obviously, the tablet itself. There’s a
            dearth of ports on these things, but there is a micro USB port. Attaching anything useful requires an OTG
            “on the go” cable that creates a type A port. Attaching more than one useful thing requires a mini hub. And
            completing the install requires one each USB stick, keyboard, and network adapter.&lt;/p&gt;

            &lt;p&gt;First, we need to prep the machine to boot from USB. Actually, before doing anything, make sure you
            have a full charge. It’s going to be battery only from here on out. Plug everything in. Flash drive,
            keyboard, and network into the hub, hub into the OTG cable, cable into the port on top of the Stream.&lt;/p&gt;

            &lt;p&gt;Turn on the machine while holding the volume down button. This launches a mini menu from which we
            can enter the BIOS. There’s a little on screen keyboard in the corner, so this can be done even without a
            keyboard attached, but the USB keyboard should work. We need to change two settings in the boot section.
            First, turn off secure boot. Second, switch boot order to prefer USB. Save and exit. The first reboot
            reveals a confirmation screen checking that we really want to disable secure boot. We must enter a PIN and
            press enter. Enter the PIN shown on the screen and press enter. And we are go.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;Then boot up OpenBSD from the USB drive&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;Ted then works there a number of kernel panics and device driver issues, but after
            disabling ACPI and IntelDRM, the device boots OpenBSD.&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Of course, there’s no X at this point. And definitely no touch screen. And no internal networking.
            However, by keeping our USB hub attached, we can drive the console and access the network. At least until
            the battery is depleted, even if we have no way of knowing how long that will be since we disabled all the
            ACPI devices, which also means no suspend or resume.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;With some xorg.conf hacking, he did get Xorg working&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/commits/2016-September/624493.html&quot;&gt;DragonflyBSD
            steps towards base LibreSSL&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://freshbsd.org/commit/dfbsd/304ca408000cd34559ef5319b4b5a6766d6eb35b&quot;&gt;Project:
            DragonFlyBSD / Switch base to use private LibreSSL libraries&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160911231651&quot;&gt;DragonFly
            BSD adopts uses of LibreSSL&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;The number of projects beginning to switch over to LibreSSL is growing and it appears we can now
            throw DragonFly into that camp.&lt;/li&gt;
            &lt;li&gt;Following something that sounds vaguely familiar (Allan!) DFLY is now creating “private” LibreSSL
            libraries which are only linked against by base system binaries.&lt;/li&gt;
            &lt;li&gt;For the moment OpenSSL is &lt;em&gt;still&lt;/em&gt; built, primarily so that various ports and
            3rd party apps can continue to function as before.&lt;/li&gt;
            &lt;li&gt;A NO_OPENSSL option has also been added, but doesn’t really do much (yet), since it’ll still build
            and install headers / libraries even if set.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;OpenBSD g2k16 Hackathon&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160911012316&quot;&gt;g2k16
            Hackathon Report: Antoine Jacoutot on Binary Patches&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160911231712&quot;&gt;g2k16
            Hackathon Report: Matthieu Herrb on xenodm&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160911000337&quot;&gt;g2k16
            Hackathon Report: Vincent Gross on iked(8), armv7 and sys/netinet[6]&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160911000052&quot;&gt;g2k16
            Hackathon Report: Florian Obser on httpd, networking, acme-client, and more&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160909012520&quot;&gt;g2k16
            Hackathon Report: Jasper Lievisse Adriaanse on ddb(4) and more&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160908002430&quot;&gt;g2k16
            Hackathon Report: Christian Weisgerber on gettext progress, RTC work, removing kernel cruft&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160907131655&quot;&gt;g2k16
            Hackathon Report: Brent Cook on Chromebooks, crypto, and more&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160906230610&quot;&gt;g2k16
            Hackathon Report: Ted Unangst on doas, signify, code removal&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160905235911&quot;&gt;g2k16
            Hackathon Report: Marc Espie on package signing evolution&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160906004915&quot;&gt;g2k16
            Hackathon Report: Adam Wolk on ports, wireless drivers and more&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160905134009&amp;amp;mode=expanded&quot;&gt;g2k16
            Hackathon Report: Mike Larkin on vmm + vmd progress&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://jcs.org/notaweblog/2016/08/26/openbsd_chromebook/&quot;&gt;OpenBSD (with
            encrypted softraid) on the Chromebook Pixel&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Looking for a Laptop to make your OpenBSD road-warrior? If so, we have a great blog tutorial on
            getting OpenBSD setup on the Chromebook Pixel with encrypted softraid!&lt;/li&gt;
            &lt;li&gt;Author Joshua Stein gives us a very verbose look at how to install and dial-in the laptop
            perfectly. But first for those wondering about the hardware in the pixel:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;The Chromebook Pixel LS (2015) has an Intel Core i7 processor (Broadwell) at 2.4Ghz, 16Gb of RAM, a
            2560x1700 400-nit IPS screen (239ppi), and Intel 802.11ac wireless. It has a Kingston 64Gib flash chip, of
            which about 54Gib can be used by OpenBSD when dual-booting with a 1Gb Chrome OS partition.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;Due to this being a chromebook with seaBIOS, some manual key-press trickery will be required to
            initially get the OpenBSD Installer up and running.&lt;/li&gt;
            &lt;li&gt;From here you’ll want to pay special close attention to the disk partitioning. In particular
            Joshua will show us how to shrink the existing encrypted /home that ChromeOS uses, keeping the dual-boot
            intact. This will become important if you ever plan on updating the device.&lt;/li&gt;
            &lt;li&gt;From here, we move back to a more traditional setup, but with the added bonus of doing a soft-raid
            setup.&lt;/li&gt;
            &lt;li&gt;But the fun isn’t over yet! If you want to make OpenBSD the default boot, that’ll require cracking
            the lid on the device and removing a special pink write-protect screw. And of course if you want to remove
            the default splash-screen image, Joshua has you covered as well, although some flashrom magic will be
            required.&lt;/li&gt;
            &lt;li&gt;At this point you are nearly done. Final details on enabling specific bits of hardware are
            discussed. Most things work, apart from Audio and Bluetooth as of right now.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/doas-mastery&quot;&gt;doas mastery&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“doas” mastery - Paging MWL!&lt;/li&gt;
            &lt;li&gt;Our buddy Ted Unangst has written up a great ‘mastery’ guide of the doas command, which can come
            in handy if you are among the un-initiated in doas land.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;UNIX systems have two classes of user, the super user and regular users. The super user is super,
            and everybody else is not. This concentration of power keeps things simple, but also means that often too
            much power is granted. Usually we only need super user powers to perform one task. We would rather not have
            such power all the time. Think of the responsibility that would entail! Like the sudo command, doas allows
            for subdivision of super user privileges, granting them only for specific tasks.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;He starts with the basic doas.conf setup, which starts with an empty config file&lt;/li&gt;
            &lt;li&gt;The doas config is much like a pf ruleset, the default is to block everything
            &amp;gt; We add the root rule second because doas evaluates rules in a last match manner. root is in the
            wheel group, so the first rule will match, and then we need to override that with a second rule. Remember to
            always start with general rules, then make them more specific.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;iXsystems&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.ixsystems.com/blog/ixsystems-host-meetbsd-california-2016-uc-berkeley/&quot;&gt;iXsystems
            to host MeetBSD&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;FreeBSD Foundation Welcomes New Board Members&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.freebsdfoundation.org/blog/freebsd-foundation-welcomes-new-board-members/&quot;&gt;New
            Board Members&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;The FreeBSD Foundation has added two new board members&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.freebsdfoundation.org/blog/new-board-member-interview-kylie-liang/&quot;&gt;Interview
            with Kylie Liang&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Kylie will focus on representing FreeBSD at conferences and businesses in China&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I live in China. There, I can act as a bridge between Chinese companies and the FreeBSD community
            to help drive FreeBSD adoption. Through my leadership role in the FreeBSD Foundation, I will help promote
            FreeBSD in China and also represent the Foundation at conferences and events in my region.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;Kylie leads the team the ensures FreeBSD runs well on Hyper-V and Azure, including providing
            commercial support for customers who run FreeBSD or FreeBSD based appliances on the Azure Cloud&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I joined Microsoft and started to lead the project called FreeBSD Integration Service to get
            FreeBSD running well on Hyper-V and Azure. To promote our work and to understand the FreeBSD ecosystem, I
            started to participate in FreeBSD events where I was inspired by this technical community.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.freebsdfoundation.org/blog/new-board-member-interview-philip-paeps/&quot;&gt;Interview
            with Philip Paeps&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;Philip started with FreeBSD in the early 2000s and got his commit bit in 2004&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;The patches I submitted to make ACPI and input devices work on that laptop led to a src commit bit
            in 2004. While I haven’t worked on ACPI or input devices since, I have been contributing to different areas
            of the kernel. Taking up maintainership of some ports I cared about also got me a ports commit bit after
            some time.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;Philip will continue to help run EuroBSDCon, but is also spreading the word about FreeBSD in India
            and Africa&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Primarily, I think I can be useful! I attend (and organize) a number of conferences around the
            world every year, particularly in regions that have a mostly “stealthy” FreeBSD community. While I clearly
            don’t need to be on the FreeBSD Foundation board to advocate for FreeBSD, joining as a director will provide
            an additional asset when working in areas of the world where organizational affiliations are meaningful.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;Philip has also developed network drivers and various other bits and pieces, and has extensive
            experience working with and for hardware vendors and appliance vendors&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;Despite intending to eventually contribute their code to the FreeBSD Project as open source, many
            hardware vendors still find it very difficult to engage directly with the FreeBSD development community. The
            Foundation helps bridge that gap and helps facilitate collaboration between commercial vendors and the
            FreeBSD community.&lt;/p&gt;

            &lt;p&gt;I hope to make FreeBSD more visible in regions of the world where it is historically
            under-represented. I expect I will be attending even more conferences and getting myself invited to even
            more organizations.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/unix/MoreAndUnixFossilization&quot;&gt;more,
            less, and a story of typical Unix fossilization&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Chris Siebenmann from the University of Toronto digs into the history of the difference between
            ‘less’ and ‘more’&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;In the beginning, by which we mean V7, Unix didn&#39;t have a pager at all. That was okay; Unix
            wasn&#39;t very visual in those days, partly because it was still sort of the era of the hard copy terminal.
            Then along came Berkeley and BSD. People at Berkeley were into CRT terminals, and so BSD Unix gave us things
            like vi and the first pager program, more (which showed up quite early, in 3BSD, although this isn&#39;t as
            early as vi, which appears in 2BSD). Calling a pager more is a little bit odd but it&#39;s a Unix type of
            name and from the beginning more prompted you with &#39;--More--&#39; at the bottom of the screen.&lt;/p&gt;

            &lt;p&gt;All of the Unix vendors that based their work on BSD Unix (like Sun and DEC) naturally shipped
            versions of more along with the rest of the BSD programs, and so more spread around the BSD side of things.
            However, more was by no means the best pager ever; as you might expect, it was actually a bit primitive and
            lacking in features. So fairly early on Mark Nudelman wrote a pager with somewhat more features and it wound
            up being called less as somewhat of a joke.&lt;/p&gt;

            &lt;p&gt;In a sane world, Unix vendors would have either replaced their version of more with the clearly
            superior less or at least updated their version of more to the 4.3 BSD version. Maybe less wouldn&#39;t have
            replaced more immediately, but certainly over say the next five years, when it kept on being better and most
            people kept preferring it when they had a choice.”
            + “This entire history has led to a series of vaguely absurd outcomes on various modern Unixes. On Solaris
            derivatives more is of course the traditional version with source code that can probably trace itself all
            the way back to 3BSD, carefully updated to SUS compliance. Solaris would never dream of changing what more
            is, not even if the replacement is better. Why, it might disturb someone.&lt;/p&gt;

            &lt;p&gt;Oddly, FreeBSD has done the most sensible thing; they&#39;ve outright replaced more with less.
            There is a /usr/bin/more but it&#39;s the same binary as less and as you can see the more manpage is just
            the less manpage. OpenBSD has done the same thing but has a specific manpage for more instead of just giving
            you the less manpage.&lt;/p&gt;

            &lt;p&gt;So, now you can see why I say that less is more, or more, or both, at several levels. less is
            certainly more than more, and sometimes less literally is more (or rather more is less, to put it the right
            way around).&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.computerworlduk.com/galleries/operating-systems/-free-alternatives-windows-10-3639433/&quot;&gt;PC-BSD
            listed in the top 8 &#39;best&#39; alternatives to Windows 10&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://bsdimp.blogspot.co.uk/2016/08/creating-quick-dns-server-with.html&quot;&gt;Creating
            a quick DNS server with a Rapsberry Pi2 and FreeBSD 11.0-RC1&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://bsdlaptops.wordpress.com/2016/03/07/vaio-pro-11-part-2/&quot;&gt;Dual
            Boot OpenBSD and Linux + UEFI&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://desktopbsd.boards.net/board/10/announcements&quot;&gt;DesktopBSD
            2.0 various versions available (Gnome, Lumina, KDE, LXDE)&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;FreeBSD gets new ZFS features including: &lt;a href=&quot;https://svnweb.freebsd.org/base?view=revision&amp;amp;revision=305323&quot;&gt;Compressed
            ARC &lt;/a&gt; and &lt;a href=&quot;https://svnweb.freebsd.org/base?view=revision&amp;amp;revision=305331&quot;&gt;ZFS
            Allocation Throttle &lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/user340/fdgw2&quot;&gt;One Floppy NetBSD Distribution&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/q5sys/BUGtracker&quot;&gt;A Compendium of BUGs&lt;/a&gt;
            &lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/b7W6NHqs&quot;&gt; Galahad - OpenBSD X setup&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/P4MUs3Pa&quot;&gt; Tang - Subtitles&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/LQ8yTp0G&quot;&gt; Ivan - Zpool Options&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/XTK5gXMU&quot;&gt; Brad - Replication Issue&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/TdYTMSj9&quot;&gt; MJ - HBA&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>Ham, Radio &amp; Pie, Oh My!</title>
        <smi:episode>158</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_00_07-ham_radio_and_pie_oh_my"/>
        <id>http://www.bsdnow.tv/episodes/2016_09_07-ham_radio_and_pie_oh_my</id>
        <published>2016-09-08T12:11:51-07:00</published>
        <updated>2016-09-09T07:28:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0158.ogg"
                rel="enclosure"
                length="83178443"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0158.ogg"
                    fileSize="83178443"
                    type="audio/ogg"
                    medium="audio"
                    duration="6568"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jbmirror/bsd-0158.mp3"
                    fileSize="52738602"
                    type="audio/mpeg"
                    medium="audio"
                    duration="6568"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0158-432p.mp4"
                    fileSize="383364977"
                    type="video/mp4"
                    medium="video"
                    duration="6568"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0158.mp4"
                    fileSize="739793879"
                    type="video/mp4"
                    medium="video"
                    duration="6568"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0158-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:02:09" title="Headlines"/>
            <psc:chapter start="00:02:09" title="PC-BSD is now TrueOS"
                         href="https://www.trueos.org/2016/09/01/pc-bsd-evolves-into-trueos/"/>
            <psc:chapter start="00:14:10" title="The Voicemail Scammers Never Got Past Our OpenBSD Greylisting"
                         href="http://bsdly.blogspot.com/2016/08/the-voicemail-scammers-never-got-past.html"/>
            <psc:chapter start="00:16:55" title="FreeBSD on a tiny system; what's missing"
                         href="http://adrianchadd.blogspot.com/2016/08/freebsd-on-tiny-system-whats-missing.html"/>
            <psc:chapter start="00:26:15" title="So I lost my OpenBSD FDE password"
                         href="https://blog.filippo.io/so-i-lost-my-openbsd-fde-password/"/>
            <psc:chapter start="00:34:44" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:37:35" title="Interview"/>
            <psc:chapter start="01:05:50" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="01:08:35" title="News Roundup"/>
            <psc:chapter start="01:08:35" title="See Michael W. Lucas in 2016"
                         href="http://blather.michaelwlucas.com/archives/2739"/>
            <psc:chapter start="01:10:05" title="It’s hard work printing nothing"
                         href="http://www.tedunangst.com/flak/post/its-hard-work-printing-nothing"/>
            <psc:chapter start="01:17:39" title="Revisiting W^X with OpenBSD 6.0"
                         href="http://blog.acumensecurity.net/revisiting-wx-with-openbsd-6-0/"/>
            <psc:chapter start="01:27:05" title="OpenBSD imports a letsencrypt client into the base system"
                         href="http://undeadly.org/cgi?action=article&amp;sid=20160901060733"/>
            <psc:chapter start="01:28:30" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:30:21" title="Beastie Bits"/>
            <psc:chapter start="01:30:21" title="OpenBSD: Release Songs 6.0: &quot;Goodbye&quot; -- no more CD releases"
                         href="https://www.openbsd.org/lyrics.html#60f"/>
            <psc:chapter start="01:30:52" title="FreeBSD 101 Hacks"
                         href="https://nanxiao.gitbooks.io/freebsd-101-hacks/content/"/>
            <psc:chapter start="01:32:03" title="LibreSSL enabled by default in HardenedBSD"
                         href="https://hardenedbsd.org/article/shawn-webb/2016-08-20/libressl-enabled-default"/>
            <psc:chapter start="01:32:22"
                         title="DragonflyBSD removes last bits of 32-bit Linux emulation and has no plans to implement 64-bit linux emulation"
                         href="http://lists.dragonflybsd.org/pipermail/commits/2016-August/624241.html"/>
            <psc:chapter start="01:33:03" title="OpenBSD has sent 32bit sparc to the great bitbucket in the sky"
                         href="https://twitter.com/phessler/status/771277693090467840"/>
            <psc:chapter start="01:33:15" title="Front Range BSD User Group September Meeting"
                         href="http://slexy.org/view/s2hm4HBkb2"/>
            <psc:chapter start="01:35:07" title="KnoxBug TrueOS Wrap-up"
                         href="http://knoxbug.org/content/going-with-the-flow"/>
            <psc:chapter start="01:36:05" title="Feedback/Questions"/>
            <psc:chapter start="01:36:05" title="Cody - TrueOS Questions" href="http://pastebin.com/mVK8G1Vr"/>
            <psc:chapter start="01:38:26" title="John - FreeNAS Backups" href="http://pastebin.com/xsUNUfCS"/>
            <psc:chapter start="01:39:38" title="Herminio - PowerPC + OpenBSD" href="http://pastebin.com/nHkWuNkm"/>
            <psc:chapter start="01:40:52" title="Dennis - pmake vs bmake" href="http://pastebin.com/NAh7r6Ed"/>
            <psc:chapter start="01:45:03" title="Al - Upgrade conflicts" href="http://pastebin.com/8HaK7yJ6"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Diane Bruce</name>
            <email>db@freebsd.org</email>
            <uri>https://twitter.com/Dianora_1</uri>
        </contributor>
        <summary>This week on BSDNow, we'll be talking to Diane Bruce about using it for Ham Radio Enthusiasts, the
            RPi3. That plus all the latest news from the week &amp; more, stick around for your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 158: Ham, Radio and Pie (oh my)&lt;/h1&gt;

            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.trueos.org/2016/09/01/pc-bsd-evolves-into-trueos/&quot;&gt;PC-BSD is
            now TrueOS&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;If you’ve been watching this show the past few months, I’ve been dropping little hints about the
            upcoming rename of PC-BSD -&amp;gt; TrueOS. We’ve made that more official finally, and are asking folks to
            test out the software before a wider announcement this fall.&lt;/li&gt;
            &lt;li&gt;For those wondering about the name change, it’s been something discussed over the past few years
            at different times. With us beginning to move more aggressively with changes for 11.0 (and eventually
            12-CURRENT), the time seemed right to have a fresh start, using it as a spring-board to introduce all the
            changes in both software, and development / release model.&lt;/li&gt;
            &lt;li&gt;I’ll be discussing more about this shift in a talk at MeetBSD2016 (Another reason for you to go),
            but here’s some of the highlights.&lt;/li&gt;
            &lt;li&gt;No longer tied to specific FreeBSD point-releases, TrueOS will instead follow a rolling-release
            model based upon FreeBSD -CURRENT.&lt;/li&gt;
            &lt;li&gt;Special tooling and features (Such as boot-environments) make this a feasible option that we
            didn’t have as easily in the early days of PC-BSD.&lt;/li&gt;
            &lt;li&gt;In addition, TrueOS builds some things different from vanilla FreeBSD. Specifically Matt Macy’s
            DRM and Linux Compat work, LibreSSL directly in base, built from External Toolchain (No clang in base system
            package) and much more. &lt;/li&gt;
            &lt;li&gt;New tools have have replaced, and are in the process of replacing the legacy PC-BSD control panel
            as well, which allows remote operation, either via Qt GUI, or WebSockets / REST API’s. &lt;/li&gt;
            &lt;li&gt;I’ll be talking about more as things unfold, but for now please feel free to test and let us have
            feedback while we push towards a more stable release.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://bsdly.blogspot.com/2016/08/the-voicemail-scammers-never-got-past.html&quot;&gt;The
            Voicemail Scammers Never Got Past Our OpenBSD Greylisting&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Peter Hansteen (That grumpy BSD guy) gives us an interesting look at how their OpenBSD
            grey-listing prevented spam from ever making it to their inbox.&lt;/li&gt;
            &lt;li&gt;Specifically it looks like it occurred during Aug 23rd and 24th, with a particularly nasty
            ransomware payload destined to play havoc with Windows systems.&lt;/li&gt;
            &lt;li&gt;Peter then walks us through their three-server mail setup, and how spamd is run in greylisting
            mode on each.&lt;/li&gt;
            &lt;li&gt;The results? Nothing short of perfection:
            &amp;gt; “From those sources we can see that there were a total of 386 hosts that attempted delivery, to a
            total of 396 host and target email pairs (annotated here in a .csv file
            with geographic origin according to whois). The interesting part came when I started looking at the mail
            server logs to see how many had reached the content filtering or had even been passed on in the direction of
            users&#39; mailboxes. There were none. The number of messages purportedly from voicemail@ in any of the
            domains we handle that made it even to the content filtering stage was 0. Zero. Not a single one made it
            through even to content filtering.”&lt;/li&gt;
            &lt;li&gt;Not bad at all! Looks like spam-trap addresses + grey-listing is the way to go for stopping this
            kind of foolishness. Checkout Peter’s blog post for more details, but perhaps this will encourage you to
            setup a similar-type system for your business.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://adrianchadd.blogspot.com/2016/08/freebsd-on-tiny-system-whats-missing.html&quot;&gt;FreeBSD
            on a tiny system; what’s missing&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Adrian Chadd talks about some of the bits that are missing to make FreeBSD truly useful on small
            embedded devices&lt;/li&gt;
            &lt;li&gt;Some of this stuff can be done now, but requires more work than it should&lt;/li&gt;
            &lt;li&gt;“The first is a lack of real service management. FreeBSD doesn&#39;t have a service management
            daemon - the framework assumes that daemons implement their own background and monitoring. It would be much
            nicer if init or something similar to init could manage services and start/restart them where appropriate.”&lt;/li&gt;
            &lt;li&gt;Of course, on a system with 32mb of memory, such a service manager would need to be very light
            weight&lt;/li&gt;
            &lt;li&gt;“maybe I want to only start telnetd or dropbear/sshd whenever a connection comes in. But I&#39;d
            also like to be able to add services for monitoring, such as dnsmasq and hostapd.”&lt;/li&gt;
            &lt;li&gt;telnetd and sshd can be run from inetd, but often depend on special support from the daemon&lt;/li&gt;
            &lt;li&gt;“The next is a lack of suitable syslog daemon. Yes, I&#39;d like to be able to log some messages
            locally - even if it&#39;s only a couple hundred kilobytes of messages. I&#39;d also like to be able to push
            messages to a remote service. Unfortunately the FreeBSD syslog daemon doesn&#39;t do log rotation or maximum
            log file sizes itself - it&#39;s done by &quot;newsyslog&quot; which runs out of cron. This isn&#39;t any
            good for real embedded systems with limited storage.”&lt;/li&gt;
            &lt;li&gt;Syslog leaves much to be desired, especially in its configuration syntax, and filtering
            capabilities. Having it be able to detect with log files have grown beyond a reasonable size and fire off
            newsyslog would be very interesting&lt;/li&gt;
            &lt;li&gt;“Then yes, there&#39;s a lack of a cron service. It&#39;d be nice to have that integrated into the
            service management framework so things could be easily added/removed. I may just use cron, but that means
            cron is also always running which adds memory footprint (~1.3 megabytes) for something that is almost never
            actually active. When you have 32MB of RAM, that&#39;s quite a bit of wasted memory.”&lt;/li&gt;
            &lt;li&gt;Systems have come back full circle, to where 32MB and 64MB are amounts of memory people expect to
            work with, while other people still want the system to perform well with 32 or 64 GB of memory&lt;/li&gt;
            &lt;li&gt;It will be interesting to see how this balancing act plays out, trying to make the same codebase
            useful for extremely small and extremely large systems at the same time, while also running it on your
            middle of the road laptop.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://blog.filippo.io/so-i-lost-my-openbsd-fde-password/&quot;&gt;So I lost my
            OpenBSD FDE password &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“The other day I set up a new OpenBSD instance with a nice RAID array, encrypted with Full Disk
            Encryption. And promptly proceeded to forget part of the passphrase.”&lt;/li&gt;
            &lt;li&gt;So they started a little project&lt;/li&gt;
            &lt;li&gt;Goal: “We need to extract enough info from the encrypted disk and rebuild enough of the decryption
            algorithm to be able to rapidly try many passphrases.”&lt;/li&gt;
            &lt;li&gt;The post walks through how they reverse engineered the encryption system from the source code and
            a hexdump of a small encrypted memory disk&lt;/li&gt;
            &lt;li&gt;“Now that we know how to extract the data and how to try passphrases against it, it will be
            trivial to write a bruteforce tool to recover the part of passphrase I forgot.”&lt;/li&gt;
            &lt;li&gt;So, rather than having to try every possible passphrase, they only had to try fuzzing around the
            known keyword that was their passphrase.&lt;/li&gt;
            &lt;li&gt;“UPDATE: I found it! After fixing a bug or two in the brute force tool and almost losing hope, it
            found the right combination of forgotten word and (Italian) misspelling.”&lt;/li&gt;
            &lt;li&gt;This work lead to the author recommending that OpenBSD consider &lt;a href=&quot;http://marc.info/?l=openbsd-tech&amp;amp;m=147316661717410&amp;amp;w=2&quot;&gt;strengthening
            the key derivation algorithm&lt;/a&gt; used in its FDE.&lt;/li&gt;
            &lt;li&gt;Rather than using a fixed number of rounds (8000 currently), do a small benchmark and determine
            how much work can be done in a reasonable amount of time&lt;/li&gt;
            &lt;li&gt;This is what FreeBSD’s GELI FDE does, targeting ‘over 2 million microseconds’ of work. On my
            desktop i5-3570 this results in 974842 rounds. The number will likely not be the same twice because of minor
            variations in how long it will take in microseconds.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Diane Bruce - &lt;a href=&quot;mailto:db@freebsd.org&quot;&gt;db@freebsd.org&lt;/a&gt;
            / &lt;a href=&quot;https://twitter.com/Dianora_1&quot;&gt;@Dianora_1&lt;/a&gt;&lt;/h2&gt;

            &lt;p&gt;Ham Radio, RPi3 and more!&lt;/p&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2739&quot;&gt;See Me &lt;sub&gt;&lt;sup&gt;(Michael
            W. Lucas)&lt;/sup&gt;&lt;/sub&gt; in 2016&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Looking for a chance to interact with author Michael W Lucas in meat-space? (That sounds wrong)&lt;/li&gt;
            &lt;li&gt;If so, he has posted a list of the up-coming conferences he’ll be speaking at, starting with Ohio
            LinuxFest Oct 7-8, where he’ll be giving an introduction to ZFS talk.&lt;/li&gt;
            &lt;li&gt;Nov 8th, he’ll also be at MUG (Michigan User Group) giving a PAM talk.&lt;/li&gt;
            &lt;li&gt;Sadly, no MeetBSD for Michael this year [moment of silence], but if you are able to make it to one
            of the aforementioned gatherings, be sure to bring your books for autographs. We promise he doesn’t bite.
            Much.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/its-hard-work-printing-nothing&quot;&gt;It’s
            hard work printing nothing&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“It all starts with a bug report to LibreSSL that the openssl tool crashes when it tries to print
            NULL. This bug doesn’t manifest on OpenBSD because libc will convert NULL strings to ”(null)” when printing.
            However, this behavior is not required, and as observed, it’s not universal. When snprintf silently accepts
            NULL, that simply leads to propagating the error.”&lt;/li&gt;
            &lt;li&gt;“There’s an argument to be made that silly error messages are better than crashing browsers, but
            stacking layers of sand seems like a poor means of building robust software in the long term.”&lt;/li&gt;
            &lt;li&gt;“As soon as development for the next release of OpenBSD restarted, some developers began testing a
            patch that would remove this crutch from printf.”&lt;/li&gt;
            &lt;li&gt;If you’d like to help with this work, see our call for volunteers from 2 weeks ago: &lt;a href=&quot;https://marc.info/?l=openbsd-misc&amp;amp;m=147059272201219&amp;amp;w=2&quot;&gt;opportunity
            to help: %s audit in mandoc &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Of course, immediately things started to complain. The configure script for talloc does a number
            of checks (check out the additional interesting observations by TedU here)&lt;/li&gt;
            &lt;li&gt;“The test checking that our snprintf function conforms to the C99 standard actually contains, at a
            minimum, 3 deviations from the standard. It should say “Checking for non-conformant vsnprintf”.”&lt;/li&gt;
            &lt;li&gt;“Of course, we’re dealing with NULL pointers, so all bets are off, but I wonder what people who
            expect printf NULL to work expect out of strlen? Does it return 0? Does it crash?”&lt;/li&gt;
            &lt;li&gt;So, talloc decides that the system printf is no good, and it should use its own bundled
            implementation&lt;/li&gt;
            &lt;li&gt;“After all the configure testing, eventually the build will fail, because somebody forgot to
            actually add the replacement object file to the Makefile.”&lt;/li&gt;
            &lt;li&gt;“If the replacement function has never been used, that’s hardly reassuring that it is actually
            better tested than the version we have in libc.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://blog.acumensecurity.net/revisiting-wx-with-openbsd-6-0/&quot;&gt;Revisiting
            W^X with OpenBSD 6.0&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;OpenBSD 6.0 includes enforcement of W^X in user-land&lt;/li&gt;
            &lt;li&gt;This prevents an application from being able to map a page of memory with both Write and Execute
            permissions (protecting mmap(2))&lt;/li&gt;
            &lt;li&gt;Once mapped a page of memory should not be able to have permissions escalated (protecting
            mprotect(2))&lt;/li&gt;
            &lt;li&gt;OpenBSD 6.0 enforces the strict W^X definition, and not the PaX/grsec “once write never execute”
            type of policy&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160901060733&quot;&gt;OpenBSD
            imports a letsencrypt client into the base system&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve mentioned letskencrypt before (A native C version of the letsencrypt client, developed by
            Kristaps).&lt;/li&gt;
            &lt;li&gt;Looks like it’s undergoing a name-change to “acme-client” and has made it’s way into OpenBSD’s
            base system!&lt;/li&gt;
            &lt;li&gt;This should ensure first-class support for management of Let’s Encrypt certificates, here’s hoping
            the portable version continues to thrive as well.&lt;/li&gt;
            &lt;li&gt;Congrats to Kristaps!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.openbsd.org/lyrics.html#60f&quot;&gt;OpenBSD: Release Songs
            6.0: &quot;Goodbye&quot; -- no more CD releases&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://nanxiao.gitbooks.io/freebsd-101-hacks/content/&quot;&gt;FreeBSD
            101 Hacks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://hardenedbsd.org/article/shawn-webb/2016-08-20/libressl-enabled-default&quot;&gt;LibreSSL
            enabled by default in HardenedBSD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/commits/2016-August/624241.html&quot;&gt;DragonflyBSD
            removes last bits of 32-bit Linux emulation and has no plans to implement 64-bit linux emulation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/phessler/status/771277693090467840&quot;&gt;OpenBSD
            has sent 32bit sparc to the great bitbucket in the sky&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://slexy.org/view/s2hm4HBkb2&quot;&gt;Front Range BSD User Group
            September Meeting&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://knoxbug.org/content/going-with-the-flow&quot;&gt;KnoxBug TrueOS
            Wrap-up&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/mVK8G1Vr&quot;&gt; Cody - TrueOS Questions &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/xsUNUfCS&quot;&gt; John - FreeNAS Backups&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/nHkWuNkm&quot;&gt; Herminio - PowerPC + OpenBSD &lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/NAh7r6Ed&quot;&gt; Dennis - pmake vs bmake&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/8HaK7yJ6&quot;&gt; Al - Upgrade conflicts&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>ZFS, The &quot;Universal&quot; Filesystem</title>
        <smi:episode>157</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_08_31-the_universal_filesystem"/>
        <id>http://www.bsdnow.tv/episodes/2016_08_31-the_universal_filesystem</id>
        <published>2016-09-01T03:09:16-07:00</published>
        <updated>2016-09-02T07:15:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.ogg"
                rel="enclosure"
                length="63454599"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.ogg"
                    fileSize="63454599"
                    type="audio/ogg"
                    medium="audio"
                    duration="4962"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.mp3"
                    fileSize="39884268"
                    type="audio/mpeg"
                    medium="audio"
                    duration="4962"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0157-432p.mp4"
                    fileSize="289597186"
                    type="video/mp4"
                    medium="video"
                    duration="4962"
                    isDefault="false"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp4/201406.jb-dl.cdn.scaleengine.net/bsdnow/2016/bsd-0157.mp4"
                    fileSize="558879069"
                    type="video/mp4"
                    medium="video"
                    duration="4962"
                    isDefault="false"/>
            <media:content
                    url="http://bitlove.org/jupiterbroadcasting/bsdnowhd/bsd-0157.mp4.torrent"
                    type="application/x-bittorrent; enclosed=&quot;video/mp4&quot;"
                    medium="video"
                    duration="4962"
                    fileSize="558879069"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0157-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:05" title="Headlines"/>
            <psc:chapter start="00:01:05" title="Registration for MeetBSD 2016 is now Open"
                         href="https://www.meetbsd.com/"/>
            <psc:chapter start="00:06:50" title="Dual Booting FreeBSD and Windows UEFI"
                         href="http://kev009.com/wp/2016/07/freebsd-uefi-root-on-zfs-and-windows-dual-boot/"/>
            <psc:chapter start="00:10:05" title="ZFS High-Availability NAS"
                         href="https://github.com/ewwhite/zfs-ha/wiki"/>
            <psc:chapter start="00:12:50" title="First public release of chyves - version 0.1.0"
                         href="http://chyves.org/"/>
            <psc:chapter start="00:15:20" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:17:24" title="Interview"/>
            <psc:chapter start="00:46:47" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:48:48" title="News Roundup"/>
            <psc:chapter start="00:48:48" title="ZFS Deadlock: 'Directory of Death'"
                         href="http://lists.freebsd.org/pipermail/freebsd-hackers/2016-July/049740.html"/>
            <psc:chapter start="00:53:21" title="New BSD Magazine out (2016-07)"
                         href="https://bsdmag.org/download/implementing-memory-cache-beast-architecture/"/>
            <psc:chapter start="00:56:10" title="DragonflyBSD and UEFI"
                         href="http://lists.dragonflybsd.org/pipermail/users/2016-July/270796.html"/>
            <psc:chapter start="00:57:36" title="Netflix and Fill"
                         href="http://techblog.netflix.com/2016/08/netflix-and-fill.html"/>
            <psc:chapter start="01:06:31" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:08:59" title="Beastie Bits"/>
            <psc:chapter start="01:08:59" title="Cover reveal for &quot;PAM Mastery&quot;"
                         href="http://blather.michaelwlucas.com/archives/2734"/>
            <psc:chapter start="01:09:51" title="LibertyBSD 5.9 is out - looking for mirrors"
                         href="http://libertybsd.net/download.html"/>
            <psc:chapter start="01:10:06" title="Unix for Poets"
                         href="https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf"/>
            <psc:chapter start="01:12:31" title="Feedback/Questions"/>
            <psc:chapter start="01:12:31" title="Chuck / Ingo - Get Involved" href="http://pastebin.com/ksq0rfph"/>
            <psc:chapter start="01:15:18" title="Oskar - Thanks" href="http://pastebin.com/YqzcHEMg"/>
            <psc:chapter start="01:16:28" title="Alex - SMF" href="http://pastebin.com/WvdVZbYc"/>
            <psc:chapter start="01:17:55" title="Raymond - RPI3" href="http://pastebin.com/JPWgzSGv"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Richard Yao</name>
            <email>ryao@gentoo.org</email>
        </contributor>
        <summary>This week on BSDNow, we have an interview with Richard Yao, who will be telling us about the experience
            &amp; challenges of porting ZFS to Linux. That plus the latest news &amp; feedback is coming your way, on
            your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 157: ZFS, The “Universal” File-system&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.meetbsd.com/&quot;&gt;Registration for MeetBSD 2016 is now Open &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“Beastie’s coming home!” This year, MeetBSD will be held at UC Berkeley’s Clark Kerr Campus&lt;/li&gt;
            &lt;li&gt;November 11th and 12th, preceded by a two day FreeBSD Vendor/Dev Summit (Nov 9th and 10th)&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;MeetBSD can be traced back to its humble roots as a local workshop for BSD developers and users,
            hosted annually in Poland since 2004. Since then, MeetBSD’s popularity has spread, and it’s now widely
            recognized as its own conference with participants from all over the world.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;The US version runs every two years in California since 2008, and now trades off with the east
            coast vBSDCon which runs on the odd years.&lt;/li&gt;
            &lt;li&gt;“MeetBSD 2016 uses a mixed unConference format featuring both scheduled talks and community-driven
            events such as birds-of-a-feather meetings, lightning talks, hackable presentations, stump the chumps, and
            speed geeking sessions. Speakers are to be determined – stay tuned for more information!”&lt;/li&gt;
            &lt;li&gt;Register before September 30th, and get $30 off&lt;/li&gt;
            &lt;li&gt;Kris and I will be there, along with lots of other FreeBSD Developers, Vendors, and Users.&lt;/li&gt;
            &lt;li&gt;MeetBSD’s unconference style does a very good job of mingling users with developers and is one of
            my favourite conferences.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://kev009.com/wp/2016/07/freebsd-uefi-root-on-zfs-and-windows-dual-boot/&quot;&gt;Dual
            Booting FreeBSD and Windows UEFI&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Looking to install FreeBSD alongside Windows 10? What happens if that that system is pre-installed
            and UEFI? Well you could run TrueOS, but if that isn’t your bag and you want vanilla FreeBSD we have you
            covered this week!&lt;/li&gt;
            &lt;li&gt;Over on Kevin Bowling’s blog, we have a detailed article showing exactly how to do that.&lt;/li&gt;
            &lt;li&gt;First up, as prep you’ll need to go into the Windows disk manager and shrink your existing NTFS
            partition.&lt;/li&gt;
            &lt;li&gt;You’ll need to next boot FreeBSD 11 or later.&lt;/li&gt;
            &lt;li&gt;From there the walkthrough takes us through disk partitioning using gpart, and setup of ZFS into a
            boot-environment friendly layout.&lt;/li&gt;
            &lt;li&gt;Once you get through the typical FreeBSD setup / extraction, the tutorial gives us a nice bonus,
            showing how to setup “rEFInd” for a graphical boot-menu. &lt;/li&gt;
            &lt;li&gt;A great walkthrough, and hopefully it encourages others to try out dual-booting “EFI-style”.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/ewwhite/zfs-ha/wiki&quot;&gt;ZFS High-Availability NAS&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Interested in a DiY HA ZFS NAS? Edmund White (ewwhite on github) has posted a very detailed look
            at how he has custom-rolled his own Linux + ZFS + HA setup.&lt;/li&gt;
            &lt;li&gt;Most of the concepts are already ones used in various other HA products, but it is interesting and
            informative to see a public detailed look at how ZFS and HA works.&lt;/li&gt;
            &lt;li&gt;In particular this setup require some very specific hardware, such as dual-port SAS drives, so you
            will have to pre-plan according.&lt;/li&gt;
            &lt;li&gt;The only bummer is this is a ZFS on Linux setup. Maybe this can serve as the guide / inspiration
            for somebody in our community to do their own FreeBSD + HA + ZFS setup and blog about it in similar detail.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://chyves.org/&quot;&gt;First public release of chyves - version 0.1.0&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;As bhyve continues to mature we are seeing tooling evolve around it. Enter ‘chyves’ which started
            life as a fork of iohyve.&lt;/li&gt;
            &lt;li&gt;We are looking to do an interview with the author in the near future, but we still want to bring
            you some of the new features / changes in this evolution of bhyve management.&lt;/li&gt;
            &lt;li&gt;First up, nearly every function from iohyve has either been re-written in part or full.&lt;/li&gt;
            &lt;li&gt;Among the new features, a full logging system (master and per-vm logs), multiple pool
            configurations, properties stored outside of ZFS (for speed) and self-upgrading. (Will that work with pkg’d
            version?)&lt;/li&gt;
            &lt;li&gt;In addition to the above features, the website has a large chart showing the original ‘iohyve’
            commands, and how that usage has changed moving to chyves. &lt;/li&gt;
            &lt;li&gt;Give it a spin, let the author know of issues!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Richard Yao - &lt;a href=&quot;mailto:ryao@gentoo.org&quot;&gt;ryao@gentoo.org&lt;/a&gt;&lt;/h2&gt;

            &lt;p&gt;Sr. Kernel Engineer at ClusterHQ - Major Contributor to ZFS on Linux&lt;/p&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.freebsd.org/pipermail/freebsd-hackers/2016-July/049740.html&quot;&gt;ZFS
            Deadlock: &#39;Directory of Death&#39;&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;A user reports that when they try to install npm (the Node.js package manager), their system
            deadlocks&lt;/li&gt;
            &lt;li&gt;It turns out, this was also hitting the FreeBSD package building machines&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=209158&quot;&gt;PR 209158 &lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;The problem was a race condition in the way renames are handled in the FreeBSD VFS vs how ZFS does
            them internally&lt;/li&gt;
            &lt;li&gt;This bug has existed since the original import of ZFS, but some other change caused it to happen
            much more frequently&lt;/li&gt;
            &lt;li&gt;“ZFS POSIX Layer is originally written for Solaris VFS which is very different from FreeBSD VFS.
            Most importantly many things that FreeBSD VFS manages on behalf of all filesystems are implemented in ZPL in
            a different Way. Thus, ZPL contains code that is redundant on FreeBSD or duplicates VFS functionality or, in
            the worst cases, badly interacts / interferes with VFS.”&lt;/li&gt;
            &lt;li&gt;“The most prominent problem is a deadlock caused by the lock order reversal of vnode locks that
            may happen with concurrent zfs&lt;em&gt;rename() and lookup(). The deadlock is a result of zfs&lt;/em&gt;rename()
            not observing the vnode locking contract expected by VFS.”&lt;/li&gt;
            &lt;li&gt;The fixes have been merged to the 10.x and 11.x branches&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://bsdmag.org/download/implementing-memory-cache-beast-architecture/&quot;&gt;New
            BSD Magazine out (2016-07)&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Articles include: Implementing in-memory cache in the BeaST architecture, Docker Cleanup, FreeNAS
            Getting Started Guide, and starting at the very beginning with open source&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://bsdmag.org/download/minix-3-free-open-source-operating-system-highly-reliable-flexible-secure/&quot;&gt;The
            August issue is also out &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;This issue features two articles about MINIX 3, continues the FreeNAS getting started guide,
            Optimizes the in-memory cache for the BeaST architecture, and talks about fixing failed ports for Hardened
            and LibreBSD&lt;/li&gt;
            &lt;li&gt;We hope to have an interview with the creator of the BeaST architecture in the coming weeks&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/users/2016-July/270796.html&quot;&gt;DragonflyBSD
            and UEFI&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve featured a few stories and walkthroughs about using UEFI to dual-boot BSD, and now its
            Dragonfly BSD’s turn.&lt;/li&gt;
            &lt;li&gt;Dave McFarlane writes into the DF mailing lists, telling us about the specific steps taken to get
            UEFI installed and boot-strapped on his system.&lt;/li&gt;
            &lt;li&gt;If you’ve done a FreeBSD manual UEFI install, the process looks very similar, but you will end up
            manually running ‘gpt’ to create partitions, installing dist files, and eventually installing boot1.efi into
            the FAT EFI partition.&lt;/li&gt;
            &lt;li&gt;Dave also ran into an issue with resulted in no /etc/fstab being present, and helpfully includes
            what his system needed to fully boot hammer properly.&lt;/li&gt;
            &lt;li&gt;Somebody should document this fully for DFLY, since I would expect to become more commonplace as
            commodity hardware is shipped with UEFI on by default.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://techblog.netflix.com/2016/08/netflix-and-fill.html&quot;&gt;Netflix and
            Fill &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The Netflix team has produced a technical blog post describing how their OpenConnect appliances
            work&lt;/li&gt;
            &lt;li&gt;First the content is received from the content provider, and the Netflix content team makes it
            ready for deployment, by transcoding the various bitrates, packaging the subtitles, etc.&lt;/li&gt;
            &lt;li&gt;The finished files are then pushed to Amazon S3 storage&lt;/li&gt;
            &lt;li&gt;“We deploy the majority of our updates proactively during configured fill windows. An important
            difference between our OpenConnect CDN and other commercial CDNs is the concept of proactive caching.
            Because we can predict with high accuracy what our members will watch and what time of day they will watch
            it, we can make use of non-peak bandwidth to download most of the content updates to the OCAs in our network
            during these configurable time windows. By reducing disk reads (content serving) while we are performing
            disk writes (adding new content to the OCAs), we are able to optimize our disk efficiency by avoiding
            read/write contention. The predictability of off-peak traffic patterns helps with this optimization, but we
            still only have a finite amount of time every day to get our content pre-positioned to where it needs to be
            before our traffic starts to ramp up and we want to make all of the OCA capacity available for content
            serving.”&lt;/li&gt;
            &lt;li&gt;The OCA may actually contain more than one copy of the same video, because each disk in the OCA is
            independent, storing the same video on two different disks will provide twice the available read bandwidth&lt;/li&gt;
            &lt;li&gt;Normally the filesystem cache would obviate the need for this, but the Netflix OCA has so much
            storage, and not a lot of memory, and the requests from users are offset enough that the cache is useless&lt;/li&gt;
            &lt;li&gt;“OCAs communicate at regular intervals with the control plane services, requesting (among other
            things) a manifest file that contains the list of titles they should be storing and serving to members. If
            there is a delta between the list of titles in the manifest and what they are currently storing, each OCA
            will send a request, during its configured fill window, that includes a list of the new or updated titles
            that it needs. The response from the control plane in AWS is a ranked list of potential download locations,
            aka fill sources, for each title.”&lt;/li&gt;
            &lt;li&gt;“It would be inefficient, in terms of both time and cost, to distribute a title directly from S3
            to all of our OCAs, so we use a tiered approach. The goal is to ensure that the title is passed from one
            part of our network to another using the most efficient route possible.”&lt;/li&gt;
            &lt;li&gt;The article then goes on to explain how they calculate the least cost filling source&lt;/li&gt;
            &lt;li&gt;“Now that Netflix operates in 190 countries and we have thousands of appliances embedded within
            many ISP networks around the world, we are even more obsessed with making sure that our OCAs get the latest
            content as quickly as possible while continuing to minimize bandwidth cost to our ISP partners.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits:&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2734&quot;&gt;Cover reveal for “PAM
            Mastery”&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://libertybsd.net/download.html&quot;&gt;LibertyBSD 5.9 is out - looking for
            mirrors&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf&quot;&gt;Unix for
            Poets&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/ksq0rfph&quot;&gt; Chuck / Ingo - Get Involved&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/YqzcHEMg&quot;&gt; Oskar - Thanks&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/WvdVZbYc&quot;&gt; Alex - SMF&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/JPWgzSGv&quot;&gt; Raymond - RPI3&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
</feed>
