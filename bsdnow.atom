<?xml version="1.0" encoding="utf-8"?>
<feed
        xml:lang="en-us"
        xmlns="http://www.w3.org/2005/Atom"
        xmlns:smi="https://www.betterfeeds.org/series-media-info"
        xmlns:media="http://search.yahoo.com/mrss/"
        xmlns:psc="http://podlove.org/simple-chapters">
    <title>BSD Now</title>
    <subtitle>A weekly show covering the latest developments in the world of the BSD family of operating systems. News,
        Tutorials and Interviews for new users and long time developers alike.
    </subtitle>
    <icon>http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg</icon>
    <media:thumbnail
            url="http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="self"
            type="application/atom+xml"
            title="BSD Now"/>
    <link
            href="http://www.bsdnow.tv/"
            rel="alternate"
            type="text/html"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMp3"
            rel="related"
            type="application/rss+xml"
            title="BSD Now MP3 Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowOgg"
            rel="related"
            type="application/rss+xml"
            title="BSD Now OGG Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMobile"
            rel="related"
            type="application/rss+xml"
            title="BSD Now SD Video"/>
    <link
            href="http://feeds.feedburner.com/BsdNowHd"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video"/>
    <link
            href="http://bitlove.org/jupiterbroadcasting/bsdnowhd/feed"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video (BitTorrent)"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2016-08.atom"
            rel="next"
            type="application/atom+xml"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow.atom"
            rel="first"
            type="application/atom+xml"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2013-09.atom"
            rel="last"
            type="application/atom+xml"/>
    <id>http://www.bsdnow.tv/</id>
    <updated>2016-09-02T10:13:00Z</updated>
    <author>
        <name>Jupiter Broadcasting</name>
        <uri>www.jupiterbroadcasting.com</uri>
    </author>
    <smi:sequential>false</smi:sequential>
    <entry>
        <title>ZFS, The &quot;Universal&quot; Filesystem</title>
        <smi:episode>157</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_08_31-the_universal_filesystem"/>
        <id>http://www.bsdnow.tv/episodes/2016_08_31-the_universal_filesystem</id>
        <published>2016-09-01T03:09:16-07:00</published>
        <updated>2016-09-02T07:15:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.ogg"
                rel="enclosure"
                length="63454599"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.ogg"
                    fileSize="63454599"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jupiterbroadcasting/bsd-0157.mp3"
                    fileSize="39884268"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/09/bsd-0157-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:05" title="Headlines"/>
            <psc:chapter start="00:01:05" title="Registration for MeetBSD 2016 is now Open"
                         href="https://www.meetbsd.com/"/>
            <psc:chapter start="00:06:50" title="Dual Booting FreeBSD and Windows UEFI"
                         href="http://kev009.com/wp/2016/07/freebsd-uefi-root-on-zfs-and-windows-dual-boot/"/>
            <psc:chapter start="00:10:05" title="ZFS High-Availability NAS"
                         href="https://github.com/ewwhite/zfs-ha/wiki"/>
            <psc:chapter start="00:12:50" title="First public release of chyves - version 0.1.0"
                         href="http://chyves.org/"/>
            <psc:chapter start="00:15:20" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:17:24" title="Interview"/>
            <psc:chapter start="00:46:47" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:48:48" title="News Roundup"/>
            <psc:chapter start="00:48:48" title="ZFS Deadlock: 'Directory of Death'"
                         href="http://lists.freebsd.org/pipermail/freebsd-hackers/2016-July/049740.html"/>
            <psc:chapter start="00:53:21" title="New BSD Magazine out (2016-07)"
                         href="https://bsdmag.org/download/implementing-memory-cache-beast-architecture/"/>
            <psc:chapter start="00:56:10" title="DragonflyBSD and UEFI"
                         href="http://lists.dragonflybsd.org/pipermail/users/2016-July/270796.html"/>
            <psc:chapter start="00:57:36" title="Netflix and Fill"
                         href="http://techblog.netflix.com/2016/08/netflix-and-fill.html"/>
            <psc:chapter start="01:06:31" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:08:59" title="Beastie Bits"/>
            <psc:chapter start="01:08:59" title="Cover reveal for &quot;PAM Mastery&quot;"
                         href="http://blather.michaelwlucas.com/archives/2734"/>
            <psc:chapter start="01:09:51" title="LibertyBSD 5.9 is out - looking for mirrors"
                         href="http://libertybsd.net/download.html"/>
            <psc:chapter start="01:10:06" title="Unix for Poets"
                         href="https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf"/>
            <psc:chapter start="01:12:31" title="Feedback/Questions"/>
            <psc:chapter start="01:12:31" title="Chuck / Ingo - Get Involved" href="http://pastebin.com/ksq0rfph"/>
            <psc:chapter start="01:15:18" title="Oskar - Thanks" href="http://pastebin.com/YqzcHEMg"/>
            <psc:chapter start="01:16:28" title="Alex - SMF" href="http://pastebin.com/WvdVZbYc"/>
            <psc:chapter start="01:17:55" title="Raymond - RPI3" href="http://pastebin.com/JPWgzSGv"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Richard Yao</name>
            <email>ryao@gentoo.org</email>
        </contributor>
        <summary>This week on BSDNow, we have an interview with Richard Yao, who will be telling us about the experience
            &amp; challenges of porting ZFS to Linux. That plus the latest news &amp; feedback is coming your way, on
            your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 157: ZFS, The “Universal” File-system&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.meetbsd.com/&quot;&gt;Registration for MeetBSD 2016 is now Open &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“Beastie’s coming home!” This year, MeetBSD will be held at UC Berkeley’s Clark Kerr Campus&lt;/li&gt;
            &lt;li&gt;November 11th and 12th, preceded by a two day FreeBSD Vendor/Dev Summit (Nov 9th and 10th)&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;MeetBSD can be traced back to its humble roots as a local workshop for BSD developers and users,
            hosted annually in Poland since 2004. Since then, MeetBSD’s popularity has spread, and it’s now widely
            recognized as its own conference with participants from all over the world.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;The US version runs every two years in California since 2008, and now trades off with the east
            coast vBSDCon which runs on the odd years.&lt;/li&gt;
            &lt;li&gt;“MeetBSD 2016 uses a mixed unConference format featuring both scheduled talks and community-driven
            events such as birds-of-a-feather meetings, lightning talks, hackable presentations, stump the chumps, and
            speed geeking sessions. Speakers are to be determined – stay tuned for more information!”&lt;/li&gt;
            &lt;li&gt;Register before September 30th, and get $30 off&lt;/li&gt;
            &lt;li&gt;Kris and I will be there, along with lots of other FreeBSD Developers, Vendors, and Users.&lt;/li&gt;
            &lt;li&gt;MeetBSD’s unconference style does a very good job of mingling users with developers and is one of
            my favourite conferences.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://kev009.com/wp/2016/07/freebsd-uefi-root-on-zfs-and-windows-dual-boot/&quot;&gt;Dual
            Booting FreeBSD and Windows UEFI&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Looking to install FreeBSD alongside Windows 10? What happens if that that system is pre-installed
            and UEFI? Well you could run TrueOS, but if that isn’t your bag and you want vanilla FreeBSD we have you
            covered this week!&lt;/li&gt;
            &lt;li&gt;Over on Kevin Bowling’s blog, we have a detailed article showing exactly how to do that.&lt;/li&gt;
            &lt;li&gt;First up, as prep you’ll need to go into the Windows disk manager and shrink your existing NTFS
            partition.&lt;/li&gt;
            &lt;li&gt;You’ll need to next boot FreeBSD 11 or later.&lt;/li&gt;
            &lt;li&gt;From there the walkthrough takes us through disk partitioning using gpart, and setup of ZFS into a
            boot-environment friendly layout.&lt;/li&gt;
            &lt;li&gt;Once you get through the typical FreeBSD setup / extraction, the tutorial gives us a nice bonus,
            showing how to setup “rEFInd” for a graphical boot-menu. &lt;/li&gt;
            &lt;li&gt;A great walkthrough, and hopefully it encourages others to try out dual-booting “EFI-style”.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/ewwhite/zfs-ha/wiki&quot;&gt;ZFS High-Availability NAS&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Interested in a DiY HA ZFS NAS? Edmund White (ewwhite on github) has posted a very detailed look
            at how he has custom-rolled his own Linux + ZFS + HA setup.&lt;/li&gt;
            &lt;li&gt;Most of the concepts are already ones used in various other HA products, but it is interesting and
            informative to see a public detailed look at how ZFS and HA works.&lt;/li&gt;
            &lt;li&gt;In particular this setup require some very specific hardware, such as dual-port SAS drives, so you
            will have to pre-plan according.&lt;/li&gt;
            &lt;li&gt;The only bummer is this is a ZFS on Linux setup. Maybe this can serve as the guide / inspiration
            for somebody in our community to do their own FreeBSD + HA + ZFS setup and blog about it in similar detail.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://chyves.org/&quot;&gt;First public release of chyves - version 0.1.0&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;As bhyve continues to mature we are seeing tooling evolve around it. Enter ‘chyves’ which started
            life as a fork of iohyve.&lt;/li&gt;
            &lt;li&gt;We are looking to do an interview with the author in the near future, but we still want to bring
            you some of the new features / changes in this evolution of bhyve management.&lt;/li&gt;
            &lt;li&gt;First up, nearly every function from iohyve has either been re-written in part or full.&lt;/li&gt;
            &lt;li&gt;Among the new features, a full logging system (master and per-vm logs), multiple pool
            configurations, properties stored outside of ZFS (for speed) and self-upgrading. (Will that work with pkg’d
            version?)&lt;/li&gt;
            &lt;li&gt;In addition to the above features, the website has a large chart showing the original ‘iohyve’
            commands, and how that usage has changed moving to chyves. &lt;/li&gt;
            &lt;li&gt;Give it a spin, let the author know of issues!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Richard Yao - &lt;a href=&quot;mailto:ryao@gentoo.org&quot;&gt;ryao@gentoo.org&lt;/a&gt;&lt;/h2&gt;

            &lt;p&gt;Sr. Kernel Engineer at ClusterHQ - Major Contributor to ZFS on Linux&lt;/p&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.freebsd.org/pipermail/freebsd-hackers/2016-July/049740.html&quot;&gt;ZFS
            Deadlock: &#39;Directory of Death&#39;&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;A user reports that when they try to install npm (the Node.js package manager), their system
            deadlocks&lt;/li&gt;
            &lt;li&gt;It turns out, this was also hitting the FreeBSD package building machines&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=209158&quot;&gt;PR 209158 &lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;The problem was a race condition in the way renames are handled in the FreeBSD VFS vs how ZFS does
            them internally&lt;/li&gt;
            &lt;li&gt;This bug has existed since the original import of ZFS, but some other change caused it to happen
            much more frequently&lt;/li&gt;
            &lt;li&gt;“ZFS POSIX Layer is originally written for Solaris VFS which is very different from FreeBSD VFS.
            Most importantly many things that FreeBSD VFS manages on behalf of all filesystems are implemented in ZPL in
            a different Way. Thus, ZPL contains code that is redundant on FreeBSD or duplicates VFS functionality or, in
            the worst cases, badly interacts / interferes with VFS.”&lt;/li&gt;
            &lt;li&gt;“The most prominent problem is a deadlock caused by the lock order reversal of vnode locks that
            may happen with concurrent zfs&lt;em&gt;rename() and lookup(). The deadlock is a result of zfs&lt;/em&gt;rename()
            not observing the vnode locking contract expected by VFS.”&lt;/li&gt;
            &lt;li&gt;The fixes have been merged to the 10.x and 11.x branches&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://bsdmag.org/download/implementing-memory-cache-beast-architecture/&quot;&gt;New
            BSD Magazine out (2016-07)&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Articles include: Implementing in-memory cache in the BeaST architecture, Docker Cleanup, FreeNAS
            Getting Started Guide, and starting at the very beginning with open source&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://bsdmag.org/download/minix-3-free-open-source-operating-system-highly-reliable-flexible-secure/&quot;&gt;The
            August issue is also out &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;This issue features two articles about MINIX 3, continues the FreeNAS getting started guide,
            Optimizes the in-memory cache for the BeaST architecture, and talks about fixing failed ports for Hardened
            and LibreBSD&lt;/li&gt;
            &lt;li&gt;We hope to have an interview with the creator of the BeaST architecture in the coming weeks&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/users/2016-July/270796.html&quot;&gt;DragonflyBSD
            and UEFI&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve featured a few stories and walkthroughs about using UEFI to dual-boot BSD, and now its
            Dragonfly BSD’s turn.&lt;/li&gt;
            &lt;li&gt;Dave McFarlane writes into the DF mailing lists, telling us about the specific steps taken to get
            UEFI installed and boot-strapped on his system.&lt;/li&gt;
            &lt;li&gt;If you’ve done a FreeBSD manual UEFI install, the process looks very similar, but you will end up
            manually running ‘gpt’ to create partitions, installing dist files, and eventually installing boot1.efi into
            the FAT EFI partition.&lt;/li&gt;
            &lt;li&gt;Dave also ran into an issue with resulted in no /etc/fstab being present, and helpfully includes
            what his system needed to fully boot hammer properly.&lt;/li&gt;
            &lt;li&gt;Somebody should document this fully for DFLY, since I would expect to become more commonplace as
            commodity hardware is shipped with UEFI on by default.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://techblog.netflix.com/2016/08/netflix-and-fill.html&quot;&gt;Netflix and
            Fill &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The Netflix team has produced a technical blog post describing how their OpenConnect appliances
            work&lt;/li&gt;
            &lt;li&gt;First the content is received from the content provider, and the Netflix content team makes it
            ready for deployment, by transcoding the various bitrates, packaging the subtitles, etc.&lt;/li&gt;
            &lt;li&gt;The finished files are then pushed to Amazon S3 storage&lt;/li&gt;
            &lt;li&gt;“We deploy the majority of our updates proactively during configured fill windows. An important
            difference between our OpenConnect CDN and other commercial CDNs is the concept of proactive caching.
            Because we can predict with high accuracy what our members will watch and what time of day they will watch
            it, we can make use of non-peak bandwidth to download most of the content updates to the OCAs in our network
            during these configurable time windows. By reducing disk reads (content serving) while we are performing
            disk writes (adding new content to the OCAs), we are able to optimize our disk efficiency by avoiding
            read/write contention. The predictability of off-peak traffic patterns helps with this optimization, but we
            still only have a finite amount of time every day to get our content pre-positioned to where it needs to be
            before our traffic starts to ramp up and we want to make all of the OCA capacity available for content
            serving.”&lt;/li&gt;
            &lt;li&gt;The OCA may actually contain more than one copy of the same video, because each disk in the OCA is
            independent, storing the same video on two different disks will provide twice the available read bandwidth&lt;/li&gt;
            &lt;li&gt;Normally the filesystem cache would obviate the need for this, but the Netflix OCA has so much
            storage, and not a lot of memory, and the requests from users are offset enough that the cache is useless&lt;/li&gt;
            &lt;li&gt;“OCAs communicate at regular intervals with the control plane services, requesting (among other
            things) a manifest file that contains the list of titles they should be storing and serving to members. If
            there is a delta between the list of titles in the manifest and what they are currently storing, each OCA
            will send a request, during its configured fill window, that includes a list of the new or updated titles
            that it needs. The response from the control plane in AWS is a ranked list of potential download locations,
            aka fill sources, for each title.”&lt;/li&gt;
            &lt;li&gt;“It would be inefficient, in terms of both time and cost, to distribute a title directly from S3
            to all of our OCAs, so we use a tiered approach. The goal is to ensure that the title is passed from one
            part of our network to another using the most efficient route possible.”&lt;/li&gt;
            &lt;li&gt;The article then goes on to explain how they calculate the least cost filling source&lt;/li&gt;
            &lt;li&gt;“Now that Netflix operates in 190 countries and we have thousands of appliances embedded within
            many ISP networks around the world, we are even more obsessed with making sure that our OCAs get the latest
            content as quickly as possible while continuing to minimize bandwidth cost to our ISP partners.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits:&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2734&quot;&gt;Cover reveal for “PAM
            Mastery”&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://libertybsd.net/download.html&quot;&gt;LibertyBSD 5.9 is out - looking for
            mirrors&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf&quot;&gt;Unix for
            Poets&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/ksq0rfph&quot;&gt; Chuck / Ingo - Get Involved&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/YqzcHEMg&quot;&gt; Oskar - Thanks&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/WvdVZbYc&quot;&gt; Alex - SMF&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/JPWgzSGv&quot;&gt; Raymond - RPI3&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
</feed>
