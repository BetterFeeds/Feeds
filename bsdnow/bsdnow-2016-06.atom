<?xml version="1.0" encoding="utf-8"?>
<feed
        xml:lang="en-us"
        xmlns="http://www.w3.org/2005/Atom"
        xmlns:smi="https://www.betterfeeds.org/series-media-info"
        xmlns:media="http://search.yahoo.com/mrss/"
        xmlns:psc="http://podlove.org/simple-chapters">
    <title>BSD Now</title>
    <subtitle>A weekly show covering the latest developments in the world of the BSD family of operating systems. News,
        Tutorials and Interviews for new users and long time developers alike.
    </subtitle>
    <icon>http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg</icon>
    <media:thumbnail
            url="http://www.jupiterbroadcasting.com/images/bsdnow-badge.jpg"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2016-06.atom"
            rel="self"
            type="application/atom+xml"
            title="BSD Now"/>
    <link
            href="http://www.bsdnow.tv/"
            rel="alternate"
            type="text/html"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMp3"
            rel="related"
            type="application/rss+xml"
            title="BSD Now MP3 Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowOgg"
            rel="related"
            type="application/rss+xml"
            title="BSD Now OGG Audio"/>
    <link
            href="http://feeds.feedburner.com/BsdNowMobile"
            rel="related"
            type="application/rss+xml"
            title="BSD Now SD Video"/>
    <link
            href="http://feeds.feedburner.com/BsdNowHd"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video"/>
    <link
            href="http://bitlove.org/jupiterbroadcasting/bsdnowhd/feed"
            rel="related"
            type="application/rss+xml"
            title="BSD Now HD Video (BitTorrent)"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2016-07.atom"
            rel="previous"
            type="application/atom+xml"/>
    <link
            href="https://feeds.betterfeeds.org/bsdnow/bsdnow-2016-05.atom"
            rel="next"
            type="application/atom+xml"/>
    <id>http://www.bsdnow.tv/</id>
    <updated>2016-06-27T21:53:00Z</updated>
    <author>
        <name>Jupiter Broadcasting</name>
        <uri>www.jupiterbroadcasting.com</uri>
    </author>
    <smi:sequential>false</smi:sequential>
    <entry>
        <title>The place to B...A Robot!</title>
        <smi:episode>148</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_06_29-the_place_to_be_a_robot"/>
        <id>http://www.bsdnow.tv/episodes/2016_06_29-the_place_to_be_a_robot</id>
        <published>2016-06-30T09:53:28-07:00</published>
        <updated>2016-07-03T08:29:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0148.ogg"
                rel="enclosure"
                length="78332522"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jupiterbroadcasting/bsd-0148.ogg"
                    fileSize="78332522"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jupiterbroadcasting/bsd-0148.mp3"
                    fileSize="50367938"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/06/bsd-0148-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:38" title="Headlines"/>
            <psc:chapter start="00:01:56" title="FreeBSD Core Team Election"
                         href="https://www.freebsd.org/administration.html#t-core"/>
            <psc:chapter start="00:06:34" title="Why I run OpenBSD"
                         href="http://deftly.net/posts/2016-05-31-why-i-run-openbsd.html"/>
            <psc:chapter start="00:13:48" title="The ultimate NetBSD Router"
                         href="http://blog.tbrodel.me/2016/#netbsd-router"/>
            <psc:chapter start="00:20:43" title="bhyve-Bootable Boot Environments"
                         href="http://callfortesting.org/bhyve-boot-environments/"/>
            <psc:chapter start="00:26:58" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/" image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:31:46" title="Interview"/>
            <psc:chapter start="00:53:35" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/" image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:58:22" title="News Roundup"/>
            <psc:chapter start="00:58:22"
                         title="Tomohiro Kasumi explains what “@@” means, in the context of the Hammer filesystem"
                         href="http://lists.dragonflybsd.org/pipermail/users/2016-June/249717.html"/>
            <psc:chapter start="01:05:20" title="FreeBSD 11.0 nearing RC1"
                         href="https://www.freebsd.org/releases/11.0R/schedule.html"/>
            <psc:chapter start="01:09:58" title="TensorFlow on FreeBSD"
                         href="http://ecc-comp.blogspot.com/2016/06/tensorflow-on-freebsd.html"/>
            <psc:chapter start="01:13:20" title="NetBSD: A New Beginning?"
                         href="http://jamesdeagle.blogspot.ca/2016/06/netbsd-new-beginning.html"/>
            <psc:chapter start="01:16:05" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow" image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:18:26" title="Beastie Bits"/>
            <psc:chapter start="01:18:26" title="Reproducible NetBSD? 77.7% of the way there"
                         href="https://reproducible.debian.net/netbsd/netbsd.html"/>
            <psc:chapter start="01:19:44" title="Create FreeBSD virtual machine using qemu. Run the VM using xhyve."
                         href="https://gist.github.com/zg/38a3afa112ddf7de4912aafc249ec82f"/>
            <psc:chapter start="01:21:15"
                         title="FreeBSD PowerPC 32bit pkg repository (unofficial). ~19,500 packages, more to come"
                         href="https://joshcummings.net/pub/FreeBSD"/>
            <psc:chapter start="01:21:40" title="NetBSD machines at Open Source Conference 2016 Gunma"
                         href="http://mail-index.netbsd.org/netbsd-advocacy/2016/05/16/msg000706.html"/>
            <psc:chapter start="01:24:23" title="Adam Leventhal (of ZFS and DTrace) does an analysis of APFS "
                         href="http://arstechnica.com/apple/2016/06/a-zfs-developers-analysis-of-the-good-and-bad-in-apples-new-apfs-file-system/"/>
            <psc:chapter start="01:25:35" title="SemiBug June meeting summary"
                         href="http://lists.nycbug.org/pipermail/semibug/2016-June/000106.html"/>
            <psc:chapter start="01:27:00" title="KnoxBug Meeting" href="http://knoxbug.org/content/2016-07-26"/>
            <psc:chapter start="01:27:43" title="Feedback/Questions"/>
            <psc:chapter start="01:27:48" title="Andrew - iocage" href="http://pastebin.com/nuYTzaG6"/>
            <psc:chapter start="01:31:37" title="Florian - Arm + GitHub" href="http://pastebin.com/PzY68hNS"/>
            <psc:chapter start="01:35:02" title="Clint - Synth" href="http://pastebin.com/JESGZjLu"/>
            <psc:chapter start="01:35:49" title="Leonardo - Translations" href="http://pastebin.com/b4LAiPs4"/>
            <psc:chapter start="01:38:40" title="Zachary - Moving things to VMs" href="http://pastebin.com/VRc8fvBk"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Edicarla Andrade</name>
        </contributor>
        <contributor>
            <name>Vin&#237;cius Zavam</name>
            <uri>https://twitter.com/egypcio</uri>
        </contributor>
        <summary>This week on the show, Allan &amp; I are going to be showing you a very interesting interview we did
            talking about using FreeBSD to drive a Robot! You won't want to miss this one. That plus all the latest
            news, heading your way right now!
        </summary>
        <content type="html">&lt;h1&gt;Episode 148: The place to B...A Robot!&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.freebsd.org/administration.html#t-core&quot;&gt;FreeBSD Core Team
            Election&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Core.9 has been elected, and will officially take over from Core.8 on Wednesday, 6 July 2016&lt;/li&gt;
            &lt;li&gt;Many thanks to the outgoing members of the core team for their service over the last 2 years&lt;/li&gt;
            &lt;li&gt;214 out of 325 eligible voters (65.8%) cast their votes in an election counting 14 candidates.&lt;/li&gt;
            &lt;li&gt;The top nine candidates are, in descending order of votes received:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;ol&gt;
            &lt;li&gt;180 84.1% Ed Maste (incumbent)&lt;/li&gt;
            &lt;li&gt;176 82.2% George V. Neville-Neil (incumbent)&lt;/li&gt;
            &lt;li&gt;171 79.9% Baptiste Daroussin (incumbent)&lt;/li&gt;
            &lt;li&gt;168 78.5% John Baldwin&lt;/li&gt;
            &lt;li&gt;166 77.6% Hiroki Sato (incumbent)&lt;/li&gt;
            &lt;li&gt;147 68.7% Allan Jude&lt;/li&gt;
            &lt;li&gt;132 61.7% Kris Moore&lt;/li&gt;
            &lt;li&gt;121 56.5% Benedict Reuschling&lt;/li&gt;
            &lt;li&gt;108 50.5% Benno Rice&lt;/li&gt;
            &lt;/ol&gt;

            &lt;p&gt;+ There was no tie for ninth.
            + BSDNow and the entire community would also like to extend their thanks to all those who stood for election
            to the core team
            + Next week’s core meeting will encompass the members of Core.8 and Core.9, as responsibility for any
            outstanding items will be passed from outgoing members of core to the new incoming members&lt;/p&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://deftly.net/posts/2016-05-31-why-i-run-openbsd.html&quot;&gt;Why I run
            OpenBSD&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;This week we have a good article / blog post talking about why the posted has moved to OpenBSD
            from Linux. &lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“One thing I learned during my travels between OSs: consistency is everything.&lt;/p&gt;

            &lt;p&gt;Most operating systems seem to, at least, keep a consistent interface between themselves and
            binaries / applications. They do this by keeping consistent APIs (Application Programming Interfaces) and
            ABIs (Application Binary Interfaces). If you take a binary from a really old version of Linux and run or
            build it on a brand-spanking new install of Linux, it will likely Just Work™. This is great for applications
            and developers of applications. Vendors can build binaries for distribution and worry less about their
            product working when it gets out in the wild (sure this binary built in 2016 will run on RedHat AS2.1!!).“&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;The author then goes through another important part of the consistency argument, with what he
            calls “UPI” or “User Program Interfaces”. In other words, while the ABI may be stable, what about the
            end-user tooling that the user directly has to interact with on a daily basis?&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“This inconsistency seems to have come to be when Linux started getting wireless support. For some
            reason someone (vendors, maybe?) decided that ifconfig wasn’t a good place to let users interact with their
            wireless device. Maybe they felt their device was special? Maybe there were technical reasons? The bottom
            line is, someone decided to create a new utility to manage a wireless device… and then another one came
            along… pretty soon there was iwconfig(8), iw(8), ifconfig(8), some funky thing that let windows drivers
            interface with Linux.. and one called ip(8) I am sure there are others I am forgetting, but I prefer to
            forget. I have moved onto greener pastures and the knowledge of these programs no longer serves me.”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;The article then goes through the rundown of how he evaluated the various BSD’s and ultimately
            settled on OpenBSD:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“OpenBSD won the showdown. It was the most complete, simple, and coherent system. The documentation
            was thorough, the code was easy to follow
            and understand.
            It had one command to configure all of the network interfaces!
            I didn’t have wireless, but I was able to find a cheap USB adapter that worked by simply running man -k
            wireless and reading about the USB
            entries.
            It didn’t have some of the applications I use regularly, so I started reading about ports (intuitively, via
            man ports!).”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://blog.tbrodel.me/2016/#netbsd-router&quot;&gt;The ultimate NetBSD Router&lt;/a&gt;&lt;/h3&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“So yesterday I spent the day setting up a new firewall at home here, based off of this BSD Now
            tutorial. Having set up a couple of OpenBSD routers before, either based on old laptops, bulky old
            power-sucking desktops or completely over-specced machines like the Intel NUC, I wanted to get some kind of
            BSD onto a low-powered ARM board and use that instead.”
            “I&#39;ve had a couple of Cubietrucks lying around for a while now, I&#39;ve used them in a couple of art
            installations, running Debian and Pure Data, but over all they&#39;ve been a bit disappointing. It&#39;s
            more the manufacturer&#39;s fault but they require blobs for the graphics and audio, which Debian won&#39;t
            allow, so as a multimedia board they&#39;re dud for video, and only passable for audio work with a usb sound
            card. So they&#39;ve been collecting dust.”
            “Only thing missing is a second NIC, luckily I had an Apple USB-&amp;gt;Ethernet dongle lying around, which
            when I bought it was the cheapest thing I could find on eBay that OpenBSD definitely supported. There, and
            on NetBSD, it&#39;s supported by the axe(4) driver. USB 2.0 works fine for me as I live in Australia and my
            ISP can only give me 30Mbps, so this should do for the forseeable future.”
            + The article then walks through installing and configuring NetBSD
            + Configuration includes: pf, unbound, and dhcpd
            “This project has been really fun, I started with basically no experience with NetBSD and have finished with
            a really useful, low-powered and robust appliance. It&#39;s a testament to the simplicity of the NetBSD
            system, and the BSD design principles in general, that such a novice as myself could figure this out. The
            NetBSD project has easily the most polished experience on Allwinner ARM boards, even Debian doesn&#39;t make
            it this easy. It&#39;s been a joy running the system, it has the bits I love from OpenBSD; ksh(1), tmux(1),
            an http daemon in base and of course, pf(4). This is mixed with some of the pragmatism I see in FreeBSD; a
            willingness to accept blobs if that really is the only way to boot, or get audio, or a video console.”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://callfortesting.org/bhyve-boot-environments/&quot;&gt;bhyve-Bootable Boot
            Environments&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We have a lengthy article also today from our friend Michael Dexter, who asks the basic question
            “What if multibooting and OS upgrades weren&#39;t horrible?”&lt;/li&gt;
            &lt;li&gt;No doubt if you’ve been a frequent listener to this show, you’ve heard Allan or Myself talking
            about ZFS Boot Environments, and how they can “change your life”.&lt;/li&gt;
            &lt;li&gt;Well today Michael goes further into detail on how the BE’s work, and how they can be leveraged to
            do neat things, like installing other versions of an operating system from the original running system.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“If you are reading this, you have probably used a personal computer with a BSD or GNU/Linux
            operating system and at some point attempted to multiboot between multiple operating systems on the same
            computer. This goal is typically attempted with complex disk partitioning and a BSD or GNU/Linux boot loader
            like LILO or GRUB, plus several hours of frustrating experimentation and perhaps data loss. While exotic OS
            experimentation has driven my virtualization work since the late 1990s, there are very pragmatic reasons for
            multibooting the same OS on the same hardware, notable for updates and failback to &quot;known good&quot;
            versions. To its credit, FreeBSD has long had various strategies including the NanoBSD embedded system
            framework with primary and secondary root partitions, plus the nextboot(8) utility for selecting the &quot;next&quot;
            kernel with various boot parameters. Get everything set correctly and you can multiboot &quot;with impunity&quot;.&lt;/p&gt;

            &lt;p&gt;“That&#39;s a good start, and over time we have seen ZFS &quot;boot environments&quot; be used by
            PC-BSD and FreeNAS to allow for system updates that allow one to fall back to previous versions should
            something go wrong. Hats off to these efforts but they exist in essentially purpose-built appliance
            environments. I have long sensed that there is more fun to be had here and a wonderful thing happened with
            FreeBSD 10.3 and 11.0: Allan Jude added a boot environment menu to the FreeBSD loader”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;From here Michael takes us through the mechanical bits of actually creating a new ZFS dataset (BE)
            and performing a fresh FreeBSD 10.3 installation into this new boot-environment. &lt;/li&gt;
            &lt;li&gt;The twist comes at the end, where he next sets up the BE to be a root NFS for booting in bhyve!
            This is interesting and gives you a way to test booting into your new environment via a VM, before rebooting
            the host directly into it.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Edicarla Andrade &amp;amp; Vin&#237;cius Zavam - &lt;a href=&quot;https://twitter.com/egypcio&quot;&gt;@egypcio&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;BSD-Powered Robots&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/users/2016-June/249717.html&quot;&gt;Tomohiro
            Kasumi explains what “@@” means, in the context of the Hammer filesystem&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;A post from the Dragonfly users’ mailing list about what the @@ construct means in the Hammer
            filesystem&lt;/li&gt;
            &lt;li&gt;“@@ represents the existence of a PFS which is logically separated pseudo filesystem space within
            HAMMER&#39;s B-Tree”&lt;/li&gt;
            &lt;li&gt;“HAMMER only has 1 large B-Tree per filesystem (not per PFS), so all the PFS exist within that
            single B-Tree. PFS are separated by localization parameter which is one of the B-Tree keys used to lookup
            the tree.”&lt;/li&gt;
            &lt;li&gt;Each substring in &quot;@@-1:00001&quot; means:

            &lt;ol&gt;
            &lt;li&gt;&quot;@@&quot; means it&#39;s a PFS or snapshot.&lt;/li&gt;
            &lt;li&gt;&quot;-1&quot; means it&#39;s a master.&lt;/li&gt;
            &lt;li&gt;&quot;:&quot; is just a separator.&lt;/li&gt;
            &lt;li&gt;&quot;00001&quot; means it&#39;s PFS#1, where PFS#0 is the default PFS created on newfs. There is
            no &quot;00000&quot; because that&#39;s what&#39;s mounted on /HAMMER. PFS# is used for localization
            parameter.&lt;/li&gt;
            &lt;/ol&gt;&lt;/li&gt;
            &lt;li&gt;“Localization parameter has the highest priority when inserting or looking up B-Tree elements, so
            fs elements that belong to the same PFS# tend to be localized (clustered) within the B-Tree”&lt;/li&gt;
            &lt;li&gt;There is also a note about how snapshots are named: &quot;@@0x00...&quot;&lt;/li&gt;
            &lt;li&gt;A user points out that having : in the path can confuse some applications, such as in the case of
            adding the current directory or a relative path to the $PATH environment variable, which is a colon
            delimited list of paths&lt;/li&gt;
            &lt;li&gt;This seems quite a bit more confusing that the datasets created by ZFS, but they might have other
            useful properties&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.freebsd.org/releases/11.0R/schedule.html&quot;&gt;FreeBSD 11.0
            nearing RC1&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve all been eagerly awaiting the pending release of FreeBSD 11.0, and the schedule has now been
            updated!&lt;/li&gt;
            &lt;li&gt;The first release candidate is slated for July 29th!&lt;/li&gt;
            &lt;li&gt;If all goes well (and we stick to schedule) there will be another RC2 and possible RC3 release,
            before 11.0 officially drops near the end of August.&lt;/li&gt;
            &lt;li&gt;Start playing with those builds folks, be sure to send your feedback to the team to make this the
            best .0 release ever!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://ecc-comp.blogspot.com/2016/06/tensorflow-on-freebsd.html&quot;&gt;TensorFlow
            on FreeBSD&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Next we have a blog post about the experience of a “new” FreeBSD user trying to deploy some
            non-ported software to his new system.&lt;/li&gt;
            &lt;li&gt;Specifically he was interested in running TensorFlow, but not doing a port himself, because in his
            words: &lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“First, I apologize for not supplying a port archive myself. After reading the FreeBSD handbook for
            creating a port, it&#39;s too complex of a task for me right now. I&#39;ve only been using FreeBSD for two
            weeks. I would also not like to waste anyone&#39;s time giving them a terrible port archive and mess up
            their system.”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;First of all, good ports are often born out of bad ports! Don’t let the porting framework daunt
            you, give it a go, since that&#39;s the only way you are going to learn how to write “good” ports over time.
            The porters-handbook is a good first place to start, plus the community usually is very helpful in providing
            feedback.&lt;/li&gt;
            &lt;li&gt;He then walks us through the changes made to the TensorFlow code (starting with the assumption
            that OSX was a good “flavor” to begin porting from) and ultimately compiling. &lt;/li&gt;
            &lt;li&gt;This ends up with the creation of a pip package which works!&lt;/li&gt;
            &lt;li&gt;A good tutorial, and also very similar to what goes on in the porting process. With this write-up
            perhaps somebody will take up creating a port of it… hint hint!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://jamesdeagle.blogspot.ca/2016/06/netbsd-new-beginning.html&quot;&gt;NetBSD:
            A New Beginning?&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We don’t get enough NetBSD news at times, but this post by James Deagle talks about his adventure
            with NetBSD 7.0 and making it his “new beginning”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“After a few months of traipsing around the worlds of SunOS and Linux, I&#39;m back to NetBSD for
            what I hope will be a lengthy return engagement. And while I&#39;m enamored of NetBSD for all the
            previously-mentioned reasons, I&#39;m already thinking ahead to some problems to solve, some of which have
            also been mentioned before.”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;He then goes through and lists some of the small nits he’s still running into during the
            daily workflow&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;YouTube audio - Specifically he mentions that no audio is playing, but wonders if Flash
            plays some part. (Ideally you’re not using Flash though, in which case you need to check the audio backend
            FF is using. Try PulseAudio since it seems the best supported. If pulse is already enabled, install
            ‘pavucontrol’ to make sure audio is playing to the correct sound device)&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;Slow gaming performance (TuxKart and Celestia) - Check DRI / Xorg? Or is it CPU bound?&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;Lastly some unspecified Wireless issues, which typically end up being driver related. (Or
            use another chipset)&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;Beastie Bits&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://reproducible.debian.net/netbsd/netbsd.html&quot;&gt;Reproducible
            NetBSD? 77.7% of the way there&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://gist.github.com/zg/38a3afa112ddf7de4912aafc249ec82f&quot;&gt;Create
            FreeBSD virtual machine using qemu. Run the VM using xhyve.&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://joshcummings.net/pub/FreeBSD&quot;&gt;FreeBSD PowerPC 32bit pkg
            repository (unofficial). ~19,500 packages, more to come&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://mail-index.netbsd.org/netbsd-advocacy/2016/05/16/msg000706.html&quot;&gt;NetBSD
            machines at Open Source Conference 2016 Gunma&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://arstechnica.com/apple/2016/06/a-zfs-developers-analysis-of-the-good-and-bad-in-apples-new-apfs-file-system/&quot;&gt;Adam
            Leventhal (of ZFS and DTrace) does an analysis of APFS &lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://lists.nycbug.org/pipermail/semibug/2016-June/000106.html&quot;&gt;SemiBug
            June meeting summary&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;[KnoxBug Meeting] (http://knoxbug.org/content/2016-07-26)&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/nuYTzaG6&quot;&gt; Andrew - iocage &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/PzY68hNS&quot;&gt; Florian - Arm + GitHub&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/JESGZjLu&quot;&gt; Clint - Synth&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/b4LAiPs4&quot;&gt; Leonardo - Translations&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/VRc8fvBk&quot;&gt; Zachary - Moving things to VMs&lt;/a&gt;
            &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>Release all the things!</title>
        <smi:episode>147</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_06_22-release_all_the_things"/>
        <id>http://www.bsdnow.tv/episodes/2016_06_22-release_all_the_things</id>
        <published>2016-06-23T11:27:52-07:00</published>
        <updated>2016-06-27T21:53:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0147.ogg"
                rel="enclosure"
                length="71775779"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0147.ogg"
                    fileSize="71775779"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/bsd-0147.mp3"
                    fileSize="48310952"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/06/bsd-0147-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:02:35" title="Headlines"/>
            <psc:chapter start="00:02:35" title="2016 FreeBSD Community Survey"
                         href="https://www.surveymonkey.com/r/freebsd2016"/>
            <psc:chapter start="00:07:15" title="ART, OpenBSDs new routing table, single thread performances"
                         href="http://www.grenadille.net/post/2016/06/17/ART-single-thread-performances"/>
            <psc:chapter start="00:14:50" title="BSDCan 2016 Playlist"
                         href="https://www.youtube.com/playlist?list=PLeF8ZihVdpFfoEV67dBSrKfA8ifpUr6qC"/>
            <psc:chapter start="00:19:57" title="Should you be scared of Unix signals?"
                         href="http://jvns.ca/blog/2016/06/13/should-you-be-scared-of-signals/"/>
            <psc:chapter start="00:25:45" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/"
                         image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:28:30" title="Interview"/>
            <psc:chapter start="00:53:15" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/"
                         image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="01:02:28" title="News Roundup"/>
            <psc:chapter start="01:02:28"
                         title="Unik – The Unikernel Compilation and Deployment Platform (uses NetBSD’s Rump)"
                         href="https://github.com/emc-advanced-dev/unik"/>
            <psc:chapter start="01:04:20" title="PkgSrc 50th Release Highlights"
                         href="http://www.jupiterbroadcasting.com/100641/release-all-the-things-bsd-now-147/"/>
            <psc:chapter start="01:06:20" title="Migrating to FreeBSD from Solaris 11"
                         href="http://justinholcomb.me/blog/2016/02/28/migration-to-freebsd-part1.html"/>
            <psc:chapter start="01:10:43" title="How to chroot www/firefox on NetBSD"
                         href="https://github.com/alnsn/localpkgsrc/tree/master/firefox-chroot"/>
            <psc:chapter start="01:13:14" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow"
                         image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="01:15:14" title="Beastie Bits"/>
            <psc:chapter start="01:15:14" title="Tredly – V1 Release Candidate"
                         href="https://github.com/tredly/tredly/releases/tag/v1.0.0-rc.1"/>
            <psc:chapter start="01:16:45"
                         title="Call for Testing – ypldap testing against OpenLDAP and Microsoft Active Directory"
                         href="http://lists.freebsd.org/pipermail/freebsd-current/2016-June/061775.html"/>
            <psc:chapter start="01:18:18" title="BSD Magazine, June 2016 Out Now"
                         href="https://bsdmag.org/"/>
            <psc:chapter start="01:19:08"
                         title="Hammer2 – Add xxhash to H2 and throw in debug stuff for performance testing"
                         href="http://lists.dragonflybsd.org/pipermail/commits/2016-June/500610.html"/>
            <psc:chapter start="01:20:24" title="chyves pre-announcement"
                         href="http://justinholcomb.me/blog/2016/06/14/chyves-project-preannouncement.html"/>
            <psc:chapter start="01:21:05" title="Feedback/Questions"/>
            <psc:chapter start="01:22:15" title="Michael – Versioning"
                         href="http://pastebin.com/1hpGrmuL"/>
            <psc:chapter start="01:27:25" title="Michael – Removing Encryption"
                         href="http://pastebin.com/2PkrMGGx"/>
            <psc:chapter start="01:28:57" title="Bostjan – PC-BSD Questions"
                         href="http://pastebin.com/q5VdmNxG"/>
            <psc:chapter start="01:34:47" title="Fong – ZFS Rollback"
                         href="http://pastebin.com/2aedLV7d"/>
            <psc:chapter start="01:37:25" title="Jochen – Docker on FBSD"
                         href="http://pastebin.com/dneVZkXc"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Glen Barber</name>
        </contributor>
        <contributor>
            <name>Peter Wemm</name>
            <uri>https://www.wemm.org/</uri>
        </contributor>
        <summary>On this episode of BSDNow, we will be talking to Glen Barber &amp; Peter Wemm of the FreeBSD RE and
            Cluster Admin teams! That plus our re-cap of BSDCan and the latest news, all on your place to B...SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 147: Release all the things!&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.surveymonkey.com/r/freebsd2016&quot;&gt;2016 FreeBSD Community Survey&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We often get comments from our listeners, “I’m not a developer, how can I help out”?&lt;/li&gt;
            &lt;li&gt;Well today is your chance to do something. The FreeBSD Foundation has its 2016 Community Survey
            online, where they are asking for feedback from
            you!&lt;/li&gt;
            &lt;li&gt;I just did the survey, it’ll take you about 5 minutes, but gives you a chance to provide valuable
            feedback to the foundation about things that
            are important to you.&lt;/li&gt;
            &lt;li&gt;Be sure to answer in as much detail as possible and the foundation will review and use this
            feedback for its operations going forward.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.grenadille.net/post/2016/06/17/ART-single-thread-performances&quot;&gt;ART,
            OpenBSDs new routing table, single thread performances&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;OpenBSD has changed the way routes are looked up in the kernel as part of their path to an SMP
            networking stack&lt;/li&gt;
            &lt;li&gt;The “Allotment Routing Table” (ART) is a performance tradeoff, where more memory is used to store
            the routing table, in exchange for faster
            lookups&lt;/li&gt;
            &lt;li&gt;With this new arrangement, a full BGP routing table will grow from 130MB to 180MB of memory&lt;/li&gt;
            &lt;li&gt;“ART is a free multibit trie based routing table. To keep it simple, it can be seen as using more
            memory for fewer CPU cycles. In other words,
            we get a faster lookup by wasting memory. The &lt;a href=&quot;http://www.hariguchi.org/art/art.pdf&quot;&gt;original
            paper&lt;/a&gt; presents some performance comparisons between
            two ART configurations and the BSD Radix. But how does this apply to OpenBSD?”&lt;/li&gt;
            &lt;li&gt;“I asked Hrvoje Popovski to run his packet forwarding test on his Xeon box (E5-2620 v2 @ 2.10GHz,
            2400.34 MHz) with ix(4) (82599) interfaces.
            The test setup consist of three machines with the OpenBSD box in the middle”&lt;/li&gt;
            &lt;li&gt;“The simulations have been performed with an OpenBSD -current from June 9th. The machine is
            configured with pf(4) disabled in order to force a
            single route lookup for every IPv4 packet. Based on the result of the lookup the kernel decide if it should
            forward, deliver or drop the packet”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLeF8ZihVdpFfoEV67dBSrKfA8ifpUr6qC&quot;&gt;BSDCan
            2016 Playlist&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The complete set of videos from BSDCan is online and ready to be consumed&lt;/li&gt;
            &lt;li&gt;Remember the good-ole days where we would wait months (or years) to get videos posted from
            conferences?&lt;/li&gt;
            &lt;li&gt;Well, who are we kidding, some conferences STILL do that, but we can’t count BSDCan among them.
            &lt;/li&gt;
            &lt;li&gt;Only two weeks out from this years exciting BSDCan, and &lt;em&gt;all&lt;/em&gt; the videos have
            now landed on YouTube.&lt;/li&gt;
            &lt;li&gt;Granted, this is no substitute for actually being at the conference, but even if you attended you
            probably missed quite a few of the talks.&lt;/li&gt;
            &lt;li&gt;There are no videos of the hallway track, which is the best part of the conference&lt;/li&gt;
            &lt;li&gt;Except the dinner discussion of course.&lt;/li&gt;
            &lt;li&gt;and don’t forget the hacker lounge&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://jvns.ca/blog/2016/06/13/should-you-be-scared-of-signals/&quot;&gt;Should
            you be scared of Unix signals?&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Do you know much about UNIX Signals?&lt;/li&gt;
            &lt;li&gt;Are you afraid of their complexity? &lt;/li&gt;
            &lt;li&gt;Do you know there are signals other than SIGKILL?&lt;/li&gt;
            &lt;li&gt;This article talks about the practical implications of signals from a programming perspective&lt;/li&gt;
            &lt;li&gt;The things you need to consider when dealing with signals&lt;/li&gt;
            &lt;li&gt;Basically, you register a “signal handler”, the function that will be run when a signal arrives&lt;/li&gt;
            &lt;li&gt;As you program is running, if a signal arrives, your program will be interrupted. Its current
            state will be saved and any system calls in progress
            will return EINTR (Error, Interrupted), then your signal handler will be run.&lt;/li&gt;
            &lt;li&gt;Once the signal handler is complete, the state of your application will be restored, and execution
            will resume&lt;/li&gt;
            &lt;li&gt;As long as your program properly handles this interruption, and errors that might result from it
            (getting EINTR from a read() call, instead of the
            data you expected), then everything should be fine.&lt;/li&gt;
            &lt;li&gt;Of course, you need to be careful what you do inside your signal handler, as if you modify any
            variables or state in your application, it might be
            very confused when it resumes.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Glen and Peter-&lt;/h2&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/emc-advanced-dev/unik&quot;&gt;Unik - The Unikernel
            Compilation and Deployment Platform (uses NetBSD&#39;s Rump)&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve talked a bit about NetBSD’s RUMP (unikernel) in the past, including articles on how to
            deploy services using it.&lt;/li&gt;
            &lt;li&gt;Now we have an interesting project which makes the process super-easy, and dare-we-say almost
            “Docker-Like?”&lt;/li&gt;
            &lt;li&gt;The Unik project has a fairly complete walkthrough right on their GitHub project page, including
            details on installation and creating your own
            unikernel containers. &lt;/li&gt;
            &lt;li&gt;In addition, it provides instructions on boot-strapping your own Go/Node.js/Python/Java
            applications, and supports out of Box VCenter / AWS / Qemu
            / VirtualBox providers.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;&quot;&gt;PkgSrc 50th Release Highlights&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;pkgsrc is celebrating its 50th release, and to highlight this, they have posted a series of
            interviews from people who have been active in the
            project&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://blog.netbsd.org/tnf/entry/pkgsrc_50th_release_interviews_jonathan&quot;&gt;pkgsrc
            50th release interviews - Jonathan Perkin&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://blog.netbsd.org/tnf/entry/pkgsrc_50th_release_interviews_ryo&quot;&gt;pkgsrc
            50th release interviews - Ryo ONODERA&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://blog.netbsd.org/tnf/entry/pkgsrc_50th_release_interview_with&quot;&gt;pkgsrc
            50th release interviews - Joerg Sonnenberg&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://blog.netbsd.org/tnf/entry/pkgsrc_50th_release_interviews_sevan&quot;&gt;pkgsrc
            50th release interviews - Sevan Janiyan&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://justinholcomb.me/blog/2016/02/28/migration-to-freebsd-part1.html&quot;&gt;Migrating
            to FreeBSD from Solaris 11&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://justinholcomb.me/blog/2016/03/12/migration-to-freebsd-part2.html&quot;&gt;Part
            2&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://justinholcomb.me/blog/2016/03/19/migration-to-freebsd-part3.html&quot;&gt;Part
            3&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://justinholcomb.me/blog/2016/03/26/migration-to-freebsd-part4.html&quot;&gt;Part
            4&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://justinholcomb.me/blog/2016/04/03/migration-to-freebsd-part5.html&quot;&gt;Part
            5&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://github.com/alnsn/localpkgsrc/tree/master/firefox-chroot&quot;&gt;How to
            chroot www/firefox on NetBSD&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Looking for a jail-like method of running FireFox on NetBSD? (Or possibly other BSDs?)&lt;/li&gt;
            &lt;li&gt;We have a github repo with details on how to setup and run FireFox using a chroot using a
            “webuser” account for safety. &lt;/li&gt;
            &lt;li&gt;Think of this as a jail alternative, may be useful on systems with no jail support.&lt;/li&gt;
            &lt;li&gt;Of interest is the method used to do X forwarding. It uses Xorg TCP listen option (which is often
            off by default for security reasons). Perhaps SSH
            X forwarding would be a better alternative. (Or nullfs mounts of /tmp)&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;Beastie Bits&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://github.com/tredly/tredly/releases/tag/v1.0.0-rc.1&quot;&gt;Tredly - V1
            Release Candidate&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://lists.freebsd.org/pipermail/freebsd-current/2016-June/061775.html&quot;&gt;Call
            for Testing - ypldap testing against OpenLDAP and Microsoft Active
            Directory&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://bsdmag.org/&quot;&gt;BSD Magazine, June 2016 Out Now&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/commits/2016-June/500610.html&quot;&gt;Hammer2
            - Add xxhash to H2 and throw in debug stuff for performance
            testing&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://justinholcomb.me/blog/2016/06/14/chyves-project-preannouncement.html&quot;&gt;chyves
            pre-announcement&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/1hpGrmuL&quot;&gt; Michael - Versioning &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/2PkrMGGx&quot;&gt; Michael - Removing Encryption &lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/q5VdmNxG&quot;&gt; Bostjan - PC-BSD Questions&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/2aedLV7d&quot;&gt; Fong - ZFS Rollback &lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/dneVZkXc&quot;&gt; Jochen - Docker on FBSD&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>Music to Beastie’s ears</title>
        <smi:episode>146</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_06_16-music_to_beasties_ears"/>
        <id>http://www.bsdnow.tv/episodes/2016_06_16-music_to_beasties_ears</id>
        <published>2016-06-16T11:35:48-07:00</published>
        <updated>2016-06-17T08:25:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0146.ogg"
                rel="enclosure"
                length="55931989"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jnite/bsd-0146.ogg"
                    fileSize="55931989"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/bsd-0146.mp3"
                    fileSize="30941613"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/06/bsd-0146-v.jpg"/>
        </media:group>
        <psc:chapters version="1.1">
            <psc:chapter start="00:01:07" title="Headlines"/>
            <psc:chapter start="00:01:07" title="BSDCan Recap and Live Stream Videos"
                         href="http://www.bsdcan.org/2016/"/>
            <psc:chapter start="00:10:48" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/"
                         image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:12:48" title="Media Coverage of Microsoft + FreeBSD story"
                         href="https://azure.microsoft.com/en-us/blog/freebsd-now-available-in-azure-marketplace/"/>
            <psc:chapter start="00:16:20" title="Select works poorly"
                         href="http://www.tedunangst.com/flak/post/select-works-poorly"/>
            <psc:chapter start="00:19:39" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/"
                         image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:21:48" title="Interview"/>
            <psc:chapter start="00:52:15" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow"
                         image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="00:54:05" title="News Roundup"/>
            <psc:chapter start="00:54:05" title="Timeline of libexpat random vulnerability"
                         href="http://www.tedunangst.com/flak/post/timeline-of-libexpat-random-vulnerability"/>
            <psc:chapter start="00:55:58" title="Do you use FreeBSD as web server? Why or why not?"
                         href="https://news.ycombinator.com/item?id=11804565"/>
            <psc:chapter start="00:56:20" title="20 years of NetBSD code Bloat"
                         href="http://kristerw.blogspot.sg/2016/05/20-years-of-netbsd-code-bloat.html"/>
            <psc:chapter start="00:58:00" title="HP Chromebook 13 now booting OpenBSD"
                         href="https://jcs.org/statuses/2016/06/08/740606952149942272/"/>
            <psc:chapter start="00:58:26" title="UNIX for Poets"
                         href="https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf"/>
            <psc:chapter start="01:01:34" title="Comparing live version upgrade methods"
                         href="https://distrowatch.com/weekly.php?issue=20160530#upgrades"/>
            <psc:chapter start="01:02:35" title="My life with FreeBSD on a Thinkpad X220"
                         href="https://www.reddit.com/r/BSD/comments/4n3flx/my_life_with_freebsd_on_a_thinkpad_x220/"/>
        </psc:chapters>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Hans Petter Selasky</name>
            <email>hps@freebsd.org</email>
        </contributor>
        <summary>Kris is on vacation this week, so allan flies solo, provides a recap of BSDCan &amp; covers a boatload
            of news including Microsoft providing support &amp; SLAs for BSD, how terrible select() may be, an interview
            with Hans Petter Selasky about designing the USB drivers for FreeBSD &amp; more!
        </summary>
        <content type="html">&lt;h1&gt;Episode 146: Music to Beastie’s ears&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.bsdcan.org/2016/&quot;&gt;BSDCan Recap and Live Stream Videos&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://www.openbsd.org/papers&quot;&gt;OpenBSD BSDCan 2016 papers now available&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://allanjude.com/bsd/BSDCan2016_-_GELIBoot.pdf&quot;&gt;Allan’s slides &lt;/a&gt;
            &lt;a href=&quot;http://allanjude.com/bsd/AsiaBSDCon2016_geliboot_pdf1a.pdf&quot;&gt;and Paper &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=LFgxAHkrSTg&quot;&gt;Michael W Lucas presents
            Allan with a gift &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://blather.michaelwlucas.com/archives/2698&quot;&gt;“FreeBSD Mastery:
            Advanced ZedFS” &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Highlighted Tweets:

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/Keltounet/status/740344735194320896&quot;&gt;Groff Arrives at
            BSDCan &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/freebsdfndation/status/742456950676393984&quot;&gt;FreeBSD
            Foundation recognizes the contributions of Bryan Drewery, Rod Grimes, Warren Block, &amp;amp; Gleb Smirnoff
            &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/__briancallahan/status/741854476340858880&quot;&gt;A moment
            of silence and shots in memory in Benjamin Perrault @creepingfur &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/Keltounet/status/741763867471155201&quot;&gt;@gvnn3 sells the
            FreeBSD Foundation shirt off of his back for Charity &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/cperciva/status/741375414967410688&quot;&gt;Michael W. Lucas
            asks Matt Ahrens how to pronounce ZFS, “You can pronounce ZFS however you like, but if you pronounce it
            &#39;reiserfs&#39;, people might be confused.” &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/BSDCan/status/741420633007874050&quot;&gt;Sysadmin T-Shirt
            &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/SeanChittenden/status/740904105388978176&quot;&gt;FreeBSD Dev
            Summit ran out of room on the chalkboards listing accomplishments of 11.0 &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/Keltounet/status/740928627471159296&quot;&gt;List of things
            people have or want for FreeBSD 12 &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/kprovst/status/741322268480049152?cn=bWVudGlvbg%3D%3D&amp;amp;refsrc=email&quot;&gt;Matt
            Ahrens signing Allan’s ZFS book &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/cperciva/status/741707948469157889&quot;&gt;FreeBSD’s new
            marketing strategy &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/HippyWizard/status/741768670704066560&quot;&gt;Charity
            Auction: systemd whoopie cushion &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/juliefriday/status/741948048788586496&quot;&gt;Embarass
            OpenBSD’s @HenningBrauer by donating $10 to charity for a selfie with him wearing a Linux t-shirt &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/GroffTheBSDGoat/status/742415390798716928&quot;&gt;@GroffTheBSDGoat
            changes handlers, from @HenningBrauer to @GavinAtkinson &lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=AOidjSS7Hsg&quot;&gt;Day 1 Video &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=z7pDnBO5wSM&quot;&gt;Day 2 Video &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=z7pDnBO5wSM&amp;amp;feature=youtu.be&amp;amp;list=PLeF8ZihVdpFfoEV67dBSrKfA8ifpUr6qC&amp;amp;t=4440&quot;&gt;Allan’s
            GELIBoot talk (day 2) &lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/freebsd-now-available-in-azure-marketplace/&quot;&gt;Media
            Coverage of Microsoft + FreeBSD story&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Microsoft has released their own custom image of FreeBSD 10.3 for the Azure Cloud&lt;/li&gt;
            &lt;li&gt;“This means that not only can you quickly bring-up a FreeBSD VM in Azure, but also that in the
            event you need technical support, Microsoft support engineers can assist.”&lt;/li&gt;
            &lt;li&gt;“Microsoft is the publisher of the FreeBSD image in the marketplace rather than the FreeBSD
            Foundation. The FreeBSD Foundation is supported by donations from the FreeBSD community, including companies
            that build their solutions on FreeBSD. They are not a solution provider or an ISV with a support
            organization but rather rely on a very active community that support one another. In order to ensure our
            customers have an enterprise SLA for their FreeBSD VMs running in Azure, we took on the work of building,
            testing, releasing and maintaining the image in order to remove that burden from the Foundation. We will
            continue to partner closely with the Foundation as we make further investments in FreeBSD on Hyper-V and in
            Azure.”&lt;/li&gt;
            &lt;li&gt;&quot;It&#39;s quite a significant milestone for FreeBSD community and for Microsoft to publish a
            supported FreeBSD image on Azure Marketplace. We really appreciate Microsoft&#39;s commitment and investment
            in FreeBSD project&quot;. - Justin T. Gibbs, President of FreeBSD Foundation&lt;/li&gt;
            &lt;li&gt;Microsoft took a FreeBSD 10.3-RELEASE image and added additional patches, most of which they have
            upstreamed but that were too late for the regular 10.3 release cycle.&lt;/li&gt;
            &lt;li&gt;Rather than requiring users to use a snapshot of the stable/10 branch, which would complicate the
            user experience, and complicate the job of the Microsoft support engineers, they created their own
            “certified” release&lt;/li&gt;
            &lt;li&gt;This allows Microsoft to selectively deploy errata fixes to the image as well&lt;/li&gt;
            &lt;li&gt;It is not clear how this affects update mechanisms like freebsd-update(8)&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://www.theregister.co.uk/2016/06/09/microsoft_freebsd/&quot;&gt;The Register
            &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://www.theinquirer.net/inquirer/news/2461070/microsoft-creates-own-distribution-of-freebsd-for-azure-developers&quot;&gt;The
            Inquirer &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://www.infoworld.com/article/3082090/open-source-tools/is-microsoft-publishing-its-own-freebsd-yes-and-no.html&quot;&gt;Infoworld
            &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://thehackernews.com/2016/06/microsoft-azure-freebsd.html&quot;&gt;The Hacker
            News &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://windowsreport.com/microsoft-freebsd-10-3-ready-made-vm-image-azure/&quot;&gt;Windows
            Report &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://news.thewindowsclub.com/microsoft-freebsd-operating-system-84375/&quot;&gt;Windows
            Club &lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/select-works-poorly&quot;&gt;Select works
            poorly&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;“At the bottom of the OpenBSD man page for select is a little note. “Internally to the kernel,
            select() and pselect() work poorly if multiple processes wait on the same file descriptor.” There’s a
            similar warning in the poll man page. Where does this warning come from and what does it mean?”&lt;/li&gt;
            &lt;li&gt;Ted found that at first glance, OpenBSD’s select() appears to be quite bad:&lt;/li&gt;
            &lt;li&gt;“whenever some data gets written, we call wakeup(&amp;amp;selwait);. Based on what we’ve seen so
            far, one can conclude that this is likely to be inefficient. Every time any socket has some data available,
            we wake up every selecting process in the system. Works poorly indeed.”&lt;/li&gt;
            &lt;li&gt;After further investigation, it turns out to not be quite as bad&lt;/li&gt;
            &lt;li&gt;When the select() is first setup, the PID of the process that cares about the FD is recorded in
            the selinfo struct&lt;/li&gt;
            &lt;li&gt;If a second process runs select() on the same FD, the SI_COLL (Select Collision) flag is set on
            the selinfo struct&lt;/li&gt;
            &lt;li&gt;When selwakeup() is called, if SI_COLL is set, all select()ing processes are woken up, and the
            sysctl kern.nselcoll is incremented. If the flag is not set, and only a single PID is waiting for activity
            on that FD, only that process is woken up&lt;/li&gt;
            &lt;li&gt;“This is not an intractable problem. kevent avoids it entirely. Other implementations may too. But
            practically, does it need to be solved? My laptop says it’s happened 43 times. A server with substantially
            more uptime says 0. Doesn’t seem so bad.”&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Hans Petter Selasky - &lt;a href=&quot;mailto:hps@freebsd.org&quot;&gt;hps@freebsd.org&lt;/a&gt;
            / &lt;a href=&quot;https://twitter.com/user&quot;&gt;@twitter&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;Designing FreeBSD’s USB drivers, hooking up a piano to FreeBSD &amp;amp; more!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/timeline-of-libexpat-random-vulnerability&quot;&gt;Timeline
            of libexpat random vulnerability&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=11804565&quot;&gt;Do you use
            FreeBSD as web server? Why or why not?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://kristerw.blogspot.sg/2016/05/20-years-of-netbsd-code-bloat.html&quot;&gt;20
            years of NetBSD code Bloat&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://jcs.org/statuses/2016/06/08/740606952149942272/&quot;&gt;HP
            Chromebook 13 now booting OpenBSD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://web.stanford.edu/class/cs124/lec/124-UnixForPoets.pdf&quot;&gt;UNIX
            for Poets &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://distrowatch.com/weekly.php?issue=20160530#upgrades&quot;&gt;Comparing
            live version upgrade methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/BSD/comments/4n3flx/my_life_with_freebsd_on_a_thinkpad_x220/&quot;&gt;My
            life with FreeBSD on a Thinkpad X220&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>At the Core of it all</title>
        <smi:episode>145</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="https://www.bsdnow.tv/episodes/2016_06_08-at_the_core_of_it_all"/>
        <id>http://www.bsdnow.tv/episodes/2016_06_08-at_the_core_of_it_all</id>
        <published>2016-06-09T10:37:18-07:00</published>
        <updated>2016-06-12T08:41:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0145.ogg"
                rel="enclosure"
                length="55931989"
                type="audio/ogg"/>
        <psc:chapters version="1.1">
            <psc:chapter start="00:02:21" title="AD: DigitalOcean - Simple Cloud Hosting, Built for Developers"
                         href="http://www.digitalocean.com/"
                         image="http://www.bsdnow.tv/images/2.png"/>
            <psc:chapter start="00:04:31" title="Interview"/>
            <psc:chapter start="00:29:44" title="AD: iXsystems - Enterprise Servers and Storage for Open Source"
                         href="http://www.ixsystems.com/bsdnow/"
                         image="http://www.bsdnow.tv/images/1.png"/>
            <psc:chapter start="00:33:24" title="Beastie Bits"/>
            <psc:chapter start="00:33:28" title="file considered harmful"
                         href="http://www.tedunangst.com/flak/post/file-considered-harmful"/>
            <psc:chapter start="00:36:41" title="An open source talk on ZFS"
                         href="https://github.com/problame/talkintrozfs2016"/>
            <psc:chapter start="00:38:08" title="ARMv7 now has a bootloader"
                         href="http://undeadly.org/cgi?action=article&amp;sid=20160529145411"/>
            <psc:chapter start="00:39:03" title="SHA256/512 speed improvements in FreeBSD 11"
                         href="https://svnweb.freebsd.org/base?view=revision&amp;revision=300966"/>
            <psc:chapter start="00:41:20" title="pkgsrc 50th release interviews – Joerg Sonnenberg"
                         href="http://blog.netbsd.org/tnf/entry/pkgsrc_50th_release_interview_with"/>
            <psc:chapter start="00:44:22" title="DFly versus PC-BSD on a Laptop"
                         href="http://lists.dragonflybsd.org/pipermail/users/2016-May/249636.html"/>
            <psc:chapter start="00:46:24"
                         title="FreeBSD ifconfig can print subnet masks in CIDR or dotted-quad, finally"
                         href="https://svnweb.freebsd.org/base?view=revision&amp;revision=301059"/>
            <psc:chapter start="00:49:19" title="AD: Tarsnap - Online Backups for the Truly Paranoid"
                         href="http://www.tarsnap.com/bsdnow"
                         image="http://www.bsdnow.tv/images/3.png"/>
            <psc:chapter start="00:50:52" title="Feedback/Questions"/>
            <psc:chapter start="00:50:56" title="Eli – Getting rid of ports?" href="http://pastebin.com/4Y6VYSyN"/>
            <psc:chapter start="00:52:08" title="Morgan – Best way to admin jails?"
                         href="http://pastebin.com/w8hsMtbc"/>
            <psc:chapter start="00:55:18" title="Simon – Use existing pkgs in poudriere"
                         href="http://pastebin.com/mqSJk0pP"/>
            <psc:chapter start="00:58:38" title="Pete – Lots of Q’s" href="http://pastebin.com/1M7HLAXs"/>
            <psc:chapter start="01:02:22" title="Van – Made the switch" href="http://pastebin.com/NTVBvtC5"/>
        </psc:chapters>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0145.ogg"
                    fileSize="55931989"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jbmirror/bsd-0145.mp3"
                    fileSize="34514955"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/06/bsd-0145-v.jpg"/>
        </media:group>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Benno Rice</name>
            <email>benno@freebsd.org</email>
            <uri>https://twitter.com/jeamland</uri>
        </contributor>
        <summary>It’s BSDCan time! Allan &amp; I are both enjoying what is sure to be a super-busy week, but don’t think
            we’ve forgotten about you. We have an interview with Benno Rice to help get you through until the next
            live-episode. So stick around, the show is coming your way right now.
        </summary>
        <content type="html">&lt;h1&gt;Episode 145: At the Core of it all&lt;/h1&gt;

            &lt;h2&gt;Interview - Benno Rice - &lt;a href=&quot;mailto:benno@freebsd.org&quot;&gt;benno@freebsd.org&lt;/a&gt;
            / &lt;a href=&quot;https://twitter.com/jeamland&quot;&gt;@jeamland&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;Manager, OS &amp;amp; Networking at EMC Isilon&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=dIageYT0Vgg&quot;&gt;Emily Dunham:
            Community Automation &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;iXsystems&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;1U Rackmount Server - 4 Bay Hot-Swap SAS/SATA Drive Bays 400W Redundant Power Supply -
            Single Socket Embedded CPU (48 cores) - 8 DIMM Slots with
            16GB DIMMs for a total of 128GB RAM – Dual Gigabit LAN, Dual 10GbE SFP+ and 1 x 40Gb QSFP+ port, (1) PCI-E
            Expansion Slots + IPMI Dedicated LAN -
            Cavium ThunderX ARM CN8890 48 Core ThunderX CPU - 2.5GHz per core&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;System has 128GB RAM, 4 x 2TB SATA HDD, Additional Intel i350 (2 x 1GbE) &lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/file-considered-harmful&quot;&gt;file
            considered harmful&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/problame/talkintrozfs2016&quot;&gt;An open source
            talk on ZFS. “Intro to ZFS” as a set of open source slides for the community to build on, and to reuse. Go
            give this talk at your local conference. &lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160529145411&quot;&gt;ARMv7
            now has a bootloader&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://svnweb.freebsd.org/base?view=revision&amp;amp;revision=300966&quot;&gt;SHA256/512
            speed improvements in FreeBSD 11 &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.netbsd.org/tnf/entry/pkgsrc_50th_release_interview_with&quot;&gt;pkgsrc
            50th release interviews - Joerg Sonnenberg&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://lists.dragonflybsd.org/pipermail/users/2016-May/249636.html&quot;&gt;DFly
            versus PC-BSD on a Laptop&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://svnweb.freebsd.org/base?view=revision&amp;amp;revision=301059&quot;&gt;FreeBSD
            ifconfig can print subnet masks in CIDR or dotted-quad, finally &lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Feedback/Questions&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/4Y6VYSyN&quot;&gt; Eli - Getting rid of ports?&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/w8hsMtbc&quot;&gt; Morgan - Best way to admin jails?&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/mqSJk0pP&quot;&gt; Simon - Use existing pkgs in poudriere&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/1M7HLAXs&quot;&gt; Pete - Lots of Q’s&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://pastebin.com/NTVBvtC5&quot;&gt; Van - Made the switch&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
    <entry>
        <title>The PF life</title>
        <smi:episode>144</smi:episode>
        <link
                rel="alternate"
                type="text/html"
                href="http://www.bsdnow.tv/episodes/2016_06_01-the_pf_life"/>
        <id>http://www.bsdnow.tv/episodes/2016_06_01-the_pf_life</id>
        <published>2016-06-02T05:50:08-07:00</published>
        <updated>2016-06-10T08:21:00Z</updated>
        <link
                href="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0144.ogg"
                rel="enclosure"
                length="52024497"
                type="audio/ogg"/>
        <media:group>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.ogg/traffic.libsyn.com/jbmirror/bsd-0144.ogg"
                    fileSize="52024497"
                    type="audio/ogg"
                    isDefault="true"/>
            <media:content
                    url="http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jbmirror/bsd-0144.mp3"
                    fileSize="30879337"
                    type="audio/mpeg"
                    isDefault="false"/>
            <media:thumbnail
                    url="http://www.jupiterbroadcasting.com/wp-content/uploads/2016/06/bsd-0144-v.jpg"/>
        </media:group>
        <contributor>
            <name>Kris Moore</name>
            <email>kris@pcbsd.org</email>
            <uri>https://twitter.com/pcbsdkris</uri>
        </contributor>
        <contributor>
            <name>Allan Jude</name>
            <email>allan@jupiterbroadcasting.com</email>
            <uri>https://twitter.com/allanjude</uri>
        </contributor>
        <contributor>
            <name>JT</name>
            <uri>https://twitter.com/q5sys</uri>
        </contributor>
        <contributor>
            <name>Kristof Provost</name>
            <email>kp@freebsd.org</email>
            <uri>https://twitter.com/kprovst</uri>
        </contributor>
        <summary>It’s only one-week away from BSDCan, both Allan &amp; I are excited to meet some of you in person!
            However, the show keeps on chugging &amp; this week we have an interview with Kristof Provost, to tell us
            about PF improvements in FreeBSD. That plus the latest news, here on your place to B….SD!
        </summary>
        <content type="html">&lt;h1&gt;Episode 144: The PF life&lt;/h1&gt;
            &lt;h2&gt;Headlines&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.dotsecurity.io/&quot;&gt;dotSecurity 2016 - Theo de Raadt - Privilege
            Separation and Pledge&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=a_EYdzGyNWs&quot;&gt;Video&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.openbsd.org/papers/dot2016.pdf&quot;&gt;Slides&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;Interested in Privilege Separation and security in general? If so, then you are in for a treat, we
            have both the video and slides from Theo de Raadt at dotSecurity 2016.&lt;/li&gt;
            &lt;li&gt;Specifically the the talk starts off looking at Pledge (no copyright issues with the pictures I
            hope??) and how their NTP daemon uses it.&lt;/li&gt;
            &lt;li&gt;After going through some internals, Theo reveals that around 10% of programs “pledged” so far were
            found to be trying to do actions outside of their security scope.&lt;/li&gt;
            &lt;li&gt;On the future-work side, they mention going back and looking at OpenSSH privilege separation next,
            as well as working with other OS’s that may want pledge support.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://lists.freebsd.org/pipermail/freebsd-virtualization/2016-May/004471.html&quot;&gt;bhyve
            now supports UEFI GOP&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;The log awaited UEFI GOP (&lt;a href=&quot;https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface#GOP&quot;&gt;Graphics
            Output Protocol&lt;/a&gt;) features has landed in bhyve&lt;/li&gt;
            &lt;li&gt;This provides emulated graphics via an internal VNC server, allowing users to have full graphical
            access to the guest OS&lt;/li&gt;
            &lt;li&gt;This allows installation of Windows guests without needing to create a modified ISO with an
            unattended installation script&lt;/li&gt;
            &lt;li&gt;The code has not actually landed in FreeBSD head yet, but has been committed to a project branch&lt;/li&gt;
            &lt;li&gt;Following a few simple commands, you can compile the new bhyve binary on your -CURRENT system and
            get started right away&lt;/li&gt;
            &lt;li&gt;This feature is expected to be included in the upcoming FreeBSD 11.0&lt;/li&gt;
            &lt;li&gt;This commit drop also brings with it:

            &lt;ul&gt;
            &lt;li&gt;XHCI -- an emulated usb tablet device that provides exact mouse positioning in supported OSs&lt;/li&gt;
            &lt;li&gt;PS2 mouse for fallback if the guest does not support XHCI (Windows 7)&lt;/li&gt;
            &lt;li&gt;PS2 keyboard&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;“The code has been tested with Windows 7/8/8.1/10 and Server 2k12/2k16, Ubuntu 15.10, and FreeBSD
            10.3/11-CURRENT”&lt;/li&gt;
            &lt;li&gt;“For VNC clients, TightVNC, TigherVNC, and RealVNC (aka VNC Viewer) have been tested on various
            hosts. The OSX VNC client is known not to work.”&lt;/li&gt;
            &lt;li&gt;The VNC server supports an optional ‘wait’ parameter, that causes the VM to not actually boot
            until the VNC client connects, allowing you to interrupt the boot process if need be&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://justinholcomb.me/blog/2016/05/28/bhyve-uefi-gop-support.html&quot;&gt;Related
            user blog post &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://svnweb.freebsd.org/base?view=revision&amp;amp;revision=300829&quot;&gt;SVN
            commit&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://svnweb.freebsd.org/base?view=revision&amp;amp;revision=300906&quot;&gt;zfsd
            lands in FreeBSD HEAD, in time for 11.0-RELEASE&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;zfsd has been committed to FreeBSD -CURRENT in time to be included in FreeBSD 11.0&lt;/li&gt;
            &lt;li&gt;zfsd is the missing piece required to make ‘hot spares’ work properly in FreeBSD ZFS&lt;/li&gt;
            &lt;li&gt;“zfsd attempts to resolve ZFS faults that the kernel can&#39;t resolve by itself. It listens to
            devctl(4) events, which is how the kernel notifies of events such as I/O errors and disk removals. Zfsd
            attempts to resolve these faults by activating or deactivating hotspares and onlining offline vdevs.”&lt;/li&gt;
            &lt;li&gt;“The administrator never interacts with zfsd directly. Instead, he controls its behavior
            indirectly through zpool configuration. There are two ways to influence zfsd: assigning hotspares and
            setting pool properties. Currently, only the &lt;em&gt;autoreplace&lt;/em&gt; property has any effect. See
            zpool(8) for details.”&lt;/li&gt;
            &lt;li&gt;So, what example does it do?&lt;/li&gt;
            &lt;li&gt;Device Removal: “When a leaf vdev disappears, zfsd will activate any available hotspare.”&lt;/li&gt;
            &lt;li&gt;Device Arrival: “When a new GEOM device appears, zfsd will attempt to read its ZFS label, if any.
            If it matches a previously removed vdev on an active pool, zfsd will online it. Once resilvering completes,
            any active hotspare will detach automatically.”&lt;/li&gt;
            &lt;li&gt;So if you disconnect a drive, then reconnect it, it will automatically be brought back online.
            Since ZFS is smart, the resilver will only have to copy data that has changed since the device went offline.&lt;/li&gt;
            &lt;li&gt;“If the new device has no ZFS label but its physical path matches the physical path of a
            previously removed vdev on an active pool, and that pool has the autoreplace property set, then zfsd will
            replace the missing vdev with the newly arrived device. Once resilvering completes, any active hotspare will
            detach automatically.”&lt;/li&gt;
            &lt;li&gt;If the new drive is in the same slot in your hot swap array as a failed device, it will be used as
            a replacement immediately.&lt;/li&gt;
            &lt;li&gt;vdev degrade or fault events: “If a vdev becomes degraded or faulted, zfsd will activate any
            available hotspare. If a leaf vdev generates more than 50 I/O errors in a 60 second period, then zfsd will
            mark that vdev as FAULTED. zfs(4) will no longer issue any I/Os to it. zfsd will activate
            a hotspare if one is available.” Same for checksum errors.&lt;/li&gt;
            &lt;li&gt;So if zfsd detects a drive is going bad, it brings the hotspare online before it is too late&lt;/li&gt;
            &lt;li&gt;Spare addition: “If the system administrator adds a hotspare to a pool that is already degraded,
            zfsd will activate the spare.”&lt;/li&gt;
            &lt;li&gt;Resilver complete: “zfsd will detach any hotspare once a permanent replacement finishes
            resilvering.”&lt;/li&gt;
            &lt;li&gt;Physical path change: “If the physical path of an existing disk changes, zfsd will attempt to
            replace any missing disk with the same physical path, if its pool&#39;s autoreplace property is set.”&lt;/li&gt;
            &lt;li&gt;In general, this tool means less reliance on the system administrator to keep the pool healthy&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20160527203200&quot;&gt;W^X
            now mandatory in OpenBSD&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve talked a bit about W^X in the past. (Refresher: Memory being writable and executable at
            once)&lt;/li&gt;
            &lt;li&gt;Well, this major security no-no is no-more on OpenBSD. Theo has committed a change which now
            prevents violations of this policy:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“W^X violations are no longer permitted by default. A kernel log message is generated, and
            mprotect/mmap return ENOTSUP. If the sysctl(8) flag kern.wxabort is set then a SIGABRT occurs instead, for
            gdb use or coredump creation.”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;There are a few cases where you may still need W^X, which Theo points out can be enabled on a
            file-system basis.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;“W^X violating programs can be permitted on a ffs/nfs filesystem-basis, using the &quot;wxallowed&quot;
            mount option. One day far in the future upstream software developers will understand that W^X violations are
            a tremendously risky practice and that style of programming will be banished outright. Until then, we
            recommend most users need to use the wxallowed option on their /usr/local filesystem. At least your other
            filesystems don&#39;t permit such programs.”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;This is a great ability to grow, since now users can begin doing auditing of programs that violate
            this principle and making noise to upstream.&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Interview - Kristof Provost - &lt;a href=&quot;mailto:kp@freebsd.org&quot;&gt;kp@freebsd.org&lt;/a&gt;
            &lt;a href=&quot;https://twitter.com/kprovst&quot;&gt;@kprovst&lt;/a&gt;&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;pf improvements on FreeBSD&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;News Roundup&lt;/h2&gt;

            &lt;h3&gt;&lt;a href=&quot;https://ericmccorkleblog.wordpress.com/2016/05/28/freebsd-geli-support/&quot;&gt;GELI
            Support for the EFI Loader &lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;We’ve had Allan’s work to bring GELI support to the GPT / BIOS / ZFS loader for a while now, but
            the missing piece has been support for EFI.&lt;/li&gt;
            &lt;li&gt;No longer, Eric McCorkle has posted a blog entry (with relevant github links) introducing us to
            his work to bring GELI encryption support to EFI.&lt;/li&gt;
            &lt;li&gt;First the bad-news. This won’t make it into 11.0. (Maybe PC-BSD, TBD)&lt;/li&gt;
            &lt;li&gt;Next he explains why this is more than just a new feature, but a re-factor of the EFI boot code:&lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I have already written extensively about my EFI refactoring here. The reason for undertaking this
            effort, however, was driven by GELI support. Early in my work on this, I had implemented a non-EFI
            “providers” framework in boot1 in order to support the notion of disk partitions that may contain
            sub-partitions.&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;This was deeply unsatisfying to me for several reasons:

            &lt;ul&gt;
            &lt;li&gt;It implemented a lot of the same functionality that exists in the EFI framework.&lt;/li&gt;
            &lt;li&gt;It involved implementing a GPT partition driver to deal with partition tables inside GELI
            partitions (GPT detection and support is guaranteed by the EFI spec).&lt;/li&gt;
            &lt;li&gt;The interface between the EFI framework and the custom “providers” framework was awkward.&lt;/li&gt;
            &lt;li&gt;The driver was completely boot1-specific, and exporting it to something like GRUB probably
            involved a total rewrite.&lt;/li&gt;
            &lt;li&gt;Implementing it within loader was going to involve a lot of code duplication.&lt;/li&gt;
            &lt;li&gt;There was no obvious was to pass keys between boot1, loader, and the kernel.&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;With the issues known, Eric seems pleased with the results of the conversion so far:

            &lt;ul&gt;
            &lt;li&gt;The GELI driver can be extracted from the FreeBSD codebase without too much trouble.&lt;/li&gt;
            &lt;li&gt;While I was unable to go all the way to the EFI driver model, the only blocker is the bcache code,
            and once that is resolved, we can have hotplug support in the boot loader!&lt;/li&gt;
            &lt;li&gt;The boot1 and loader codebases are now sharing all the backend drivers, and boot1 has been reduced
            to one very small source file.&lt;/li&gt;
            &lt;/ul&gt;&lt;/li&gt;
            &lt;li&gt;An interesting read, looking forward to playing with EFI more in the future!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.freebsdfoundation.org/blog/faces-of-freebsd-2016-michael-lucas/&quot;&gt;Faces
            of FreeBSD 2016: Michael W. Lucas&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;On this edition of “Faces of FreeBSD”, Michael W Lucas tells the story of how he got started with
            FreeBSD&lt;/li&gt;
            &lt;li&gt;After an amusing re-telling of his childhood (The words “Purina Monkey Chow” were mentioned), he
            then tells us how he got into BSD.&lt;/li&gt;
            &lt;li&gt;His being thrown into the project may sound familiar to many: &lt;/li&gt;
            &lt;/ul&gt;

            &lt;blockquote&gt;
            &lt;p&gt;I came in at 11 PM one night and was told “The DNS administrator just got walked out the door.
            You’re the new lead DNS administrator. Make those servers work. Good luck.”&lt;/p&gt;
            &lt;/blockquote&gt;

            &lt;ul&gt;
            &lt;li&gt;From there (because he wanted more sleep), he began ripping out the systems that had been failing
            and waking him up at night. Good-bye UnixWare, Good-bye Solaris, hello BSD!&lt;/li&gt;
            &lt;li&gt;A very amusing read, check it out!&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ugct9-Mm7Ls&quot;&gt;High Availability with
            PostgreSQL on FreeBSD&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;A talk by Sean Chittenden, who we interviewed previously on episode &lt;a href=&quot;http://www.bsdnow.tv/episodes/2015_06_24-bitrot_group_therapy&quot;&gt;Episode
            95 &lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;Explains how to setup Multi Data Center High Availability for PostgreSQL using consul&lt;/li&gt;
            &lt;li&gt;Goes into how consul works, how it does the election, the gossip protocol, etc&lt;/li&gt;
            &lt;li&gt;The HA setup uses DNS Failover, and the pros and cons of that approach are discussed&lt;/li&gt;
            &lt;li&gt;Then he walks through the implementation details, and example configuration&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h3&gt;&lt;a href=&quot;http://www.bsddesktop.com/images/&quot;&gt;New FreeBSD i915 testing images&lt;/a&gt;&lt;/h3&gt;

            &lt;ul&gt;
            &lt;li&gt;Still need users to test the Linux Kernel 4.6 DRM update to FreeBSD’s graphics stack&lt;/li&gt;
            &lt;li&gt;Download the test image and write it to a USB stick and boot from it&lt;/li&gt;
            &lt;li&gt;It will not modify your installed system, it runs entirely off of the USB drive&lt;/li&gt;
            &lt;li&gt;Allows you to test the updated drivers without having to install the development branch on your
            device&lt;/li&gt;
            &lt;li&gt;ATI/AMD support will be coming shortly&lt;/li&gt;
            &lt;li&gt;Stability has been steadily improving&lt;/li&gt;
            &lt;li&gt;Matt Macy will do another announcement as soon as he&#39;s had a chance to test the newest Xorg
            bits&lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;h2&gt;Beastie Bits&lt;/h2&gt;

            &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://www.cotcli.com/post/The-Very-Basics/&quot;&gt;Comfortable on the CLI:
            Series Part 1&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://gist.github.com/gonzopancho/8e7df7a826e9a2949b36ed2a9d30312e&quot;&gt;FreeBSD
            Booting on the Netgate uFW, a smaller-than-a-raspberry-pi dual port firewall&lt;/a&gt; &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://twitter.com/gonzopancho/status/737874921435594753&quot;&gt;Picture of uFW&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://gist.github.com/gonzopancho/8f20b50487a4f7de56e99448866a147d&quot;&gt;uFW
            OpenSSL Benchmarks&lt;/a&gt; &lt;/li&gt;
            &lt;/ul&gt;

            &lt;hr&gt;

            &lt;ul&gt;
            &lt;li&gt;Send questions, comments, show ideas/topics, or stories you want mentioned on the show to &lt;a
            href=&quot;mailto:feedback@bsdnow.tv&quot;&gt;feedback@bsdnow.tv&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        </content>
    </entry>
</feed>
